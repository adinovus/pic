

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 07 08:37:07 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 11 "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 11 "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\Main.c"
    45  2007  FF72               	dw 0xFFFE & 0xFFFB & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFF7F & 0xFFFF & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_InitLCD
    47                           	FNCALL	_main,_InitI2C
    48                           	FNCALL	_main,_Set_DS1307_RTC_Time
    49                           	FNCALL	_main,_Set_DS1307_RTC_Date
    50                           	FNCALL	_main,_SetTime
    51                           	FNCALL	_main,_Get_DS1307_RTC_Time
    52                           	FNCALL	_main,_DisplayTimeToLCD
    53                           	FNCALL	_main,_Get_DS1307_RTC_Date
    54                           	FNCALL	_main,_DisplayDateOnLCD
    55                           	FNCALL	_SetTime,_Get_DS1307_RTC_Time
    56                           	FNCALL	_SetTime,_WriteCommandToLCD
    57                           	FNCALL	_SetTime,_DisplayTimeToLCD
    58                           	FNCALL	_SetTime,_Set_DS1307_RTC_Time
    59                           	FNCALL	_SetTime,_WriteStringToLCD
    60                           	FNCALL	_DisplayDateOnLCD,_WriteCommandToLCD
    61                           	FNCALL	_DisplayDateOnLCD,___awdiv
    62                           	FNCALL	_DisplayDateOnLCD,_WriteDataToLCD
    63                           	FNCALL	_DisplayDateOnLCD,___awmod
    64                           	FNCALL	_DisplayDateOnLCD,_WriteStringToLCD
    65                           	FNCALL	_DisplayTimeToLCD,_ClearLCDScreen
    66                           	FNCALL	_DisplayTimeToLCD,___awdiv
    67                           	FNCALL	_DisplayTimeToLCD,_WriteDataToLCD
    68                           	FNCALL	_DisplayTimeToLCD,___awmod
    69                           	FNCALL	_DisplayTimeToLCD,_WriteStringToLCD
    70                           	FNCALL	_ClearLCDScreen,_WriteCommandToLCD
    71                           	FNCALL	_WriteStringToLCD,_WriteDataToLCD
    72                           	FNCALL	_InitLCD,_ToggleEpinOfLCD
    73                           	FNCALL	_InitLCD,_WriteCommandToLCD
    74                           	FNCALL	_WriteDataToLCD,_ToggleEpinOfLCD
    75                           	FNCALL	_WriteCommandToLCD,_ToggleEpinOfLCD
    76                           	FNCALL	_Get_DS1307_RTC_Date,_Read_Bytes_From_DS1307_RTC
    77                           	FNCALL	_Get_DS1307_RTC_Date,___bmul
    78                           	FNCALL	_Set_DS1307_RTC_Date,___awmod
    79                           	FNCALL	_Set_DS1307_RTC_Date,___awdiv
    80                           	FNCALL	_Set_DS1307_RTC_Date,_Write_Bytes_To_DS1307_RTC
    81                           	FNCALL	_Get_DS1307_RTC_Time,_Read_Bytes_From_DS1307_RTC
    82                           	FNCALL	_Get_DS1307_RTC_Time,___bmul
    83                           	FNCALL	_Set_DS1307_RTC_Time,___awmod
    84                           	FNCALL	_Set_DS1307_RTC_Time,___awdiv
    85                           	FNCALL	_Set_DS1307_RTC_Time,_Write_Bytes_To_DS1307_RTC
    86                           	FNCALL	_Read_Bytes_From_DS1307_RTC,_I2C_Start
    87                           	FNCALL	_Read_Bytes_From_DS1307_RTC,_I2C_Write_Byte
    88                           	FNCALL	_Read_Bytes_From_DS1307_RTC,_I2C_ReStart
    89                           	FNCALL	_Read_Bytes_From_DS1307_RTC,_I2C_Read_Byte
    90                           	FNCALL	_Read_Bytes_From_DS1307_RTC,_I2C_Send_ACK
    91                           	FNCALL	_Read_Bytes_From_DS1307_RTC,_I2C_Send_NACK
    92                           	FNCALL	_Read_Bytes_From_DS1307_RTC,_I2C_Stop
    93                           	FNCALL	_Write_Bytes_To_DS1307_RTC,_I2C_Start
    94                           	FNCALL	_Write_Bytes_To_DS1307_RTC,_I2C_Write_Byte
    95                           	FNCALL	_Write_Bytes_To_DS1307_RTC,_I2C_Stop
    96                           	FNROOT	_main
    97                           	global	_pRTCArray
    98                           	global	_Temp
    99                           	global	_PORTB
   100                           psect	text573,local,class=CODE,delta=2
   101                           global __ptext573
   102  0000                     __ptext573:
   103  0006                     _PORTB	set	6
   104                           	global	_SSPBUF
   105  0013                     _SSPBUF	set	19
   106                           	global	_SSPCON
   107  0014                     _SSPCON	set	20
   108                           	global	_CARRY
   109  0018                     _CARRY	set	24
   110                           	global	_GIE
   111  005F                     _GIE	set	95
   112                           	global	_RB0
   113  0030                     _RB0	set	48
   114                           	global	_RB1
   115  0031                     _RB1	set	49
   116                           	global	_RB4
   117  0034                     _RB4	set	52
   118                           	global	_RB5
   119  0035                     _RB5	set	53
   120                           	global	_RB6
   121  0036                     _RB6	set	54
   122                           	global	_RB7
   123  0037                     _RB7	set	55
   124                           	global	_RD0
   125  0040                     _RD0	set	64
   126                           	global	_RD1
   127  0041                     _RD1	set	65
   128                           	global	_RD2
   129  0042                     _RD2	set	66
   130                           	global	_RD3
   131  0043                     _RD3	set	67
   132                           	global	_SSPIF
   133  0063                     _SSPIF	set	99
   134                           	global	_SSPADD
   135  0093                     _SSPADD	set	147
   136                           	global	_SSPSTAT
   137  0094                     _SSPSTAT	set	148
   138                           	global	_ACKDT
   139  048D                     _ACKDT	set	1165
   140                           	global	_ACKEN
   141  048C                     _ACKEN	set	1164
   142                           	global	_ACKSTAT
   143  048E                     _ACKSTAT	set	1166
   144                           	global	_PEN
   145  048A                     _PEN	set	1162
   146                           	global	_RCEN
   147  048B                     _RCEN	set	1163
   148                           	global	_RSEN
   149  0489                     _RSEN	set	1161
   150                           	global	_SEN
   151  0488                     _SEN	set	1160
   152                           	global	_TRISB0
   153  0430                     _TRISB0	set	1072
   154                           	global	_TRISB1
   155  0431                     _TRISB1	set	1073
   156                           	global	_TRISB4
   157  0434                     _TRISB4	set	1076
   158                           	global	_TRISB5
   159  0435                     _TRISB5	set	1077
   160                           	global	_TRISB6
   161  0436                     _TRISB6	set	1078
   162                           	global	_TRISB7
   163  0437                     _TRISB7	set	1079
   164                           	global	_TRISC3
   165  043B                     _TRISC3	set	1083
   166                           	global	_TRISC4
   167  043C                     _TRISC4	set	1084
   168                           	global	_EEADR
   169  010D                     _EEADR	set	269
   170                           	global	_EEDATA
   171  010C                     _EEDATA	set	268
   172                           	global	_EECON1
   173  018C                     _EECON1	set	396
   174                           	global	_EECON2
   175  018D                     _EECON2	set	397
   176                           	global	_RD
   177  0C60                     _RD	set	3168
   178                           	global	_WR
   179  0C61                     _WR	set	3169
   180                           	global	_WREN
   181  0C62                     _WREN	set	3170
   182                           psect	strings,class=STRING,delta=2
   183                           global __pstrings
   184  0800                     __pstrings:
   185                           ;	global	stringdir,stringtab,__stringbase
   186  0800                     stringtab:
   187                           ;	String table - string pointers are 1 byte each
   188  0800                     stringcode:stringdir:
      + 0800                     stringdir:	
   189  0800  3008               movlw high(stringdir)
   190  0801  008A               movwf pclath
   191  0802  0804               movf fsr,w
   192  0803  0A84               incf fsr
   193  0804  0782               	addwf pc
   194  0805                     __stringbase:
   195  0805  3400               	retlw	0
   196                           psect	strings
   197                           	
   198  0806                     STR_11:	
   199  0806  3474               	retlw	116	;'t'
   200  0807  3469               	retlw	105	;'i'
   201  0808  346D               	retlw	109	;'m'
   202  0809  3465               	retlw	101	;'e'
   203  080A  3420               	retlw	32	;' '
   204  080B  3473               	retlw	115	;'s'
   205  080C  3465               	retlw	101	;'e'
   206  080D  3474               	retlw	116	;'t'
   207  080E  3420               	retlw	32	;' '
   208  080F  346F               	retlw	111	;'o'
   209  0810  346B               	retlw	107	;'k'
   210  0811  3400               	retlw	0
   211                           psect	strings
   212                           	
   213  0812                     STR_10:	
   214  0812  343F               	retlw	63	;'?'
   215  0813  343F               	retlw	63	;'?'
   216  0814  343F               	retlw	63	;'?'
   217  0815  3400               	retlw	0
   218                           psect	strings
   219                           	
   220  0816                     STR_5:	
   221  0816  3457               	retlw	87	;'W'
   222  0817  3445               	retlw	69	;'E'
   223  0818  3444               	retlw	68	;'D'
   224  0819  3400               	retlw	0
   225                           psect	strings
   226                           	
   227  081A                     STR_4:	
   228  081A  3454               	retlw	84	;'T'
   229  081B  3455               	retlw	85	;'U'
   230  081C  3445               	retlw	69	;'E'
   231  081D  3400               	retlw	0
   232                           psect	strings
   233                           	
   234  081E                     STR_7:	
   235  081E  3446               	retlw	70	;'F'
   236  081F  3452               	retlw	82	;'R'
   237  0820  3449               	retlw	73	;'I'
   238  0821  3400               	retlw	0
   239                           psect	strings
   240                           	
   241  0822                     STR_3:	
   242  0822  344D               	retlw	77	;'M'
   243  0823  344F               	retlw	79	;'O'
   244  0824  344E               	retlw	78	;'N'
   245  0825  3400               	retlw	0
   246                           psect	strings
   247                           	
   248  0826                     STR_9:	
   249  0826  3453               	retlw	83	;'S'
   250  0827  3455               	retlw	85	;'U'
   251  0828  344E               	retlw	78	;'N'
   252  0829  3400               	retlw	0
   253                           psect	strings
   254                           	
   255  082A                     STR_8:	
   256  082A  3453               	retlw	83	;'S'
   257  082B  3441               	retlw	65	;'A'
   258  082C  3454               	retlw	84	;'T'
   259  082D  3400               	retlw	0
   260                           psect	strings
   261                           	
   262  082E                     STR_6:	
   263  082E  3454               	retlw	84	;'T'
   264  082F  3448               	retlw	72	;'H'
   265  0830  3455               	retlw	85	;'U'
   266  0831  3400               	retlw	0
   267                           psect	strings
   268                           	
   269  0832                     STR_1:	
   270  0832  3441               	retlw	65	;'A'
   271  0833  344D               	retlw	77	;'M'
   272  0834  3400               	retlw	0
   273                           psect	strings
   274                           	
   275  0835                     STR_2:	
   276  0835  3450               	retlw	80	;'P'
   277  0836  344D               	retlw	77	;'M'
   278  0837  3400               	retlw	0
   279                           psect	strings
   280                           	file	"RTC.as"
   281                           	line	#
   282                           psect cinit,class=CODE,delta=2
   283                           global start_initialization
   284  0E1A                     start_initialization:
   285                           
   286                           psect	bssCOMMON,class=COMMON,space=1
   287                           global __pbssCOMMON
   288  007D                     __pbssCOMMON:
   289  007D                     _Temp:
   290  007D                            ds      1
   291                           
   292                           psect	bssBANK0,class=BANK0,space=1
   293                           global __pbssBANK0
   294  0035                     __pbssBANK0:
   295  0035                     _pRTCArray:
   296  0035                            ds      4
   297                           
   298                           ; Clear objects allocated to COMMON
   299                           psect cinit,class=CODE,delta=2
   300  0E1A  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   301                           ; Clear objects allocated to BANK0
   302                           psect cinit,class=CODE,delta=2
   303  0E1B  01B5               	clrf	((__pbssBANK0)+0)&07Fh
   304  0E1C  01B6               	clrf	((__pbssBANK0)+1)&07Fh
   305  0E1D  01B7               	clrf	((__pbssBANK0)+2)&07Fh
   306  0E1E  01B8               	clrf	((__pbssBANK0)+3)&07Fh
   307                           psect cinit,class=CODE,delta=2
   308                           global end_of_initialization
   309                           
   310                           ;End of C runtime variable initialization code
   311                           
   312  0E1F                     end_of_initialization:
   313  0E1F  0183               clrf status
   314  0E20  120A  158A  2F3A   ljmp _main	;jump to C main() function
   315                           psect	cstackCOMMON,class=COMMON,space=1
   316                           global __pcstackCOMMON
   317  0070                     __pcstackCOMMON:
   318                           	global	?_I2C_Start
   319  0070                     ?_I2C_Start:	; 0 bytes @ 0x0
   320                           	global	??_I2C_Start
   321  0070                     ??_I2C_Start:	; 0 bytes @ 0x0
   322                           	global	?_I2C_Write_Byte
   323  0070                     ?_I2C_Write_Byte:	; 1 bit 
   324                           	global	??_I2C_Write_Byte
   325  0070                     ??_I2C_Write_Byte:	; 0 bytes @ 0x0
   326                           	global	?_I2C_Stop
   327  0070                     ?_I2C_Stop:	; 0 bytes @ 0x0
   328                           	global	??_I2C_Stop
   329  0070                     ??_I2C_Stop:	; 0 bytes @ 0x0
   330                           	global	?_I2C_ReStart
   331  0070                     ?_I2C_ReStart:	; 0 bytes @ 0x0
   332                           	global	??_I2C_ReStart
   333  0070                     ??_I2C_ReStart:	; 0 bytes @ 0x0
   334                           	global	??_I2C_Read_Byte
   335  0070                     ??_I2C_Read_Byte:	; 0 bytes @ 0x0
   336                           	global	?_I2C_Send_NACK
   337  0070                     ?_I2C_Send_NACK:	; 0 bytes @ 0x0
   338                           	global	??_I2C_Send_NACK
   339  0070                     ??_I2C_Send_NACK:	; 0 bytes @ 0x0
   340                           	global	?_I2C_Send_ACK
   341  0070                     ?_I2C_Send_ACK:	; 0 bytes @ 0x0
   342                           	global	??_I2C_Send_ACK
   343  0070                     ??_I2C_Send_ACK:	; 0 bytes @ 0x0
   344                           	global	?_SetTime
   345  0070                     ?_SetTime:	; 0 bytes @ 0x0
   346                           	global	?_InitI2C
   347  0070                     ?_InitI2C:	; 0 bytes @ 0x0
   348                           	global	??_InitI2C
   349  0070                     ??_InitI2C:	; 0 bytes @ 0x0
   350                           	global	?_ToggleEpinOfLCD
   351  0070                     ?_ToggleEpinOfLCD:	; 0 bytes @ 0x0
   352                           	global	??_ToggleEpinOfLCD
   353  0070                     ??_ToggleEpinOfLCD:	; 0 bytes @ 0x0
   354                           	global	?_WriteCommandToLCD
   355  0070                     ?_WriteCommandToLCD:	; 0 bytes @ 0x0
   356                           	global	?_WriteDataToLCD
   357  0070                     ?_WriteDataToLCD:	; 0 bytes @ 0x0
   358                           	global	?_InitLCD
   359  0070                     ?_InitLCD:	; 0 bytes @ 0x0
   360                           	global	?_WriteStringToLCD
   361  0070                     ?_WriteStringToLCD:	; 0 bytes @ 0x0
   362                           	global	?_ClearLCDScreen
   363  0070                     ?_ClearLCDScreen:	; 0 bytes @ 0x0
   364                           	global	?_DisplayTimeToLCD
   365  0070                     ?_DisplayTimeToLCD:	; 0 bytes @ 0x0
   366                           	global	?_DisplayDateOnLCD
   367  0070                     ?_DisplayDateOnLCD:	; 0 bytes @ 0x0
   368                           	global	?_main
   369  0070                     ?_main:	; 0 bytes @ 0x0
   370                           	global	?_I2C_Read_Byte
   371  0070                     ?_I2C_Read_Byte:	; 1 bytes @ 0x0
   372                           	global	?_Get_DS1307_RTC_Time
   373  0070                     ?_Get_DS1307_RTC_Time:	; 1 bytes @ 0x0
   374                           	global	?_Get_DS1307_RTC_Date
   375  0070                     ?_Get_DS1307_RTC_Date:	; 1 bytes @ 0x0
   376                           	global	?___bmul
   377  0070                     ?___bmul:	; 1 bytes @ 0x0
   378                           	global	?___awdiv
   379  0070                     ?___awdiv:	; 2 bytes @ 0x0
   380                           	global	?___awmod
   381  0070                     ?___awmod:	; 2 bytes @ 0x0
   382                           	global	I2C_Write_Byte@Byte
   383  0070                     I2C_Write_Byte@Byte:	; 1 bytes @ 0x0
   384                           	global	___bmul@multiplicand
   385  0070                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   386                           	global	___awdiv@divisor
   387  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   388                           	global	___awmod@divisor
   389  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   390  0070                     	ds	1
   391                           	global	?_Write_Bytes_To_DS1307_RTC
   392  0071                     ?_Write_Bytes_To_DS1307_RTC:	; 0 bytes @ 0x1
   393                           	global	?_Read_Bytes_From_DS1307_RTC
   394  0071                     ?_Read_Bytes_From_DS1307_RTC:	; 0 bytes @ 0x1
   395                           	global	??___bmul
   396  0071                     ??___bmul:	; 0 bytes @ 0x1
   397                           	global	Write_Bytes_To_DS1307_RTC@pData
   398  0071                     Write_Bytes_To_DS1307_RTC@pData:	; 1 bytes @ 0x1
   399                           	global	Read_Bytes_From_DS1307_RTC@pData
   400  0071                     Read_Bytes_From_DS1307_RTC@pData:	; 1 bytes @ 0x1
   401  0071                     	ds	1
   402                           	global	??_WriteCommandToLCD
   403  0072                     ??_WriteCommandToLCD:	; 0 bytes @ 0x2
   404                           	global	??_WriteDataToLCD
   405  0072                     ??_WriteDataToLCD:	; 0 bytes @ 0x2
   406                           	global	Write_Bytes_To_DS1307_RTC@NoOfBytes
   407  0072                     Write_Bytes_To_DS1307_RTC@NoOfBytes:	; 1 bytes @ 0x2
   408                           	global	___bmul@product
   409  0072                     ___bmul@product:	; 1 bytes @ 0x2
   410                           	global	Read_Bytes_From_DS1307_RTC@NoOfBytes
   411  0072                     Read_Bytes_From_DS1307_RTC@NoOfBytes:	; 2 bytes @ 0x2
   412                           	global	___awdiv@dividend
   413  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   414                           	global	___awmod@dividend
   415  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   416  0072                     	ds	1
   417                           	global	??_Write_Bytes_To_DS1307_RTC
   418  0073                     ??_Write_Bytes_To_DS1307_RTC:	; 0 bytes @ 0x3
   419                           	global	___bmul@multiplier
   420  0073                     ___bmul@multiplier:	; 1 bytes @ 0x3
   421  0073                     	ds	1
   422                           	global	??_Read_Bytes_From_DS1307_RTC
   423  0074                     ??_Read_Bytes_From_DS1307_RTC:	; 0 bytes @ 0x4
   424                           	global	??___awdiv
   425  0074                     ??___awdiv:	; 0 bytes @ 0x4
   426                           	global	??___awmod
   427  0074                     ??___awmod:	; 0 bytes @ 0x4
   428                           	global	WriteCommandToLCD@Command
   429  0074                     WriteCommandToLCD@Command:	; 1 bytes @ 0x4
   430                           	global	WriteDataToLCD@LCDChar
   431  0074                     WriteDataToLCD@LCDChar:	; 1 bytes @ 0x4
   432  0074                     	ds	1
   433                           	global	??_InitLCD
   434  0075                     ??_InitLCD:	; 0 bytes @ 0x5
   435                           	global	??_WriteStringToLCD
   436  0075                     ??_WriteStringToLCD:	; 0 bytes @ 0x5
   437                           	global	??_ClearLCDScreen
   438  0075                     ??_ClearLCDScreen:	; 0 bytes @ 0x5
   439                           	global	Write_Bytes_To_DS1307_RTC@Address
   440  0075                     Write_Bytes_To_DS1307_RTC@Address:	; 1 bytes @ 0x5
   441                           	global	___awdiv@counter
   442  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   443                           	global	___awmod@counter
   444  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   445  0075                     	ds	1
   446                           	global	Read_Bytes_From_DS1307_RTC@Address
   447  0076                     Read_Bytes_From_DS1307_RTC@Address:	; 1 bytes @ 0x6
   448                           	global	WriteStringToLCD@s
   449  0076                     WriteStringToLCD@s:	; 1 bytes @ 0x6
   450                           	global	___awdiv@sign
   451  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   452                           	global	___awmod@sign
   453  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   454                           	global	Write_Bytes_To_DS1307_RTC@i
   455  0076                     Write_Bytes_To_DS1307_RTC@i:	; 2 bytes @ 0x6
   456  0076                     	ds	1
   457                           	global	Read_Bytes_From_DS1307_RTC@i
   458  0077                     Read_Bytes_From_DS1307_RTC@i:	; 2 bytes @ 0x7
   459                           	global	___awdiv@quotient
   460  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   461  0077                     	ds	2
   462                           	global	?_Set_DS1307_RTC_Time
   463  0079                     ?_Set_DS1307_RTC_Time:	; 0 bytes @ 0x9
   464                           	global	??_Get_DS1307_RTC_Time
   465  0079                     ??_Get_DS1307_RTC_Time:	; 0 bytes @ 0x9
   466                           	global	?_Set_DS1307_RTC_Date
   467  0079                     ?_Set_DS1307_RTC_Date:	; 0 bytes @ 0x9
   468                           	global	??_Get_DS1307_RTC_Date
   469  0079                     ??_Get_DS1307_RTC_Date:	; 0 bytes @ 0x9
   470                           	global	??_DisplayTimeToLCD
   471  0079                     ??_DisplayTimeToLCD:	; 0 bytes @ 0x9
   472                           	global	??_DisplayDateOnLCD
   473  0079                     ??_DisplayDateOnLCD:	; 0 bytes @ 0x9
   474                           	global	Set_DS1307_RTC_Time@Hours
   475  0079                     Set_DS1307_RTC_Time@Hours:	; 1 bytes @ 0x9
   476                           	global	Set_DS1307_RTC_Date@Month
   477  0079                     Set_DS1307_RTC_Date@Month:	; 1 bytes @ 0x9
   478  0079                     	ds	1
   479                           	global	Set_DS1307_RTC_Time@Mins
   480  007A                     Set_DS1307_RTC_Time@Mins:	; 1 bytes @ 0xA
   481                           	global	Set_DS1307_RTC_Date@Year
   482  007A                     Set_DS1307_RTC_Date@Year:	; 1 bytes @ 0xA
   483  007A                     	ds	1
   484                           	global	Set_DS1307_RTC_Time@Secs
   485  007B                     Set_DS1307_RTC_Time@Secs:	; 1 bytes @ 0xB
   486                           	global	Set_DS1307_RTC_Date@Day
   487  007B                     Set_DS1307_RTC_Date@Day:	; 1 bytes @ 0xB
   488                           	global	DisplayTimeToLCD@pTimeArray
   489  007B                     DisplayTimeToLCD@pTimeArray:	; 1 bytes @ 0xB
   490                           	global	DisplayDateOnLCD@pDateArray
   491  007B                     DisplayDateOnLCD@pDateArray:	; 1 bytes @ 0xB
   492  007B                     	ds	1
   493                           	global	Set_DS1307_RTC_Time@Mode
   494  007C                     Set_DS1307_RTC_Time@Mode:	; 1 bytes @ 0xC
   495                           	global	Set_DS1307_RTC_Date@Date
   496  007C                     Set_DS1307_RTC_Date@Date:	; 1 bytes @ 0xC
   497  007C                     	ds	1
   498                           psect	cstackBANK0,class=BANK0,space=1
   499                           global __pcstackBANK0
   500  0020                     __pcstackBANK0:
   501                           	global	??_Set_DS1307_RTC_Time
   502  0020                     ??_Set_DS1307_RTC_Time:	; 0 bytes @ 0x0
   503                           	global	??_Set_DS1307_RTC_Date
   504  0020                     ??_Set_DS1307_RTC_Date:	; 0 bytes @ 0x0
   505  0020                     	ds	8
   506                           	global	??_SetTime
   507  0028                     ??_SetTime:	; 0 bytes @ 0x8
   508  0028                     	ds	3
   509                           	global	SetTime@hr_set
   510  002B                     SetTime@hr_set:	; 1 bytes @ 0xB
   511  002B                     	ds	1
   512                           	global	SetTime@min_set
   513  002C                     SetTime@min_set:	; 1 bytes @ 0xC
   514  002C                     	ds	1
   515                           	global	SetTime@sec_set
   516  002D                     SetTime@sec_set:	; 1 bytes @ 0xD
   517  002D                     	ds	1
   518                           	global	SetTime@disply_locat
   519  002E                     SetTime@disply_locat:	; 1 bytes @ 0xE
   520  002E                     	ds	1
   521                           	global	SetTime@limit
   522  002F                     SetTime@limit:	; 1 bytes @ 0xF
   523  002F                     	ds	1
   524                           	global	SetTime@store
   525  0030                     SetTime@store:	; 1 bytes @ 0x10
   526  0030                     	ds	1
   527                           	global	SetTime@temp1
   528  0031                     SetTime@temp1:	; 1 bytes @ 0x11
   529  0031                     	ds	1
   530                           	global	??_main
   531  0032                     ??_main:	; 0 bytes @ 0x12
   532  0032                     	ds	3
   533 ;;Data sizes: Strings 50, constant 0, data 0, bss 5, persistent 0 stack 0
   534 ;;Auto spaces:   Size  Autos    Used
   535 ;; COMMON          14     13      14
   536 ;; BANK0           80     21      25
   537 ;; BANK1           80      0       0
   538 ;; BANK3           96      0       0
   539 ;; BANK2           96      0       0
   540                           
   541 ;;
   542 ;; Pointer list with targets:
   543                           
   544 ;; ?_Get_DS1307_RTC_Date	PTR unsigned char  size(1) Largest target is 4
   545 ;;		 -> pRTCArray(BANK0[4]), 
   546 ;;
   547 ;; ?_Get_DS1307_RTC_Time	PTR unsigned char  size(1) Largest target is 4
   548 ;;		 -> pRTCArray(BANK0[4]), 
   549 ;;
   550 ;; ?___awdiv	int  size(1) Largest target is 0
   551 ;;
   552 ;; ?___awmod	int  size(1) Largest target is 0
   553 ;;
   554 ;; SetTime@temp1	PTR unsigned char  size(1) Largest target is 4
   555 ;;		 -> pRTCArray(BANK0[4]), 
   556 ;;
   557 ;; DisplayDateOnLCD@pDateArray	PTR unsigned char  size(1) Largest target is 4
   558 ;;		 -> pRTCArray(BANK0[4]), 
   559 ;;
   560 ;; DisplayTimeToLCD@pTimeArray	PTR unsigned char  size(1) Largest target is 4
   561 ;;		 -> pRTCArray(BANK0[4]), 
   562 ;;
   563 ;; WriteStringToLCD@s	PTR const unsigned char  size(1) Largest target is 12
   564 ;;		 -> STR_11(CODE[12]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
   565 ;;		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
   566 ;;		 -> STR_3(CODE[4]), STR_2(CODE[3]), STR_1(CODE[3]), 
   567 ;;
   568 ;; sp__Get_DS1307_RTC_Date	PTR unsigned char  size(1) Largest target is 4
   569 ;;		 -> pRTCArray(BANK0[4]), 
   570 ;;
   571 ;; sp__Get_DS1307_RTC_Time	PTR unsigned char  size(1) Largest target is 4
   572 ;;		 -> pRTCArray(BANK0[4]), 
   573 ;;
   574 ;; Read_Bytes_From_DS1307_RTC@pData	PTR unsigned char  size(1) Largest target is 4
   575 ;;		 -> pRTCArray(BANK0[4]), 
   576 ;;
   577 ;; Write_Bytes_To_DS1307_RTC@pData	PTR unsigned char  size(1) Largest target is 4
   578 ;;		 -> pRTCArray(BANK0[4]), 
   579 ;;
   580                           
   581                           
   582 ;;
   583 ;; Critical Paths under _main in COMMON
   584 ;;
   585 ;;   _main->_Set_DS1307_RTC_Time
   586 ;;   _main->_Set_DS1307_RTC_Date
   587 ;;   _main->_Get_DS1307_RTC_Time
   588 ;;   _main->_Get_DS1307_RTC_Date
   589 ;;   _SetTime->_Get_DS1307_RTC_Time
   590 ;;   _SetTime->_Set_DS1307_RTC_Time
   591 ;;   _DisplayDateOnLCD->___awdiv
   592 ;;   _DisplayTimeToLCD->___awdiv
   593 ;;   _ClearLCDScreen->_WriteCommandToLCD
   594 ;;   _WriteStringToLCD->_WriteDataToLCD
   595 ;;   _InitLCD->_WriteCommandToLCD
   596 ;;   _WriteDataToLCD->_ToggleEpinOfLCD
   597 ;;   _WriteCommandToLCD->_ToggleEpinOfLCD
   598 ;;   _Get_DS1307_RTC_Date->_Read_Bytes_From_DS1307_RTC
   599 ;;   _Set_DS1307_RTC_Date->___awdiv
   600 ;;   _Get_DS1307_RTC_Time->_Read_Bytes_From_DS1307_RTC
   601 ;;   _Set_DS1307_RTC_Time->___awdiv
   602 ;;   _Read_Bytes_From_DS1307_RTC->_I2C_Write_Byte
   603 ;;   _Write_Bytes_To_DS1307_RTC->_I2C_Write_Byte
   604 ;;
   605 ;; Critical Paths under _main in BANK0
   606 ;;
   607 ;;   _main->_SetTime
   608 ;;   _SetTime->_Set_DS1307_RTC_Time
   609 ;;
   610 ;; Critical Paths under _main in BANK1
   611 ;;
   612 ;;   None.
   613 ;;
   614 ;; Critical Paths under _main in BANK3
   615 ;;
   616 ;;   None.
   617 ;;
   618 ;; Critical Paths under _main in BANK2
   619 ;;
   620 ;;   None.
   621                           
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   624 ;;
   625                           
   626 ;;
   627 ;;Call Graph Tables:
   628 ;;
   629 ;; ---------------------------------------------------------------------------------
   630 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (0) _main                                                 3     3      0    7102
   633 ;;                                             18 BANK0      3     3      0
   634 ;;                            _InitLCD
   635 ;;                            _InitI2C
   636 ;;                _Set_DS1307_RTC_Time
   637 ;;                _Set_DS1307_RTC_Date
   638 ;;                            _SetTime
   639 ;;                _Get_DS1307_RTC_Time
   640 ;;                   _DisplayTimeToLCD
   641 ;;                _Get_DS1307_RTC_Date
   642 ;;                   _DisplayDateOnLCD
   643 ;; ---------------------------------------------------------------------------------
   644 ;; (1) _SetTime                                             10    10      0    2918
   645 ;;                                              8 BANK0     10    10      0
   646 ;;                _Get_DS1307_RTC_Time
   647 ;;                  _WriteCommandToLCD
   648 ;;                   _DisplayTimeToLCD
   649 ;;                _Set_DS1307_RTC_Time
   650 ;;                   _WriteStringToLCD
   651 ;; ---------------------------------------------------------------------------------
   652 ;; (1) _DisplayDateOnLCD                                     3     3      0     927
   653 ;;                                              9 COMMON     3     3      0
   654 ;;                  _WriteCommandToLCD
   655 ;;                            ___awdiv
   656 ;;                     _WriteDataToLCD
   657 ;;                            ___awmod
   658 ;;                   _WriteStringToLCD
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (1) _DisplayTimeToLCD                                     3     3      0     927
   661 ;;                                              9 COMMON     3     3      0
   662 ;;                     _ClearLCDScreen
   663 ;;                            ___awdiv
   664 ;;                     _WriteDataToLCD
   665 ;;                            ___awmod
   666 ;;                   _WriteStringToLCD
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (2) _ClearLCDScreen                                       2     2      0      44
   669 ;;                                              5 COMMON     2     2      0
   670 ;;                  _WriteCommandToLCD
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (2) _WriteStringToLCD                                     2     2      0      89
   673 ;;                                              5 COMMON     2     2      0
   674 ;;                     _WriteDataToLCD
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (1) _InitLCD                                              3     3      0      44
   677 ;;                                              5 COMMON     3     3      0
   678 ;;                    _ToggleEpinOfLCD
   679 ;;                  _WriteCommandToLCD
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (3) _WriteDataToLCD                                       3     3      0      44
   682 ;;                                              2 COMMON     3     3      0
   683 ;;                    _ToggleEpinOfLCD
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (2) _WriteCommandToLCD                                    3     3      0      44
   686 ;;                                              2 COMMON     3     3      0
   687 ;;                    _ToggleEpinOfLCD
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (1) _Get_DS1307_RTC_Date                                  4     4      0     248
   690 ;;                                              9 COMMON     4     4      0
   691 ;;         _Read_Bytes_From_DS1307_RTC
   692 ;;                             ___bmul
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _Set_DS1307_RTC_Date                                 12     9      3     906
   695 ;;                                              9 COMMON     4     1      3
   696 ;;                                              0 BANK0      8     8      0
   697 ;;                            ___awmod
   698 ;;                            ___awdiv
   699 ;;          _Write_Bytes_To_DS1307_RTC
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (1) _Get_DS1307_RTC_Time                                  4     4      0     248
   702 ;;                                              9 COMMON     4     4      0
   703 ;;         _Read_Bytes_From_DS1307_RTC
   704 ;;                             ___bmul
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _Set_DS1307_RTC_Time                                 12     9      3     884
   707 ;;                                              9 COMMON     4     1      3
   708 ;;                                              0 BANK0      8     8      0
   709 ;;                            ___awmod
   710 ;;                            ___awdiv
   711 ;;          _Write_Bytes_To_DS1307_RTC
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (4) _ToggleEpinOfLCD                                      2     2      0       0
   714 ;;                                              0 COMMON     2     2      0
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (2) _Read_Bytes_From_DS1307_RTC                           8     5      3     156
   717 ;;                                              1 COMMON     8     5      3
   718 ;;                          _I2C_Start
   719 ;;                     _I2C_Write_Byte
   720 ;;                        _I2C_ReStart
   721 ;;                      _I2C_Read_Byte
   722 ;;                       _I2C_Send_ACK
   723 ;;                      _I2C_Send_NACK
   724 ;;                           _I2C_Stop
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (3) _Write_Bytes_To_DS1307_RTC                            7     5      2     134
   727 ;;                                              1 COMMON     7     5      2
   728 ;;                          _I2C_Start
   729 ;;                     _I2C_Write_Byte
   730 ;;                           _I2C_Stop
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (2) ___awmod                                              7     3      4     296
   733 ;;                                              0 COMMON     7     3      4
   734 ;; ---------------------------------------------------------------------------------
   735 ;; (2) ___awdiv                                              9     5      4     300
   736 ;;                                              0 COMMON     9     5      4
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (2) ___bmul                                               4     3      1      92
   739 ;;                                              0 COMMON     4     3      1
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _InitI2C                                              0     0      0       0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (3) _I2C_Send_ACK                                         0     0      0       0
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (3) _I2C_Send_NACK                                        0     0      0       0
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (3) _I2C_Read_Byte                                        0     0      0       0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (3) _I2C_ReStart                                          0     0      0       0
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (3) _I2C_Stop                                             0     0      0       0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (3) _I2C_Write_Byte                                       1     1      0      22
   754 ;;                                              0 COMMON     1     1      0
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (3) _I2C_Start                                            0     0      0       0
   757 ;; ---------------------------------------------------------------------------------
   758 ;; Estimated maximum stack depth 4
   759 ;; ---------------------------------------------------------------------------------
   760                           
   761 ;; Call Graph Graphs:
   762                           
   763 ;; _main (ROOT)
   764 ;;   _InitLCD
   765 ;;     _ToggleEpinOfLCD
   766 ;;     _WriteCommandToLCD
   767 ;;       _ToggleEpinOfLCD
   768 ;;   _InitI2C
   769 ;;   _Set_DS1307_RTC_Time
   770 ;;     ___awmod
   771 ;;     ___awdiv
   772 ;;     _Write_Bytes_To_DS1307_RTC
   773 ;;       _I2C_Start
   774 ;;       _I2C_Write_Byte
   775 ;;       _I2C_Stop
   776 ;;   _Set_DS1307_RTC_Date
   777 ;;     ___awmod
   778 ;;     ___awdiv
   779 ;;     _Write_Bytes_To_DS1307_RTC
   780 ;;       _I2C_Start
   781 ;;       _I2C_Write_Byte
   782 ;;       _I2C_Stop
   783 ;;   _SetTime
   784 ;;     _Get_DS1307_RTC_Time
   785 ;;       _Read_Bytes_From_DS1307_RTC
   786 ;;         _I2C_Start
   787 ;;         _I2C_Write_Byte
   788 ;;         _I2C_ReStart
   789 ;;         _I2C_Read_Byte
   790 ;;         _I2C_Send_ACK
   791 ;;         _I2C_Send_NACK
   792 ;;         _I2C_Stop
   793 ;;       ___bmul
   794 ;;     _WriteCommandToLCD
   795 ;;       _ToggleEpinOfLCD
   796 ;;     _DisplayTimeToLCD
   797 ;;       _ClearLCDScreen
   798 ;;         _WriteCommandToLCD
   799 ;;           _ToggleEpinOfLCD
   800 ;;       ___awdiv
   801 ;;       _WriteDataToLCD
   802 ;;         _ToggleEpinOfLCD
   803 ;;       ___awmod
   804 ;;       _WriteStringToLCD
   805 ;;         _WriteDataToLCD
   806 ;;           _ToggleEpinOfLCD
   807 ;;     _Set_DS1307_RTC_Time
   808 ;;       ___awmod
   809 ;;       ___awdiv
   810 ;;       _Write_Bytes_To_DS1307_RTC
   811 ;;         _I2C_Start
   812 ;;         _I2C_Write_Byte
   813 ;;         _I2C_Stop
   814 ;;     _WriteStringToLCD
   815 ;;       _WriteDataToLCD
   816 ;;         _ToggleEpinOfLCD
   817 ;;   _Get_DS1307_RTC_Time
   818 ;;     _Read_Bytes_From_DS1307_RTC
   819 ;;       _I2C_Start
   820 ;;       _I2C_Write_Byte
   821 ;;       _I2C_ReStart
   822 ;;       _I2C_Read_Byte
   823 ;;       _I2C_Send_ACK
   824 ;;       _I2C_Send_NACK
   825 ;;       _I2C_Stop
   826 ;;     ___bmul
   827 ;;   _DisplayTimeToLCD
   828 ;;     _ClearLCDScreen
   829 ;;       _WriteCommandToLCD
   830 ;;         _ToggleEpinOfLCD
   831 ;;     ___awdiv
   832 ;;     _WriteDataToLCD
   833 ;;       _ToggleEpinOfLCD
   834 ;;     ___awmod
   835 ;;     _WriteStringToLCD
   836 ;;       _WriteDataToLCD
   837 ;;         _ToggleEpinOfLCD
   838 ;;   _Get_DS1307_RTC_Date
   839 ;;     _Read_Bytes_From_DS1307_RTC
   840 ;;       _I2C_Start
   841 ;;       _I2C_Write_Byte
   842 ;;       _I2C_ReStart
   843 ;;       _I2C_Read_Byte
   844 ;;       _I2C_Send_ACK
   845 ;;       _I2C_Send_NACK
   846 ;;       _I2C_Stop
   847 ;;     ___bmul
   848 ;;   _DisplayDateOnLCD
   849 ;;     _WriteCommandToLCD
   850 ;;       _ToggleEpinOfLCD
   851 ;;     ___awdiv
   852 ;;     _WriteDataToLCD
   853 ;;       _ToggleEpinOfLCD
   854 ;;     ___awmod
   855 ;;     _WriteStringToLCD
   856 ;;       _WriteDataToLCD
   857 ;;         _ToggleEpinOfLCD
   858 ;;
   859                           
   860 ;; Address spaces:
   861                           
   862 ;;Name               Size   Autos  Total    Cost      Usage
   863 ;;BITCOMMON            E      0       0       0        0.0%
   864 ;;EEDATA             100      0       0       0        0.0%
   865 ;;NULL                 0      0       0       0        0.0%
   866 ;;CODE                 0      0       0       0        0.0%
   867 ;;COMMON               E      D       E       1      100.0%
   868 ;;BITSFR0              0      0       0       1        0.0%
   869 ;;SFR0                 0      0       0       1        0.0%
   870 ;;BITSFR1              0      0       0       2        0.0%
   871 ;;SFR1                 0      0       0       2        0.0%
   872 ;;STACK                0      0       5       2        0.0%
   873 ;;ABS                  0      0      27       3        0.0%
   874 ;;BITBANK0            50      0       0       4        0.0%
   875 ;;BITSFR3              0      0       0       4        0.0%
   876 ;;SFR3                 0      0       0       4        0.0%
   877 ;;BANK0               50     15      19       5       31.3%
   878 ;;BITSFR2              0      0       0       5        0.0%
   879 ;;SFR2                 0      0       0       5        0.0%
   880 ;;BITBANK1            50      0       0       6        0.0%
   881 ;;BANK1               50      0       0       7        0.0%
   882 ;;BITBANK3            60      0       0       8        0.0%
   883 ;;BANK3               60      0       0       9        0.0%
   884 ;;BITBANK2            60      0       0      10        0.0%
   885 ;;BANK2               60      0       0      11        0.0%
   886 ;;DATA                 0      0      2C      12        0.0%
   887                           
   888                           	global	_main
   889                           psect	maintext,global,class=CODE,delta=2
   890                           global __pmaintext
   891  0F3A                     __pmaintext:
   892                           
   893 ;; *************** function _main *****************
   894 ;; Defined at:
   895 ;;		line 17 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\Main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;		None               void
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 17F/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0
   911 ;;      Temps:          0       3       0       0       0
   912 ;;      Totals:         0       3       0       0       0
   913 ;;Total ram usage:        3 bytes
   914 ;; Hardware stack levels required when called:    5
   915 ;; This function calls:
   916 ;;		_InitLCD
   917 ;;		_InitI2C
   918 ;;		_Set_DS1307_RTC_Time
   919 ;;		_Set_DS1307_RTC_Date
   920 ;;		_SetTime
   921 ;;		_Get_DS1307_RTC_Time
   922 ;;		_DisplayTimeToLCD
   923 ;;		_Get_DS1307_RTC_Date
   924 ;;		_DisplayDateOnLCD
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           psect	maintext
   930                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\Main.c"
   931                           	line	17
   932                           	global	__size_of_main
   933  0060                     	__size_of_main	equ	__end_of_main-_main
   934                           	
   935  0F3A                     _main:	
   936                           	opt	stack 3
   937                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   938                           	line	19
   939                           	
   940  0F3A                     l6741:	
   941                           ;Main.c: 19: InitLCD();
   942  0F3A  120A  118A  21A7   	fcall	_InitLCD
              120A  158A         
   943                           	line	20
   944                           ;Main.c: 20: InitI2C();
   945  0F3F  120A  118A  2005   	fcall	_InitI2C
              120A  158A         
   946                           	line	23
   947                           	
   948  0F44                     l6743:	
   949                           ;Main.c: 23: Set_DS1307_RTC_Time(2, 12, 59, 50);
   950  0F44  300C               	movlw	(0Ch)
   951  0F45  1283               	bcf	status, 5	;RP0=0, select bank0
   952  0F46  1303               	bcf	status, 6	;RP1=0, select bank0
   953  0F47  00B2               	movwf	(??_main+0)+0
   954  0F48  0832               	movf	(??_main+0)+0,w
   955  0F49  00F9               	movwf	(?_Set_DS1307_RTC_Time)
   956  0F4A  303B               	movlw	(03Bh)
   957  0F4B  00B3               	movwf	(??_main+1)+0
   958  0F4C  0833               	movf	(??_main+1)+0,w
   959  0F4D  00FA               	movwf	0+(?_Set_DS1307_RTC_Time)+01h
   960  0F4E  3032               	movlw	(032h)
   961  0F4F  00B4               	movwf	(??_main+2)+0
   962  0F50  0834               	movf	(??_main+2)+0,w
   963  0F51  00FB               	movwf	0+(?_Set_DS1307_RTC_Time)+02h
   964  0F52  3002               	movlw	(02h)
   965  0F53  120A  118A  22DC   	fcall	_Set_DS1307_RTC_Time
              120A  158A         
   966                           	line	26
   967                           	
   968  0F58                     l6745:	
   969                           ;Main.c: 26: Set_DS1307_RTC_Date(15, 12, 12, 6);
   970  0F58  300C               	movlw	(0Ch)
   971  0F59  1283               	bcf	status, 5	;RP0=0, select bank0
   972  0F5A  1303               	bcf	status, 6	;RP1=0, select bank0
   973  0F5B  00B2               	movwf	(??_main+0)+0
   974  0F5C  0832               	movf	(??_main+0)+0,w
   975  0F5D  00F9               	movwf	(?_Set_DS1307_RTC_Date)
   976  0F5E  300C               	movlw	(0Ch)
   977  0F5F  00B3               	movwf	(??_main+1)+0
   978  0F60  0833               	movf	(??_main+1)+0,w
   979  0F61  00FA               	movwf	0+(?_Set_DS1307_RTC_Date)+01h
   980  0F62  3006               	movlw	(06h)
   981  0F63  00B4               	movwf	(??_main+2)+0
   982  0F64  0834               	movf	(??_main+2)+0,w
   983  0F65  00FB               	movwf	0+(?_Set_DS1307_RTC_Date)+02h
   984  0F66  300F               	movlw	(0Fh)
   985  0F67  120A  118A  247E   	fcall	_Set_DS1307_RTC_Date
              120A  158A         
   986  0F6C  2F6D               	goto	l6747
   987                           	line	28
   988                           ;Main.c: 28: while(1)
   989                           	
   990  0F6D                     l2733:	
   991                           	line	31
   992                           	
   993  0F6D                     l6747:	
   994                           ;Main.c: 29: {
   995                           ;Main.c: 31: SetTime();
   996  0F6D  120A  118A  2678   	fcall	_SetTime
              120A  158A         
   997                           	line	33
   998                           	
   999  0F72                     l6749:	
  1000                           ;Main.c: 33: DisplayTimeToLCD(Get_DS1307_RTC_Time());
  1001  0F72  120A  118A  2237   	fcall	_Get_DS1307_RTC_Time
              120A  158A         
  1002  0F77  120A  118A  23A2   	fcall	_DisplayTimeToLCD
              120A  158A         
  1003                           	line	36
  1004                           	
  1005  0F7C                     l6751:	
  1006                           ;Main.c: 36: DisplayDateOnLCD(Get_DS1307_RTC_Date());
  1007  0F7C  120A  118A  20C3   	fcall	_Get_DS1307_RTC_Date
              120A  158A         
  1008  0F81  120A  118A  2568   	fcall	_DisplayDateOnLCD
              120A  158A         
  1009                           	line	38
  1010                           	
  1011  0F86                     l6753:	
  1012                           ;Main.c: 38: _delay((unsigned long)((100)*(20000000/4000.0)));
  1013                           	opt asmopt_off
  1014  0F86  3003               movlw  3
  1015  0F87  1283               	bcf	status, 5	;RP0=0, select bank0
  1016  0F88  1303               	bcf	status, 6	;RP1=0, select bank0
  1017  0F89  00B4               movwf	((??_main+0)+0+2),f
  1018  0F8A  308A               movlw	138
  1019  0F8B  00B3               movwf	((??_main+0)+0+1),f
  1020  0F8C  3056               	movlw	86
  1021  0F8D  00B2               movwf	((??_main+0)+0),f
  1022  0F8E                     u3477:
  1023  0F8E  0BB2               	decfsz	((??_main+0)+0),f
  1024  0F8F  2F8E               	goto	u3477
  1025  0F90  0BB3               	decfsz	((??_main+0)+0+1),f
  1026  0F91  2F8E               	goto	u3477
  1027  0F92  0BB4               	decfsz	((??_main+0)+0+2),f
  1028  0F93  2F8E               	goto	u3477
  1029  0F94  2F95               	nop2
  1030                           opt asmopt_on
  1031                           
  1032  0F95  2F6D               	goto	l6747
  1033                           	line	39
  1034                           	
  1035  0F96                     l2734:	
  1036                           	line	28
  1037  0F96  2F6D               	goto	l6747
  1038                           	
  1039  0F97                     l2735:	
  1040                           	line	40
  1041                           	
  1042  0F97                     l2736:	
  1043                           	global	start
  1044  0F97  120A  118A  2800   	ljmp	start
  1045                           	opt stack 0
  1046                           GLOBAL	__end_of_main
  1047  0F9A                     	__end_of_main:
  1048 ;; =============== function _main ends ============
  1049                           
  1050                           	signat	_main,88
  1051                           	global	_SetTime
  1052                           psect	text574,local,class=CODE,delta=2
  1053                           global __ptext574
  1054  0678                     __ptext574:
  1055                           
  1056 ;; *************** function _SetTime *****************
  1057 ;; Defined at:
  1058 ;;		line 6 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\Time set.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  temp1           1   17[BANK0 ] PTR unsigned char 
  1063 ;;		 -> pRTCArray(4), 
  1064 ;;  store           1   16[BANK0 ] unsigned char 
  1065 ;;  limit           1   15[BANK0 ] unsigned char 
  1066 ;;  disply_locat    1   14[BANK0 ] unsigned char 
  1067 ;;  sec_set         1   13[BANK0 ] unsigned char 
  1068 ;;  min_set         1   12[BANK0 ] unsigned char 
  1069 ;;  hr_set          1   11[BANK0 ] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;		None               void
  1072 ;; Registers used:
  1073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       0       0       0       0
  1080 ;;      Locals:         0       7       0       0       0
  1081 ;;      Temps:          0       3       0       0       0
  1082 ;;      Totals:         0      10       0       0       0
  1083 ;;Total ram usage:       10 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    4
  1086 ;; This function calls:
  1087 ;;		_Get_DS1307_RTC_Time
  1088 ;;		_WriteCommandToLCD
  1089 ;;		_DisplayTimeToLCD
  1090 ;;		_Set_DS1307_RTC_Time
  1091 ;;		_WriteStringToLCD
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           psect	text574
  1097                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\Time set.c"
  1098                           	line	6
  1099                           	global	__size_of_SetTime
  1100  0188                     	__size_of_SetTime	equ	__end_of_SetTime-_SetTime
  1101                           	
  1102  0678                     _SetTime:	
  1103                           	opt	stack 3
  1104                           ; Regs used in _SetTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1105                           	line	8
  1106                           	
  1107  0678                     l6649:	
  1108                           ;Time set.c: 7: char* temp1;
  1109                           ;Time set.c: 8: char hr_set=0;
  1110  0678  1283               	bcf	status, 5	;RP0=0, select bank0
  1111  0679  1303               	bcf	status, 6	;RP1=0, select bank0
  1112  067A  01AB               	clrf	(SetTime@hr_set)
  1113                           	line	9
  1114                           ;Time set.c: 9: char min_set=0;
  1115  067B  01AC               	clrf	(SetTime@min_set)
  1116                           	line	10
  1117                           ;Time set.c: 10: char sec_set=0;
  1118  067C  01AD               	clrf	(SetTime@sec_set)
  1119                           	line	11
  1120                           ;Time set.c: 11: char store=0;
  1121  067D  01B0               	clrf	(SetTime@store)
  1122                           	line	12
  1123                           ;Time set.c: 12: char disply_locat=0;
  1124  067E  01AE               	clrf	(SetTime@disply_locat)
  1125                           	line	13
  1126                           ;Time set.c: 13: char limit=0;
  1127  067F  01AF               	clrf	(SetTime@limit)
  1128                           	line	15
  1129                           ;Time set.c: 15: if(RD0==0)
  1130  0680  1808               	btfsc	(64/8),(64)&7
  1131  0681  2E83               	goto	u3281
  1132  0682  2E84               	goto	u3280
  1133  0683                     u3281:
  1134  0683  2FFF               	goto	l3422
  1135  0684                     u3280:
  1136  0684  2E86               	goto	l3388
  1137                           	line	16
  1138                           	
  1139  0685                     l6651:	
  1140                           ;Time set.c: 16: { while(RD0==0);
  1141  0685  2E86               	goto	l3388
  1142                           	
  1143  0686                     l3389:	
  1144                           	
  1145  0686                     l3388:	
  1146  0686  1C08               	btfss	(64/8),(64)&7
  1147  0687  2E89               	goto	u3291
  1148  0688  2E8A               	goto	u3290
  1149  0689                     u3291:
  1150  0689  2E86               	goto	l3388
  1151  068A                     u3290:
  1152  068A  2E8B               	goto	l6653
  1153                           	
  1154  068B                     l3390:	
  1155                           	line	18
  1156                           	
  1157  068B                     l6653:	
  1158                           ;Time set.c: 18: temp1 = Get_DS1307_RTC_Time();
  1159  068B  120A  118A  2237   	fcall	_Get_DS1307_RTC_Time
              120A  118A         
  1160  0690  1283               	bcf	status, 5	;RP0=0, select bank0
  1161  0691  1303               	bcf	status, 6	;RP1=0, select bank0
  1162  0692  00A8               	movwf	(??_SetTime+0)+0
  1163  0693  0828               	movf	(??_SetTime+0)+0,w
  1164  0694  00B1               	movwf	(SetTime@temp1)
  1165                           	line	19
  1166                           	
  1167  0695                     l6655:	
  1168                           ;Time set.c: 19: WriteCommandToLCD(0x01);
  1169  0695  3001               	movlw	(01h)
  1170  0696  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1171                           	line	20
  1172                           	
  1173  069B                     l6657:	
  1174                           ;Time set.c: 20: DisplayTimeToLCD(temp1);
  1175  069B  1283               	bcf	status, 5	;RP0=0, select bank0
  1176  069C  1303               	bcf	status, 6	;RP1=0, select bank0
  1177  069D  0831               	movf	(SetTime@temp1),w
  1178  069E  120A  118A  23A2   	fcall	_DisplayTimeToLCD
              120A  118A         
  1179                           	line	21
  1180                           ;Time set.c: 21: WriteCommandToLCD(0x81);
  1181  06A3  3081               	movlw	(081h)
  1182  06A4  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1183                           	line	22
  1184                           ;Time set.c: 22: WriteCommandToLCD(0x0e);
  1185  06A9  300E               	movlw	(0Eh)
  1186  06AA  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1187  06AF  2EB1               	goto	l3392
  1188                           	line	23
  1189                           ;Time set.c: 23: menustart: while(RD1==1 && RD2==1 && RD3==1);
  1190                           	
  1191  06B0                     l3391:	
  1192  06B0  2EB1               	goto	l3392
  1193                           	
  1194  06B1                     l3393:	
  1195                           	
  1196  06B1                     l3392:	
  1197  06B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1198  06B2  1303               	bcf	status, 6	;RP1=0, select bank0
  1199  06B3  1C88               	btfss	(65/8),(65)&7
  1200  06B4  2EB6               	goto	u3301
  1201  06B5  2EB7               	goto	u3300
  1202  06B6                     u3301:
  1203  06B6  2EC1               	goto	l6663
  1204  06B7                     u3300:
  1205                           	
  1206  06B7                     l6659:	
  1207  06B7  1D08               	btfss	(66/8),(66)&7
  1208  06B8  2EBA               	goto	u3311
  1209  06B9  2EBB               	goto	u3310
  1210  06BA                     u3311:
  1211  06BA  2EC1               	goto	l6663
  1212  06BB                     u3310:
  1213                           	
  1214  06BB                     l6661:	
  1215  06BB  1988               	btfsc	(67/8),(67)&7
  1216  06BC  2EBE               	goto	u3321
  1217  06BD  2EBF               	goto	u3320
  1218  06BE                     u3321:
  1219  06BE  2EB1               	goto	l3392
  1220  06BF                     u3320:
  1221  06BF  2EC1               	goto	l6663
  1222                           	
  1223  06C0                     l3395:	
  1224  06C0  2EC1               	goto	l6663
  1225                           	
  1226  06C1                     l3396:	
  1227                           	line	24
  1228                           	
  1229  06C1                     l6663:	
  1230                           ;Time set.c: 24: if(hr_set==0)
  1231  06C1  08AB               	movf	(SetTime@hr_set),f
  1232  06C2  1D03               	skipz
  1233  06C3  2EC5               	goto	u3331
  1234  06C4  2EC6               	goto	u3330
  1235  06C5                     u3331:
  1236  06C5  2ED3               	goto	l6667
  1237  06C6                     u3330:
  1238                           	line	26
  1239                           	
  1240  06C6                     l6665:	
  1241                           ;Time set.c: 25: {
  1242                           ;Time set.c: 26: store=2;
  1243  06C6  3002               	movlw	(02h)
  1244  06C7  00A8               	movwf	(??_SetTime+0)+0
  1245  06C8  0828               	movf	(??_SetTime+0)+0,w
  1246  06C9  00B0               	movwf	(SetTime@store)
  1247                           	line	27
  1248                           ;Time set.c: 27: disply_locat=0x81;
  1249  06CA  3081               	movlw	(081h)
  1250  06CB  00A8               	movwf	(??_SetTime+0)+0
  1251  06CC  0828               	movf	(??_SetTime+0)+0,w
  1252  06CD  00AE               	movwf	(SetTime@disply_locat)
  1253                           	line	28
  1254                           ;Time set.c: 28: limit=12;
  1255  06CE  300C               	movlw	(0Ch)
  1256  06CF  00A8               	movwf	(??_SetTime+0)+0
  1257  06D0  0828               	movf	(??_SetTime+0)+0,w
  1258  06D1  00AF               	movwf	(SetTime@limit)
  1259                           	line	29
  1260                           ;Time set.c: 29: }
  1261  06D2  2EF5               	goto	l6681
  1262                           	line	30
  1263                           	
  1264  06D3                     l3397:	
  1265                           	
  1266  06D3                     l6667:	
  1267                           ;Time set.c: 30: else if(min_set==0)
  1268  06D3  08AC               	movf	(SetTime@min_set),f
  1269  06D4  1D03               	skipz
  1270  06D5  2ED7               	goto	u3341
  1271  06D6  2ED8               	goto	u3340
  1272  06D7                     u3341:
  1273  06D7  2EE4               	goto	l6675
  1274  06D8                     u3340:
  1275                           	line	32
  1276                           	
  1277  06D8                     l6669:	
  1278                           ;Time set.c: 31: {
  1279                           ;Time set.c: 32: store=1;
  1280  06D8  01B0               	clrf	(SetTime@store)
  1281  06D9  1403               	bsf	status,0
  1282  06DA  0DB0               	rlf	(SetTime@store),f
  1283                           	line	33
  1284                           	
  1285  06DB                     l6671:	
  1286                           ;Time set.c: 33: disply_locat=0x84;
  1287  06DB  3084               	movlw	(084h)
  1288  06DC  00A8               	movwf	(??_SetTime+0)+0
  1289  06DD  0828               	movf	(??_SetTime+0)+0,w
  1290  06DE  00AE               	movwf	(SetTime@disply_locat)
  1291                           	line	34
  1292                           	
  1293  06DF                     l6673:	
  1294                           ;Time set.c: 34: limit=60;
  1295  06DF  303C               	movlw	(03Ch)
  1296  06E0  00A8               	movwf	(??_SetTime+0)+0
  1297  06E1  0828               	movf	(??_SetTime+0)+0,w
  1298  06E2  00AF               	movwf	(SetTime@limit)
  1299                           	line	35
  1300                           ;Time set.c: 35: }
  1301  06E3  2EF5               	goto	l6681
  1302                           	line	36
  1303                           	
  1304  06E4                     l3399:	
  1305                           	
  1306  06E4                     l6675:	
  1307                           ;Time set.c: 36: else if(sec_set==0)
  1308  06E4  08AD               	movf	(SetTime@sec_set),f
  1309  06E5  1D03               	skipz
  1310  06E6  2EE8               	goto	u3351
  1311  06E7  2EE9               	goto	u3350
  1312  06E8                     u3351:
  1313  06E8  2EF5               	goto	l6681
  1314  06E9                     u3350:
  1315                           	line	38
  1316                           	
  1317  06E9                     l6677:	
  1318                           ;Time set.c: 37: {
  1319                           ;Time set.c: 38: store=0;
  1320  06E9  01B0               	clrf	(SetTime@store)
  1321                           	line	39
  1322                           	
  1323  06EA                     l6679:	
  1324                           ;Time set.c: 39: disply_locat=0x87;
  1325  06EA  3087               	movlw	(087h)
  1326  06EB  00A8               	movwf	(??_SetTime+0)+0
  1327  06EC  0828               	movf	(??_SetTime+0)+0,w
  1328  06ED  00AE               	movwf	(SetTime@disply_locat)
  1329                           	line	40
  1330                           ;Time set.c: 40: limit=60;
  1331  06EE  303C               	movlw	(03Ch)
  1332  06EF  00A8               	movwf	(??_SetTime+0)+0
  1333  06F0  0828               	movf	(??_SetTime+0)+0,w
  1334  06F1  00AF               	movwf	(SetTime@limit)
  1335  06F2  2EF5               	goto	l6681
  1336                           	line	41
  1337                           	
  1338  06F3                     l3401:	
  1339  06F3  2EF5               	goto	l6681
  1340                           	line	45
  1341                           	
  1342  06F4                     l3400:	
  1343  06F4  2EF5               	goto	l6681
  1344                           	
  1345  06F5                     l3398:	
  1346                           	
  1347  06F5                     l6681:	
  1348                           ;Time set.c: 41: }
  1349                           ;Time set.c: 45: if(RD2==0)
  1350  06F5  1908               	btfsc	(66/8),(66)&7
  1351  06F6  2EF8               	goto	u3361
  1352  06F7  2EF9               	goto	u3360
  1353  06F8                     u3361:
  1354  06F8  2F3F               	goto	l3402
  1355  06F9                     u3360:
  1356  06F9  2EFB               	goto	l3403
  1357                           	line	47
  1358                           	
  1359  06FA                     l6683:	
  1360                           ;Time set.c: 46: {
  1361                           ;Time set.c: 47: while(RD2==0);
  1362  06FA  2EFB               	goto	l3403
  1363                           	
  1364  06FB                     l3404:	
  1365                           	
  1366  06FB                     l3403:	
  1367  06FB  1D08               	btfss	(66/8),(66)&7
  1368  06FC  2EFE               	goto	u3371
  1369  06FD  2EFF               	goto	u3370
  1370  06FE                     u3371:
  1371  06FE  2EFB               	goto	l3403
  1372  06FF                     u3370:
  1373  06FF  2F00               	goto	l6685
  1374                           	
  1375  0700                     l3405:	
  1376                           	line	48
  1377                           	
  1378  0700                     l6685:	
  1379                           ;Time set.c: 48: temp1[store]=temp1[store]+1;
  1380  0700  0830               	movf	(SetTime@store),w
  1381  0701  0731               	addwf	(SetTime@temp1),w
  1382  0702  00A8               	movwf	(??_SetTime+0)+0
  1383  0703  0828               	movf	0+(??_SetTime+0)+0,w
  1384  0704  0084               	movwf	fsr0
  1385  0705  1383               	bcf	status, 7	;select IRP bank0
  1386  0706  0800               	movf	indf,w
  1387  0707  3E01               	addlw	01h
  1388  0708  00A9               	movwf	(??_SetTime+1)+0
  1389  0709  0830               	movf	(SetTime@store),w
  1390  070A  0731               	addwf	(SetTime@temp1),w
  1391  070B  00AA               	movwf	(??_SetTime+2)+0
  1392  070C  082A               	movf	0+(??_SetTime+2)+0,w
  1393  070D  0084               	movwf	fsr0
  1394  070E  0829               	movf	(??_SetTime+1)+0,w
  1395  070F  0080               	movwf	indf
  1396                           	line	49
  1397                           ;Time set.c: 49: if(temp1[store]>=limit)
  1398  0710  0830               	movf	(SetTime@store),w
  1399  0711  0731               	addwf	(SetTime@temp1),w
  1400  0712  00A8               	movwf	(??_SetTime+0)+0
  1401  0713  0828               	movf	0+(??_SetTime+0)+0,w
  1402  0714  0084               	movwf	fsr0
  1403  0715  082F               	movf	(SetTime@limit),w
  1404  0716  0200               	subwf	indf,w
  1405  0717  1C03               	skipc
  1406  0718  2F1A               	goto	u3381
  1407  0719  2F1B               	goto	u3380
  1408  071A                     u3381:
  1409  071A  2F22               	goto	l6689
  1410  071B                     u3380:
  1411                           	line	51
  1412                           	
  1413  071B                     l6687:	
  1414                           ;Time set.c: 50: {
  1415                           ;Time set.c: 51: temp1[store]=0;
  1416  071B  0830               	movf	(SetTime@store),w
  1417  071C  0731               	addwf	(SetTime@temp1),w
  1418  071D  00A8               	movwf	(??_SetTime+0)+0
  1419  071E  0828               	movf	0+(??_SetTime+0)+0,w
  1420  071F  0084               	movwf	fsr0
  1421  0720  0180               	clrf	indf
  1422  0721  2F22               	goto	l6689
  1423                           	line	52
  1424                           	
  1425  0722                     l3406:	
  1426                           	line	53
  1427                           	
  1428  0722                     l6689:	
  1429                           ;Time set.c: 52: }
  1430                           ;Time set.c: 53: WriteCommandToLCD(0x01);
  1431  0722  3001               	movlw	(01h)
  1432  0723  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1433                           	line	54
  1434                           	
  1435  0728                     l6691:	
  1436                           ;Time set.c: 54: DisplayTimeToLCD(temp1);
  1437  0728  1283               	bcf	status, 5	;RP0=0, select bank0
  1438  0729  1303               	bcf	status, 6	;RP1=0, select bank0
  1439  072A  0831               	movf	(SetTime@temp1),w
  1440  072B  120A  118A  23A2   	fcall	_DisplayTimeToLCD
              120A  118A         
  1441                           	line	55
  1442                           	
  1443  0730                     l6693:	
  1444                           ;Time set.c: 55: WriteCommandToLCD(disply_locat);
  1445  0730  1283               	bcf	status, 5	;RP0=0, select bank0
  1446  0731  1303               	bcf	status, 6	;RP1=0, select bank0
  1447  0732  082E               	movf	(SetTime@disply_locat),w
  1448  0733  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1449                           	line	56
  1450                           	
  1451  0738                     l6695:	
  1452                           ;Time set.c: 56: WriteCommandToLCD(0x0e);
  1453  0738  300E               	movlw	(0Eh)
  1454  0739  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1455                           	line	57
  1456                           ;Time set.c: 57: goto menustart;
  1457  073E  2EB1               	goto	l3392
  1458                           	line	58
  1459                           	
  1460  073F                     l3402:	
  1461                           	line	60
  1462                           ;Time set.c: 58: }
  1463                           ;Time set.c: 60: if(RD3==0)
  1464  073F  1988               	btfsc	(67/8),(67)&7
  1465  0740  2F42               	goto	u3391
  1466  0741  2F43               	goto	u3390
  1467  0742                     u3391:
  1468  0742  2F8B               	goto	l3407
  1469  0743                     u3390:
  1470  0743  2F45               	goto	l3408
  1471                           	line	62
  1472                           	
  1473  0744                     l6697:	
  1474                           ;Time set.c: 61: {
  1475                           ;Time set.c: 62: while(RD3==0);
  1476  0744  2F45               	goto	l3408
  1477                           	
  1478  0745                     l3409:	
  1479                           	
  1480  0745                     l3408:	
  1481  0745  1D88               	btfss	(67/8),(67)&7
  1482  0746  2F48               	goto	u3401
  1483  0747  2F49               	goto	u3400
  1484  0748                     u3401:
  1485  0748  2F45               	goto	l3408
  1486  0749                     u3400:
  1487  0749  2F4A               	goto	l6699
  1488                           	
  1489  074A                     l3410:	
  1490                           	line	63
  1491                           	
  1492  074A                     l6699:	
  1493                           ;Time set.c: 63: if(temp1[store]<=0)
  1494  074A  0830               	movf	(SetTime@store),w
  1495  074B  0731               	addwf	(SetTime@temp1),w
  1496  074C  00A8               	movwf	(??_SetTime+0)+0
  1497  074D  0828               	movf	0+(??_SetTime+0)+0,w
  1498  074E  0084               	movwf	fsr0
  1499  074F  1383               	bcf	status, 7	;select IRP bank0
  1500  0750  0880               	movf	indf,f
  1501  0751  1D03               	skipz
  1502  0752  2F54               	goto	u3411
  1503  0753  2F55               	goto	u3410
  1504  0754                     u3411:
  1505  0754  2F5F               	goto	l3411
  1506  0755                     u3410:
  1507                           	line	65
  1508                           	
  1509  0755                     l6701:	
  1510                           ;Time set.c: 64: {
  1511                           ;Time set.c: 65: temp1[store]=limit+1;
  1512  0755  082F               	movf	(SetTime@limit),w
  1513  0756  3E01               	addlw	01h
  1514  0757  00A8               	movwf	(??_SetTime+0)+0
  1515  0758  0830               	movf	(SetTime@store),w
  1516  0759  0731               	addwf	(SetTime@temp1),w
  1517  075A  00A9               	movwf	(??_SetTime+1)+0
  1518  075B  0829               	movf	0+(??_SetTime+1)+0,w
  1519  075C  0084               	movwf	fsr0
  1520  075D  0828               	movf	(??_SetTime+0)+0,w
  1521  075E  0080               	movwf	indf
  1522                           	line	66
  1523                           	
  1524  075F                     l3411:	
  1525                           	line	67
  1526                           ;Time set.c: 66: }
  1527                           ;Time set.c: 67: temp1[store]=temp1[store]-1;
  1528  075F  0830               	movf	(SetTime@store),w
  1529  0760  0731               	addwf	(SetTime@temp1),w
  1530  0761  00A8               	movwf	(??_SetTime+0)+0
  1531  0762  0828               	movf	0+(??_SetTime+0)+0,w
  1532  0763  0084               	movwf	fsr0
  1533  0764  0800               	movf	indf,w
  1534  0765  3EFF               	addlw	0FFh
  1535  0766  00A9               	movwf	(??_SetTime+1)+0
  1536  0767  0830               	movf	(SetTime@store),w
  1537  0768  0731               	addwf	(SetTime@temp1),w
  1538  0769  00AA               	movwf	(??_SetTime+2)+0
  1539  076A  082A               	movf	0+(??_SetTime+2)+0,w
  1540  076B  0084               	movwf	fsr0
  1541  076C  0829               	movf	(??_SetTime+1)+0,w
  1542  076D  0080               	movwf	indf
  1543                           	line	69
  1544                           	
  1545  076E                     l6703:	
  1546                           ;Time set.c: 69: WriteCommandToLCD(0x01);
  1547  076E  3001               	movlw	(01h)
  1548  076F  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1549                           	line	70
  1550                           	
  1551  0774                     l6705:	
  1552                           ;Time set.c: 70: DisplayTimeToLCD(temp1);
  1553  0774  1283               	bcf	status, 5	;RP0=0, select bank0
  1554  0775  1303               	bcf	status, 6	;RP1=0, select bank0
  1555  0776  0831               	movf	(SetTime@temp1),w
  1556  0777  120A  118A  23A2   	fcall	_DisplayTimeToLCD
              120A  118A         
  1557                           	line	71
  1558                           	
  1559  077C                     l6707:	
  1560                           ;Time set.c: 71: WriteCommandToLCD(disply_locat);
  1561  077C  1283               	bcf	status, 5	;RP0=0, select bank0
  1562  077D  1303               	bcf	status, 6	;RP1=0, select bank0
  1563  077E  082E               	movf	(SetTime@disply_locat),w
  1564  077F  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1565                           	line	72
  1566                           	
  1567  0784                     l6709:	
  1568                           ;Time set.c: 72: WriteCommandToLCD(0x0e);
  1569  0784  300E               	movlw	(0Eh)
  1570  0785  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1571                           	line	73
  1572                           ;Time set.c: 73: goto menustart;
  1573  078A  2EB1               	goto	l3392
  1574                           	line	74
  1575                           	
  1576  078B                     l3407:	
  1577                           	line	75
  1578                           ;Time set.c: 74: }
  1579                           ;Time set.c: 75: if(RD1==0)
  1580  078B  1888               	btfsc	(65/8),(65)&7
  1581  078C  2F8E               	goto	u3421
  1582  078D  2F8F               	goto	u3420
  1583  078E                     u3421:
  1584  078E  2FFF               	goto	l3422
  1585  078F                     u3420:
  1586  078F  2F91               	goto	l3413
  1587                           	line	77
  1588                           	
  1589  0790                     l6711:	
  1590                           ;Time set.c: 76: {
  1591                           ;Time set.c: 77: while(RD1==0);
  1592  0790  2F91               	goto	l3413
  1593                           	
  1594  0791                     l3414:	
  1595                           	
  1596  0791                     l3413:	
  1597  0791  1C88               	btfss	(65/8),(65)&7
  1598  0792  2F94               	goto	u3431
  1599  0793  2F95               	goto	u3430
  1600  0794                     u3431:
  1601  0794  2F91               	goto	l3413
  1602  0795                     u3430:
  1603  0795  2F96               	goto	l6713
  1604                           	
  1605  0796                     l3415:	
  1606                           	line	78
  1607                           	
  1608  0796                     l6713:	
  1609                           ;Time set.c: 78: if(hr_set==0)
  1610  0796  08AB               	movf	(SetTime@hr_set),f
  1611  0797  1D03               	skipz
  1612  0798  2F9A               	goto	u3441
  1613  0799  2F9B               	goto	u3440
  1614  079A                     u3441:
  1615  079A  2FAE               	goto	l6721
  1616  079B                     u3440:
  1617                           	line	80
  1618                           	
  1619  079B                     l6715:	
  1620                           ;Time set.c: 79: {
  1621                           ;Time set.c: 80: WriteCommandToLCD(0x84);
  1622  079B  3084               	movlw	(084h)
  1623  079C  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1624                           	line	81
  1625                           ;Time set.c: 81: WriteCommandToLCD(0x0e);
  1626  07A1  300E               	movlw	(0Eh)
  1627  07A2  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1628                           	line	82
  1629                           	
  1630  07A7                     l6717:	
  1631                           ;Time set.c: 82: hr_set=1;
  1632  07A7  1283               	bcf	status, 5	;RP0=0, select bank0
  1633  07A8  1303               	bcf	status, 6	;RP1=0, select bank0
  1634  07A9  01AB               	clrf	(SetTime@hr_set)
  1635  07AA  1403               	bsf	status,0
  1636  07AB  0DAB               	rlf	(SetTime@hr_set),f
  1637                           	line	83
  1638                           ;Time set.c: 83: goto menustart;
  1639  07AC  2EB1               	goto	l3392
  1640                           	line	84
  1641                           	
  1642  07AD                     l6719:	
  1643                           ;Time set.c: 84: }
  1644  07AD  2FFF               	goto	l3422
  1645                           	line	85
  1646                           	
  1647  07AE                     l3416:	
  1648                           	
  1649  07AE                     l6721:	
  1650                           ;Time set.c: 85: else if(min_set==0)
  1651  07AE  08AC               	movf	(SetTime@min_set),f
  1652  07AF  1D03               	skipz
  1653  07B0  2FB2               	goto	u3451
  1654  07B1  2FB3               	goto	u3450
  1655  07B2                     u3451:
  1656  07B2  2FC6               	goto	l6729
  1657  07B3                     u3450:
  1658                           	line	87
  1659                           	
  1660  07B3                     l6723:	
  1661                           ;Time set.c: 86: {
  1662                           ;Time set.c: 87: WriteCommandToLCD(0x87);
  1663  07B3  3087               	movlw	(087h)
  1664  07B4  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1665                           	line	88
  1666                           ;Time set.c: 88: WriteCommandToLCD(0x0e);
  1667  07B9  300E               	movlw	(0Eh)
  1668  07BA  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1669                           	line	89
  1670                           	
  1671  07BF                     l6725:	
  1672                           ;Time set.c: 89: min_set=1;
  1673  07BF  1283               	bcf	status, 5	;RP0=0, select bank0
  1674  07C0  1303               	bcf	status, 6	;RP1=0, select bank0
  1675  07C1  01AC               	clrf	(SetTime@min_set)
  1676  07C2  1403               	bsf	status,0
  1677  07C3  0DAC               	rlf	(SetTime@min_set),f
  1678                           	line	90
  1679                           ;Time set.c: 90: goto menustart;
  1680  07C4  2EB1               	goto	l3392
  1681                           	line	91
  1682                           	
  1683  07C5                     l6727:	
  1684                           ;Time set.c: 91: }
  1685  07C5  2FFF               	goto	l3422
  1686                           	line	92
  1687                           	
  1688  07C6                     l3418:	
  1689                           	
  1690  07C6                     l6729:	
  1691                           ;Time set.c: 92: else if(sec_set==0)
  1692  07C6  08AD               	movf	(SetTime@sec_set),f
  1693  07C7  1D03               	skipz
  1694  07C8  2FCA               	goto	u3461
  1695  07C9  2FCB               	goto	u3460
  1696  07CA                     u3461:
  1697  07CA  2FD0               	goto	l3420
  1698  07CB                     u3460:
  1699                           	line	94
  1700                           	
  1701  07CB                     l6731:	
  1702                           ;Time set.c: 93: {
  1703                           ;Time set.c: 94: sec_set=1;
  1704  07CB  01AD               	clrf	(SetTime@sec_set)
  1705  07CC  1403               	bsf	status,0
  1706  07CD  0DAD               	rlf	(SetTime@sec_set),f
  1707                           	line	96
  1708                           ;Time set.c: 96: goto menustart;
  1709  07CE  2EB1               	goto	l3392
  1710                           	line	97
  1711                           	
  1712  07CF                     l6733:	
  1713                           ;Time set.c: 97: }
  1714  07CF  2FFF               	goto	l3422
  1715                           	line	98
  1716                           	
  1717  07D0                     l3420:	
  1718                           	line	100
  1719                           ;Time set.c: 98: else
  1720                           ;Time set.c: 99: {
  1721                           ;Time set.c: 100: hr_set=0;
  1722  07D0  01AB               	clrf	(SetTime@hr_set)
  1723                           	line	101
  1724                           ;Time set.c: 101: min_set=0;
  1725  07D1  01AC               	clrf	(SetTime@min_set)
  1726                           	line	102
  1727                           ;Time set.c: 102: sec_set=0;
  1728  07D2  01AD               	clrf	(SetTime@sec_set)
  1729                           	line	103
  1730                           	
  1731  07D3                     l6735:	
  1732                           ;Time set.c: 103: Set_DS1307_RTC_Time(2, temp1[2], temp1[1], temp1[0]);
  1733  07D3  0831               	movf	(SetTime@temp1),w
  1734  07D4  3E02               	addlw	02h
  1735  07D5  0084               	movwf	fsr0
  1736  07D6  1383               	bcf	status, 7	;select IRP bank0
  1737  07D7  0800               	movf	indf,w
  1738  07D8  00A8               	movwf	(??_SetTime+0)+0
  1739  07D9  0828               	movf	(??_SetTime+0)+0,w
  1740  07DA  00F9               	movwf	(?_Set_DS1307_RTC_Time)
  1741  07DB  0831               	movf	(SetTime@temp1),w
  1742  07DC  3E01               	addlw	01h
  1743  07DD  0084               	movwf	fsr0
  1744  07DE  0800               	movf	indf,w
  1745  07DF  00A9               	movwf	(??_SetTime+1)+0
  1746  07E0  0829               	movf	(??_SetTime+1)+0,w
  1747  07E1  00FA               	movwf	0+(?_Set_DS1307_RTC_Time)+01h
  1748  07E2  0831               	movf	(SetTime@temp1),w
  1749  07E3  0084               	movwf	fsr0
  1750  07E4  0800               	movf	indf,w
  1751  07E5  00AA               	movwf	(??_SetTime+2)+0
  1752  07E6  082A               	movf	(??_SetTime+2)+0,w
  1753  07E7  00FB               	movwf	0+(?_Set_DS1307_RTC_Time)+02h
  1754  07E8  3002               	movlw	(02h)
  1755  07E9  120A  118A  22DC   	fcall	_Set_DS1307_RTC_Time
              120A  118A         
  1756                           	line	104
  1757                           	
  1758  07EE                     l6737:	
  1759                           ;Time set.c: 104: WriteCommandToLCD(0xc1);
  1760  07EE  30C1               	movlw	(0C1h)
  1761  07EF  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1762                           	line	105
  1763                           	
  1764  07F4                     l6739:	
  1765                           ;Time set.c: 105: WriteStringToLCD("time set ok");
  1766  07F4  3001               	movlw	((STR_11-__stringbase))&0ffh
  1767  07F5  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  1768  07FA  2FFF               	goto	l3422
  1769                           	line	106
  1770                           	
  1771  07FB                     l3421:	
  1772  07FB  2FFF               	goto	l3422
  1773                           	
  1774  07FC                     l3419:	
  1775  07FC  2FFF               	goto	l3422
  1776                           	
  1777  07FD                     l3417:	
  1778  07FD  2FFF               	goto	l3422
  1779                           	line	107
  1780                           	
  1781  07FE                     l3412:	
  1782  07FE  2FFF               	goto	l3422
  1783                           	line	114
  1784                           	
  1785  07FF                     l3387:	
  1786                           	line	118
  1787                           	
  1788  07FF                     l3422:	
  1789  07FF  0008               	return
  1790                           	opt stack 0
  1791                           GLOBAL	__end_of_SetTime
  1792  0800                     	__end_of_SetTime:
  1793 ;; =============== function _SetTime ends ============
  1794                           
  1795                           	signat	_SetTime,88
  1796                           	global	_DisplayDateOnLCD
  1797                           psect	text575,local,class=CODE,delta=2
  1798                           global __ptext575
  1799  0568                     __ptext575:
  1800                           
  1801 ;; *************** function _DisplayDateOnLCD *****************
  1802 ;; Defined at:
  1803 ;;		line 146 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  pDateArray      1    wreg     PTR unsigned char 
  1806 ;;		 -> pRTCArray(4), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  pDateArray      1   11[COMMON] PTR unsigned char 
  1809 ;;		 -> pRTCArray(4), 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;		None               void
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         1       0       0       0       0
  1821 ;;      Temps:          2       0       0       0       0
  1822 ;;      Totals:         3       0       0       0       0
  1823 ;;Total ram usage:        3 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    3
  1826 ;; This function calls:
  1827 ;;		_WriteCommandToLCD
  1828 ;;		___awdiv
  1829 ;;		_WriteDataToLCD
  1830 ;;		___awmod
  1831 ;;		_WriteStringToLCD
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           psect	text575
  1837                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  1838                           	line	146
  1839                           	global	__size_of_DisplayDateOnLCD
  1840  0110                     	__size_of_DisplayDateOnLCD	equ	__end_of_DisplayDateOnLCD-_DisplayDateOnLCD
  1841                           	
  1842  0568                     _DisplayDateOnLCD:	
  1843                           	opt	stack 4
  1844                           ; Regs used in _DisplayDateOnLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1845                           ;DisplayDateOnLCD@pDateArray stored from wreg
  1846  0568  00FB               	movwf	(DisplayDateOnLCD@pDateArray)
  1847                           	line	147
  1848                           	
  1849  0569                     l6615:	
  1850                           ;LCD.c: 147: WriteCommandToLCD(0xc0);
  1851  0569  30C0               	movlw	(0C0h)
  1852  056A  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  1853                           	line	150
  1854                           	
  1855  056F                     l6617:	
  1856                           ;LCD.c: 150: WriteDataToLCD( (pDateArray[1]/10)+0x30 );
  1857  056F  300A               	movlw	low(0Ah)
  1858  0570  00F0               	movwf	(?___awdiv)
  1859  0571  3000               	movlw	high(0Ah)
  1860  0572  00F1               	movwf	((?___awdiv))+1
  1861  0573  087B               	movf	(DisplayDateOnLCD@pDateArray),w
  1862  0574  3E01               	addlw	01h
  1863  0575  0084               	movwf	fsr0
  1864  0576  1383               	bcf	status, 7	;select IRP bank0
  1865  0577  0800               	movf	indf,w
  1866  0578  00F9               	movwf	(??_DisplayDateOnLCD+0)+0
  1867  0579  01FA               	clrf	(??_DisplayDateOnLCD+0)+0+1
  1868  057A  0879               	movf	0+(??_DisplayDateOnLCD+0)+0,w
  1869  057B  00F2               	movwf	0+(?___awdiv)+02h
  1870  057C  087A               	movf	1+(??_DisplayDateOnLCD+0)+0,w
  1871  057D  00F3               	movwf	1+(?___awdiv)+02h
  1872  057E  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  1873  0583  0870               	movf	(0+(?___awdiv)),w
  1874  0584  3E30               	addlw	030h
  1875  0585  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  1876                           	line	151
  1877                           	
  1878  058A                     l6619:	
  1879                           ;LCD.c: 151: WriteDataToLCD( (pDateArray[1]%10)+0x30 );
  1880  058A  300A               	movlw	low(0Ah)
  1881  058B  00F0               	movwf	(?___awmod)
  1882  058C  3000               	movlw	high(0Ah)
  1883  058D  00F1               	movwf	((?___awmod))+1
  1884  058E  087B               	movf	(DisplayDateOnLCD@pDateArray),w
  1885  058F  3E01               	addlw	01h
  1886  0590  0084               	movwf	fsr0
  1887  0591  1383               	bcf	status, 7	;select IRP bank0
  1888  0592  0800               	movf	indf,w
  1889  0593  00F9               	movwf	(??_DisplayDateOnLCD+0)+0
  1890  0594  01FA               	clrf	(??_DisplayDateOnLCD+0)+0+1
  1891  0595  0879               	movf	0+(??_DisplayDateOnLCD+0)+0,w
  1892  0596  00F2               	movwf	0+(?___awmod)+02h
  1893  0597  087A               	movf	1+(??_DisplayDateOnLCD+0)+0,w
  1894  0598  00F3               	movwf	1+(?___awmod)+02h
  1895  0599  120A  158A  279A   	fcall	___awmod
              120A  118A         
  1896  059E  0870               	movf	(0+(?___awmod)),w
  1897  059F  3E30               	addlw	030h
  1898  05A0  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  1899                           	line	154
  1900                           ;LCD.c: 154: WriteDataToLCD('/');
  1901  05A5  302F               	movlw	(02Fh)
  1902  05A6  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  1903                           	line	157
  1904                           	
  1905  05AB                     l6621:	
  1906                           ;LCD.c: 157: WriteDataToLCD( (pDateArray[2]/10)+0x30 );
  1907  05AB  300A               	movlw	low(0Ah)
  1908  05AC  00F0               	movwf	(?___awdiv)
  1909  05AD  3000               	movlw	high(0Ah)
  1910  05AE  00F1               	movwf	((?___awdiv))+1
  1911  05AF  087B               	movf	(DisplayDateOnLCD@pDateArray),w
  1912  05B0  3E02               	addlw	02h
  1913  05B1  0084               	movwf	fsr0
  1914  05B2  1383               	bcf	status, 7	;select IRP bank0
  1915  05B3  0800               	movf	indf,w
  1916  05B4  00F9               	movwf	(??_DisplayDateOnLCD+0)+0
  1917  05B5  01FA               	clrf	(??_DisplayDateOnLCD+0)+0+1
  1918  05B6  0879               	movf	0+(??_DisplayDateOnLCD+0)+0,w
  1919  05B7  00F2               	movwf	0+(?___awdiv)+02h
  1920  05B8  087A               	movf	1+(??_DisplayDateOnLCD+0)+0,w
  1921  05B9  00F3               	movwf	1+(?___awdiv)+02h
  1922  05BA  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  1923  05BF  0870               	movf	(0+(?___awdiv)),w
  1924  05C0  3E30               	addlw	030h
  1925  05C1  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  1926                           	line	158
  1927                           	
  1928  05C6                     l6623:	
  1929                           ;LCD.c: 158: WriteDataToLCD( (pDateArray[2]%10)+0x30 );
  1930  05C6  300A               	movlw	low(0Ah)
  1931  05C7  00F0               	movwf	(?___awmod)
  1932  05C8  3000               	movlw	high(0Ah)
  1933  05C9  00F1               	movwf	((?___awmod))+1
  1934  05CA  087B               	movf	(DisplayDateOnLCD@pDateArray),w
  1935  05CB  3E02               	addlw	02h
  1936  05CC  0084               	movwf	fsr0
  1937  05CD  1383               	bcf	status, 7	;select IRP bank0
  1938  05CE  0800               	movf	indf,w
  1939  05CF  00F9               	movwf	(??_DisplayDateOnLCD+0)+0
  1940  05D0  01FA               	clrf	(??_DisplayDateOnLCD+0)+0+1
  1941  05D1  0879               	movf	0+(??_DisplayDateOnLCD+0)+0,w
  1942  05D2  00F2               	movwf	0+(?___awmod)+02h
  1943  05D3  087A               	movf	1+(??_DisplayDateOnLCD+0)+0,w
  1944  05D4  00F3               	movwf	1+(?___awmod)+02h
  1945  05D5  120A  158A  279A   	fcall	___awmod
              120A  118A         
  1946  05DA  0870               	movf	(0+(?___awmod)),w
  1947  05DB  3E30               	addlw	030h
  1948  05DC  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  1949                           	line	161
  1950                           ;LCD.c: 161: WriteDataToLCD('/');
  1951  05E1  302F               	movlw	(02Fh)
  1952  05E2  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  1953                           	line	164
  1954                           	
  1955  05E7                     l6625:	
  1956                           ;LCD.c: 164: WriteDataToLCD( (pDateArray[3]/10)+0x30 );
  1957  05E7  300A               	movlw	low(0Ah)
  1958  05E8  00F0               	movwf	(?___awdiv)
  1959  05E9  3000               	movlw	high(0Ah)
  1960  05EA  00F1               	movwf	((?___awdiv))+1
  1961  05EB  087B               	movf	(DisplayDateOnLCD@pDateArray),w
  1962  05EC  3E03               	addlw	03h
  1963  05ED  0084               	movwf	fsr0
  1964  05EE  1383               	bcf	status, 7	;select IRP bank0
  1965  05EF  0800               	movf	indf,w
  1966  05F0  00F9               	movwf	(??_DisplayDateOnLCD+0)+0
  1967  05F1  01FA               	clrf	(??_DisplayDateOnLCD+0)+0+1
  1968  05F2  0879               	movf	0+(??_DisplayDateOnLCD+0)+0,w
  1969  05F3  00F2               	movwf	0+(?___awdiv)+02h
  1970  05F4  087A               	movf	1+(??_DisplayDateOnLCD+0)+0,w
  1971  05F5  00F3               	movwf	1+(?___awdiv)+02h
  1972  05F6  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  1973  05FB  0870               	movf	(0+(?___awdiv)),w
  1974  05FC  3E30               	addlw	030h
  1975  05FD  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  1976                           	line	165
  1977                           	
  1978  0602                     l6627:	
  1979                           ;LCD.c: 165: WriteDataToLCD( (pDateArray[3]%10)+0x30 );
  1980  0602  300A               	movlw	low(0Ah)
  1981  0603  00F0               	movwf	(?___awmod)
  1982  0604  3000               	movlw	high(0Ah)
  1983  0605  00F1               	movwf	((?___awmod))+1
  1984  0606  087B               	movf	(DisplayDateOnLCD@pDateArray),w
  1985  0607  3E03               	addlw	03h
  1986  0608  0084               	movwf	fsr0
  1987  0609  1383               	bcf	status, 7	;select IRP bank0
  1988  060A  0800               	movf	indf,w
  1989  060B  00F9               	movwf	(??_DisplayDateOnLCD+0)+0
  1990  060C  01FA               	clrf	(??_DisplayDateOnLCD+0)+0+1
  1991  060D  0879               	movf	0+(??_DisplayDateOnLCD+0)+0,w
  1992  060E  00F2               	movwf	0+(?___awmod)+02h
  1993  060F  087A               	movf	1+(??_DisplayDateOnLCD+0)+0,w
  1994  0610  00F3               	movwf	1+(?___awmod)+02h
  1995  0611  120A  158A  279A   	fcall	___awmod
              120A  118A         
  1996  0616  0870               	movf	(0+(?___awmod)),w
  1997  0617  3E30               	addlw	030h
  1998  0618  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  1999                           	line	168
  2000                           ;LCD.c: 168: WriteDataToLCD(' ');
  2001  061D  3020               	movlw	(020h)
  2002  061E  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2003                           	line	171
  2004                           ;LCD.c: 171: switch(pDateArray[0])
  2005  0623  2E5D               	goto	l6647
  2006                           	line	173
  2007                           ;LCD.c: 172: {
  2008                           ;LCD.c: 173: case 1: WriteStringToLCD("MON"); break;
  2009                           	
  2010  0624                     l2063:	
  2011                           	
  2012  0624                     l6629:	
  2013  0624  301D               	movlw	((STR_3-__stringbase))&0ffh
  2014  0625  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2015  062A  2E77               	goto	l2072
  2016                           	line	174
  2017                           ;LCD.c: 174: case 2: WriteStringToLCD("TUE"); break;
  2018                           	
  2019  062B                     l2065:	
  2020                           	
  2021  062B                     l6631:	
  2022  062B  3015               	movlw	((STR_4-__stringbase))&0ffh
  2023  062C  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2024  0631  2E77               	goto	l2072
  2025                           	line	175
  2026                           ;LCD.c: 175: case 3: WriteStringToLCD("WED"); break;
  2027                           	
  2028  0632                     l2066:	
  2029                           	
  2030  0632                     l6633:	
  2031  0632  3011               	movlw	((STR_5-__stringbase))&0ffh
  2032  0633  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2033  0638  2E77               	goto	l2072
  2034                           	line	176
  2035                           ;LCD.c: 176: case 4: WriteStringToLCD("THU"); break;
  2036                           	
  2037  0639                     l2067:	
  2038                           	
  2039  0639                     l6635:	
  2040  0639  3029               	movlw	((STR_6-__stringbase))&0ffh
  2041  063A  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2042  063F  2E77               	goto	l2072
  2043                           	line	177
  2044                           ;LCD.c: 177: case 5: WriteStringToLCD("FRI"); break;
  2045                           	
  2046  0640                     l2068:	
  2047                           	
  2048  0640                     l6637:	
  2049  0640  3019               	movlw	((STR_7-__stringbase))&0ffh
  2050  0641  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2051  0646  2E77               	goto	l2072
  2052                           	line	178
  2053                           ;LCD.c: 178: case 6: WriteStringToLCD("SAT"); break;
  2054                           	
  2055  0647                     l2069:	
  2056                           	
  2057  0647                     l6639:	
  2058  0647  3025               	movlw	((STR_8-__stringbase))&0ffh
  2059  0648  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2060  064D  2E77               	goto	l2072
  2061                           	line	179
  2062                           ;LCD.c: 179: case 7: WriteStringToLCD("SUN"); break;
  2063                           	
  2064  064E                     l2070:	
  2065                           	
  2066  064E                     l6641:	
  2067  064E  3021               	movlw	((STR_9-__stringbase))&0ffh
  2068  064F  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2069  0654  2E77               	goto	l2072
  2070                           	line	181
  2071                           ;LCD.c: 181: default: WriteStringToLCD("???"); break;
  2072                           	
  2073  0655                     l2071:	
  2074                           	
  2075  0655                     l6643:	
  2076  0655  300D               	movlw	((STR_10-__stringbase))&0ffh
  2077  0656  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2078  065B  2E77               	goto	l2072
  2079                           	line	182
  2080                           	
  2081  065C                     l6645:	
  2082                           ;LCD.c: 182: }
  2083  065C  2E77               	goto	l2072
  2084                           	line	171
  2085                           	
  2086  065D                     l2062:	
  2087                           	
  2088  065D                     l6647:	
  2089  065D  087B               	movf	(DisplayDateOnLCD@pDateArray),w
  2090  065E  0084               	movwf	fsr0
  2091  065F  1383               	bcf	status, 7	;select IRP bank0
  2092  0660  0800               	movf	indf,w
  2093                           	; Switch size 1, requested type "space"
  2094                           ; Number of cases is 7, Range of values is 1 to 7
  2095                           ; switch strategies available:
  2096                           ; Name         Instructions Cycles
  2097                           ; simple_byte           22    12 (average)
  2098                           ; direct_byte           32    11 (fixed)
  2099                           ; jumptable            263     9 (fixed)
  2100                           ;	Chosen strategy is simple_byte
  2101                           
  2102                           	opt asmopt_off
  2103  0661  3A01               	xorlw	1^0	; case 1
  2104  0662  1903               	skipnz
  2105  0663  2E24               	goto	l6629
  2106  0664  3A03               	xorlw	2^1	; case 2
  2107  0665  1903               	skipnz
  2108  0666  2E2B               	goto	l6631
  2109  0667  3A01               	xorlw	3^2	; case 3
  2110  0668  1903               	skipnz
  2111  0669  2E32               	goto	l6633
  2112  066A  3A07               	xorlw	4^3	; case 4
  2113  066B  1903               	skipnz
  2114  066C  2E39               	goto	l6635
  2115  066D  3A01               	xorlw	5^4	; case 5
  2116  066E  1903               	skipnz
  2117  066F  2E40               	goto	l6637
  2118  0670  3A03               	xorlw	6^5	; case 6
  2119  0671  1903               	skipnz
  2120  0672  2E47               	goto	l6639
  2121  0673  3A01               	xorlw	7^6	; case 7
  2122  0674  1903               	skipnz
  2123  0675  2E4E               	goto	l6641
  2124  0676  2E55               	goto	l6643
  2125                           	opt asmopt_on
  2126                           
  2127                           	line	182
  2128                           	
  2129  0677                     l2064:	
  2130                           	line	183
  2131                           	
  2132  0677                     l2072:	
  2133  0677  0008               	return
  2134                           	opt stack 0
  2135                           GLOBAL	__end_of_DisplayDateOnLCD
  2136  0678                     	__end_of_DisplayDateOnLCD:
  2137 ;; =============== function _DisplayDateOnLCD ends ============
  2138                           
  2139                           	signat	_DisplayDateOnLCD,4216
  2140                           	global	_DisplayTimeToLCD
  2141                           psect	text576,local,class=CODE,delta=2
  2142                           global __ptext576
  2143  03A2                     __ptext576:
  2144                           
  2145 ;; *************** function _DisplayTimeToLCD *****************
  2146 ;; Defined at:
  2147 ;;		line 108 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  pTimeArray      1    wreg     PTR unsigned char 
  2150 ;;		 -> pRTCArray(4), 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  pTimeArray      1   11[COMMON] PTR unsigned char 
  2153 ;;		 -> pRTCArray(4), 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;		None               void
  2156 ;; Registers used:
  2157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         1       0       0       0       0
  2165 ;;      Temps:          2       0       0       0       0
  2166 ;;      Totals:         3       0       0       0       0
  2167 ;;Total ram usage:        3 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    3
  2170 ;; This function calls:
  2171 ;;		_ClearLCDScreen
  2172 ;;		___awdiv
  2173 ;;		_WriteDataToLCD
  2174 ;;		___awmod
  2175 ;;		_WriteStringToLCD
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;;		_SetTime
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           psect	text576
  2182                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2183                           	line	108
  2184                           	global	__size_of_DisplayTimeToLCD
  2185  00DC                     	__size_of_DisplayTimeToLCD	equ	__end_of_DisplayTimeToLCD-_DisplayTimeToLCD
  2186                           	
  2187  03A2                     _DisplayTimeToLCD:	
  2188                           	opt	stack 4
  2189                           ; Regs used in _DisplayTimeToLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2190                           ;DisplayTimeToLCD@pTimeArray stored from wreg
  2191  03A2  00FB               	movwf	(DisplayTimeToLCD@pTimeArray)
  2192                           	line	109
  2193                           	
  2194  03A3                     l6591:	
  2195                           ;LCD.c: 109: ClearLCDScreen();
  2196  03A3  120A  158A  2669   	fcall	_ClearLCDScreen
              120A  118A         
  2197                           	line	112
  2198                           	
  2199  03A8                     l6593:	
  2200                           ;LCD.c: 112: WriteDataToLCD( (pTimeArray[2]/10)+0x30 );
  2201  03A8  300A               	movlw	low(0Ah)
  2202  03A9  00F0               	movwf	(?___awdiv)
  2203  03AA  3000               	movlw	high(0Ah)
  2204  03AB  00F1               	movwf	((?___awdiv))+1
  2205  03AC  087B               	movf	(DisplayTimeToLCD@pTimeArray),w
  2206  03AD  3E02               	addlw	02h
  2207  03AE  0084               	movwf	fsr0
  2208  03AF  1383               	bcf	status, 7	;select IRP bank0
  2209  03B0  0800               	movf	indf,w
  2210  03B1  00F9               	movwf	(??_DisplayTimeToLCD+0)+0
  2211  03B2  01FA               	clrf	(??_DisplayTimeToLCD+0)+0+1
  2212  03B3  0879               	movf	0+(??_DisplayTimeToLCD+0)+0,w
  2213  03B4  00F2               	movwf	0+(?___awdiv)+02h
  2214  03B5  087A               	movf	1+(??_DisplayTimeToLCD+0)+0,w
  2215  03B6  00F3               	movwf	1+(?___awdiv)+02h
  2216  03B7  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  2217  03BC  0870               	movf	(0+(?___awdiv)),w
  2218  03BD  3E30               	addlw	030h
  2219  03BE  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2220                           	line	113
  2221                           	
  2222  03C3                     l6595:	
  2223                           ;LCD.c: 113: WriteDataToLCD( (pTimeArray[2]%10)+0x30 );
  2224  03C3  300A               	movlw	low(0Ah)
  2225  03C4  00F0               	movwf	(?___awmod)
  2226  03C5  3000               	movlw	high(0Ah)
  2227  03C6  00F1               	movwf	((?___awmod))+1
  2228  03C7  087B               	movf	(DisplayTimeToLCD@pTimeArray),w
  2229  03C8  3E02               	addlw	02h
  2230  03C9  0084               	movwf	fsr0
  2231  03CA  1383               	bcf	status, 7	;select IRP bank0
  2232  03CB  0800               	movf	indf,w
  2233  03CC  00F9               	movwf	(??_DisplayTimeToLCD+0)+0
  2234  03CD  01FA               	clrf	(??_DisplayTimeToLCD+0)+0+1
  2235  03CE  0879               	movf	0+(??_DisplayTimeToLCD+0)+0,w
  2236  03CF  00F2               	movwf	0+(?___awmod)+02h
  2237  03D0  087A               	movf	1+(??_DisplayTimeToLCD+0)+0,w
  2238  03D1  00F3               	movwf	1+(?___awmod)+02h
  2239  03D2  120A  158A  279A   	fcall	___awmod
              120A  118A         
  2240  03D7  0870               	movf	(0+(?___awmod)),w
  2241  03D8  3E30               	addlw	030h
  2242  03D9  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2243                           	line	116
  2244                           ;LCD.c: 116: WriteDataToLCD(':');
  2245  03DE  303A               	movlw	(03Ah)
  2246  03DF  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2247                           	line	119
  2248                           	
  2249  03E4                     l6597:	
  2250                           ;LCD.c: 119: WriteDataToLCD( (pTimeArray[1]/10)+0x30 );
  2251  03E4  300A               	movlw	low(0Ah)
  2252  03E5  00F0               	movwf	(?___awdiv)
  2253  03E6  3000               	movlw	high(0Ah)
  2254  03E7  00F1               	movwf	((?___awdiv))+1
  2255  03E8  087B               	movf	(DisplayTimeToLCD@pTimeArray),w
  2256  03E9  3E01               	addlw	01h
  2257  03EA  0084               	movwf	fsr0
  2258  03EB  1383               	bcf	status, 7	;select IRP bank0
  2259  03EC  0800               	movf	indf,w
  2260  03ED  00F9               	movwf	(??_DisplayTimeToLCD+0)+0
  2261  03EE  01FA               	clrf	(??_DisplayTimeToLCD+0)+0+1
  2262  03EF  0879               	movf	0+(??_DisplayTimeToLCD+0)+0,w
  2263  03F0  00F2               	movwf	0+(?___awdiv)+02h
  2264  03F1  087A               	movf	1+(??_DisplayTimeToLCD+0)+0,w
  2265  03F2  00F3               	movwf	1+(?___awdiv)+02h
  2266  03F3  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  2267  03F8  0870               	movf	(0+(?___awdiv)),w
  2268  03F9  3E30               	addlw	030h
  2269  03FA  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2270                           	line	120
  2271                           	
  2272  03FF                     l6599:	
  2273                           ;LCD.c: 120: WriteDataToLCD( (pTimeArray[1]%10)+0x30 );
  2274  03FF  300A               	movlw	low(0Ah)
  2275  0400  00F0               	movwf	(?___awmod)
  2276  0401  3000               	movlw	high(0Ah)
  2277  0402  00F1               	movwf	((?___awmod))+1
  2278  0403  087B               	movf	(DisplayTimeToLCD@pTimeArray),w
  2279  0404  3E01               	addlw	01h
  2280  0405  0084               	movwf	fsr0
  2281  0406  1383               	bcf	status, 7	;select IRP bank0
  2282  0407  0800               	movf	indf,w
  2283  0408  00F9               	movwf	(??_DisplayTimeToLCD+0)+0
  2284  0409  01FA               	clrf	(??_DisplayTimeToLCD+0)+0+1
  2285  040A  0879               	movf	0+(??_DisplayTimeToLCD+0)+0,w
  2286  040B  00F2               	movwf	0+(?___awmod)+02h
  2287  040C  087A               	movf	1+(??_DisplayTimeToLCD+0)+0,w
  2288  040D  00F3               	movwf	1+(?___awmod)+02h
  2289  040E  120A  158A  279A   	fcall	___awmod
              120A  118A         
  2290  0413  0870               	movf	(0+(?___awmod)),w
  2291  0414  3E30               	addlw	030h
  2292  0415  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2293                           	line	123
  2294                           ;LCD.c: 123: WriteDataToLCD(':');
  2295  041A  303A               	movlw	(03Ah)
  2296  041B  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2297                           	line	126
  2298                           	
  2299  0420                     l6601:	
  2300                           ;LCD.c: 126: WriteDataToLCD( (pTimeArray[0]/10)+0x30 );
  2301  0420  300A               	movlw	low(0Ah)
  2302  0421  00F0               	movwf	(?___awdiv)
  2303  0422  3000               	movlw	high(0Ah)
  2304  0423  00F1               	movwf	((?___awdiv))+1
  2305  0424  087B               	movf	(DisplayTimeToLCD@pTimeArray),w
  2306  0425  0084               	movwf	fsr0
  2307  0426  1383               	bcf	status, 7	;select IRP bank0
  2308  0427  0800               	movf	indf,w
  2309  0428  00F9               	movwf	(??_DisplayTimeToLCD+0)+0
  2310  0429  01FA               	clrf	(??_DisplayTimeToLCD+0)+0+1
  2311  042A  0879               	movf	0+(??_DisplayTimeToLCD+0)+0,w
  2312  042B  00F2               	movwf	0+(?___awdiv)+02h
  2313  042C  087A               	movf	1+(??_DisplayTimeToLCD+0)+0,w
  2314  042D  00F3               	movwf	1+(?___awdiv)+02h
  2315  042E  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  2316  0433  0870               	movf	(0+(?___awdiv)),w
  2317  0434  3E30               	addlw	030h
  2318  0435  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2319                           	line	127
  2320                           	
  2321  043A                     l6603:	
  2322                           ;LCD.c: 127: WriteDataToLCD( (pTimeArray[0]%10)+0x30 );
  2323  043A  300A               	movlw	low(0Ah)
  2324  043B  00F0               	movwf	(?___awmod)
  2325  043C  3000               	movlw	high(0Ah)
  2326  043D  00F1               	movwf	((?___awmod))+1
  2327  043E  087B               	movf	(DisplayTimeToLCD@pTimeArray),w
  2328  043F  0084               	movwf	fsr0
  2329  0440  1383               	bcf	status, 7	;select IRP bank0
  2330  0441  0800               	movf	indf,w
  2331  0442  00F9               	movwf	(??_DisplayTimeToLCD+0)+0
  2332  0443  01FA               	clrf	(??_DisplayTimeToLCD+0)+0+1
  2333  0444  0879               	movf	0+(??_DisplayTimeToLCD+0)+0,w
  2334  0445  00F2               	movwf	0+(?___awmod)+02h
  2335  0446  087A               	movf	1+(??_DisplayTimeToLCD+0)+0,w
  2336  0447  00F3               	movwf	1+(?___awmod)+02h
  2337  0448  120A  158A  279A   	fcall	___awmod
              120A  118A         
  2338  044D  0870               	movf	(0+(?___awmod)),w
  2339  044E  3E30               	addlw	030h
  2340  044F  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2341                           	line	130
  2342                           ;LCD.c: 130: WriteDataToLCD(' ');
  2343  0454  3020               	movlw	(020h)
  2344  0455  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2345                           	line	133
  2346                           ;LCD.c: 133: switch(pTimeArray[3])
  2347  045A  2C71               	goto	l6613
  2348                           	line	135
  2349                           ;LCD.c: 134: {
  2350                           ;LCD.c: 135: case 0: WriteStringToLCD("AM"); break;
  2351                           	
  2352  045B                     l2055:	
  2353                           	
  2354  045B                     l6605:	
  2355  045B  302D               	movlw	((STR_1-__stringbase))&0ffh
  2356  045C  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2357  0461  2C7D               	goto	l2059
  2358                           	line	136
  2359                           ;LCD.c: 136: case 1: WriteStringToLCD("PM"); break;
  2360                           	
  2361  0462                     l2057:	
  2362                           	
  2363  0462                     l6607:	
  2364  0462  3030               	movlw	((STR_2-__stringbase))&0ffh
  2365  0463  120A  158A  26C1   	fcall	_WriteStringToLCD
              120A  118A         
  2366  0468  2C7D               	goto	l2059
  2367                           	line	138
  2368                           ;LCD.c: 138: default: WriteDataToLCD('H'); break;
  2369                           	
  2370  0469                     l2058:	
  2371                           	
  2372  0469                     l6609:	
  2373  0469  3048               	movlw	(048h)
  2374  046A  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  118A         
  2375  046F  2C7D               	goto	l2059
  2376                           	line	139
  2377                           	
  2378  0470                     l6611:	
  2379                           ;LCD.c: 139: }
  2380  0470  2C7D               	goto	l2059
  2381                           	line	133
  2382                           	
  2383  0471                     l2054:	
  2384                           	
  2385  0471                     l6613:	
  2386  0471  087B               	movf	(DisplayTimeToLCD@pTimeArray),w
  2387  0472  3E03               	addlw	03h
  2388  0473  0084               	movwf	fsr0
  2389  0474  1383               	bcf	status, 7	;select IRP bank0
  2390  0475  0800               	movf	indf,w
  2391                           	; Switch size 1, requested type "space"
  2392                           ; Number of cases is 2, Range of values is 0 to 1
  2393                           ; switch strategies available:
  2394                           ; Name         Instructions Cycles
  2395                           ; simple_byte            7     4 (average)
  2396                           ; direct_byte           14     8 (fixed)
  2397                           ; jumptable            260     6 (fixed)
  2398                           ; rangetable             6     6 (fixed)
  2399                           ; spacedrange           10     9 (fixed)
  2400                           ; locatedrange           2     3 (fixed)
  2401                           ;	Chosen strategy is simple_byte
  2402                           
  2403                           	opt asmopt_off
  2404  0476  3A00               	xorlw	0^0	; case 0
  2405  0477  1903               	skipnz
  2406  0478  2C5B               	goto	l6605
  2407  0479  3A01               	xorlw	1^0	; case 1
  2408  047A  1903               	skipnz
  2409  047B  2C62               	goto	l6607
  2410  047C  2C69               	goto	l6609
  2411                           	opt asmopt_on
  2412                           
  2413                           	line	139
  2414                           	
  2415  047D                     l2056:	
  2416                           	line	140
  2417                           	
  2418  047D                     l2059:	
  2419  047D  0008               	return
  2420                           	opt stack 0
  2421                           GLOBAL	__end_of_DisplayTimeToLCD
  2422  047E                     	__end_of_DisplayTimeToLCD:
  2423 ;; =============== function _DisplayTimeToLCD ends ============
  2424                           
  2425                           	signat	_DisplayTimeToLCD,4216
  2426                           	global	_ClearLCDScreen
  2427                           psect	text577,local,class=CODE,delta=2
  2428                           global __ptext577
  2429  0E69                     __ptext577:
  2430                           
  2431 ;; *************** function _ClearLCDScreen *****************
  2432 ;; Defined at:
  2433 ;;		line 99 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2447 ;;      Params:         0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0
  2449 ;;      Temps:          2       0       0       0       0
  2450 ;;      Totals:         2       0       0       0       0
  2451 ;;Total ram usage:        2 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    2
  2454 ;; This function calls:
  2455 ;;		_WriteCommandToLCD
  2456 ;; This function is called by:
  2457 ;;		_DisplayTimeToLCD
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           psect	text577
  2461                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2462                           	line	99
  2463                           	global	__size_of_ClearLCDScreen
  2464  0010                     	__size_of_ClearLCDScreen	equ	__end_of_ClearLCDScreen-_ClearLCDScreen
  2465                           	
  2466  0E69                     _ClearLCDScreen:	
  2467                           	opt	stack 4
  2468                           ; Regs used in _ClearLCDScreen: [wreg+status,2+status,0+pclath+cstack]
  2469                           	line	100
  2470                           	
  2471  0E69                     l6587:	
  2472                           ;LCD.c: 100: WriteCommandToLCD(0x01);
  2473  0E69  3001               	movlw	(01h)
  2474  0E6A  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  158A         
  2475                           	line	101
  2476                           	
  2477  0E6F                     l6589:	
  2478                           ;LCD.c: 101: _delay((unsigned long)((2)*(20000000/4000.0)));
  2479                           	opt asmopt_off
  2480  0E6F  300D               movlw	13
  2481  0E70  00F6               movwf	((??_ClearLCDScreen+0)+0+1),f
  2482  0E71  30FB               	movlw	251
  2483  0E72  00F5               movwf	((??_ClearLCDScreen+0)+0),f
  2484  0E73                     u3487:
  2485  0E73  0BF5               	decfsz	((??_ClearLCDScreen+0)+0),f
  2486  0E74  2E73               	goto	u3487
  2487  0E75  0BF6               	decfsz	((??_ClearLCDScreen+0)+0+1),f
  2488  0E76  2E73               	goto	u3487
  2489  0E77  2E78               	nop2
  2490                           opt asmopt_on
  2491                           
  2492                           	line	102
  2493                           	
  2494  0E78                     l2051:	
  2495  0E78  0008               	return
  2496                           	opt stack 0
  2497                           GLOBAL	__end_of_ClearLCDScreen
  2498  0E79                     	__end_of_ClearLCDScreen:
  2499 ;; =============== function _ClearLCDScreen ends ============
  2500                           
  2501                           	signat	_ClearLCDScreen,88
  2502                           	global	_WriteStringToLCD
  2503                           psect	text578,local,class=CODE,delta=2
  2504                           global __ptext578
  2505  0EC1                     __ptext578:
  2506                           
  2507 ;; *************** function _WriteStringToLCD *****************
  2508 ;; Defined at:
  2509 ;;		line 92 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  s               1    wreg     PTR const unsigned char 
  2512 ;;		 -> STR_11(12), STR_10(4), STR_9(4), STR_8(4), 
  2513 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  2514 ;;		 -> STR_3(4), STR_2(3), STR_1(3), 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  s               1    6[COMMON] PTR const unsigned char 
  2517 ;;		 -> STR_11(12), STR_10(4), STR_9(4), STR_8(4), 
  2518 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  2519 ;;		 -> STR_3(4), STR_2(3), STR_1(3), 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;		None               void
  2522 ;; Registers used:
  2523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2529 ;;      Params:         0       0       0       0       0
  2530 ;;      Locals:         1       0       0       0       0
  2531 ;;      Temps:          1       0       0       0       0
  2532 ;;      Totals:         2       0       0       0       0
  2533 ;;Total ram usage:        2 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    2
  2536 ;; This function calls:
  2537 ;;		_WriteDataToLCD
  2538 ;; This function is called by:
  2539 ;;		_DisplayTimeToLCD
  2540 ;;		_DisplayDateOnLCD
  2541 ;;		_SetTime
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           psect	text578
  2545                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2546                           	line	92
  2547                           	global	__size_of_WriteStringToLCD
  2548  0021                     	__size_of_WriteStringToLCD	equ	__end_of_WriteStringToLCD-_WriteStringToLCD
  2549                           	
  2550  0EC1                     _WriteStringToLCD:	
  2551                           	opt	stack 4
  2552                           ; Regs used in _WriteStringToLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2553                           ;WriteStringToLCD@s stored from wreg
  2554  0EC1  00F6               	movwf	(WriteStringToLCD@s)
  2555                           	line	93
  2556                           	
  2557  0EC2                     l6579:	
  2558                           ;LCD.c: 93: while(*s)
  2559  0EC2  2ED4               	goto	l6585
  2560                           	
  2561  0EC3                     l2046:	
  2562                           	line	94
  2563                           	
  2564  0EC3                     l6581:	
  2565                           ;LCD.c: 94: WriteDataToLCD(*s++);
  2566  0EC3  0876               	movf	(WriteStringToLCD@s),w
  2567  0EC4  0084               	movwf	fsr0
  2568  0EC5  120A  158A  2000   	fcall	stringdir
              120A  158A         
  2569  0ECA  120A  158A  270E   	fcall	_WriteDataToLCD
              120A  158A         
  2570                           	
  2571  0ECF                     l6583:	
  2572  0ECF  3001               	movlw	(01h)
  2573  0ED0  00F5               	movwf	(??_WriteStringToLCD+0)+0
  2574  0ED1  0875               	movf	(??_WriteStringToLCD+0)+0,w
  2575  0ED2  07F6               	addwf	(WriteStringToLCD@s),f
  2576  0ED3  2ED4               	goto	l6585
  2577                           	
  2578  0ED4                     l2045:	
  2579                           	line	93
  2580                           	
  2581  0ED4                     l6585:	
  2582  0ED4  0876               	movf	(WriteStringToLCD@s),w
  2583  0ED5  0084               	movwf	fsr0
  2584  0ED6  120A  158A  2000   	fcall	stringdir
              120A  158A         
  2585  0EDB  3800               	iorlw	0
  2586  0EDC  1D03               	skipz
  2587  0EDD  2EDF               	goto	u3271
  2588  0EDE  2EE0               	goto	u3270
  2589  0EDF                     u3271:
  2590  0EDF  2EC3               	goto	l6581
  2591  0EE0                     u3270:
  2592  0EE0  2EE1               	goto	l2048
  2593                           	
  2594  0EE1                     l2047:	
  2595                           	line	95
  2596                           	
  2597  0EE1                     l2048:	
  2598  0EE1  0008               	return
  2599                           	opt stack 0
  2600                           GLOBAL	__end_of_WriteStringToLCD
  2601  0EE2                     	__end_of_WriteStringToLCD:
  2602 ;; =============== function _WriteStringToLCD ends ============
  2603                           
  2604                           	signat	_WriteStringToLCD,4216
  2605                           	global	_InitLCD
  2606                           psect	text579,local,class=CODE,delta=2
  2607                           global __ptext579
  2608  01A7                     __ptext579:
  2609                           
  2610 ;; *************** function _InitLCD *****************
  2611 ;; Defined at:
  2612 ;;		line 42 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;		None               void
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2626 ;;      Params:         0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0
  2628 ;;      Temps:          3       0       0       0       0
  2629 ;;      Totals:         3       0       0       0       0
  2630 ;;Total ram usage:        3 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    2
  2633 ;; This function calls:
  2634 ;;		_ToggleEpinOfLCD
  2635 ;;		_WriteCommandToLCD
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           psect	text579
  2641                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2642                           	line	42
  2643                           	global	__size_of_InitLCD
  2644  0090                     	__size_of_InitLCD	equ	__end_of_InitLCD-_InitLCD
  2645                           	
  2646  01A7                     _InitLCD:	
  2647                           	opt	stack 5
  2648                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
  2649                           	line	44
  2650                           	
  2651  01A7                     l6539:	
  2652                           ;LCD.c: 44: RB0 = 0;
  2653  01A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2654  01A8  1303               	bcf	status, 6	;RP1=0, select bank0
  2655  01A9  1006               	bcf	(48/8),(48)&7
  2656                           	line	45
  2657                           ;LCD.c: 45: RB1 = 0;
  2658  01AA  1086               	bcf	(49/8),(49)&7
  2659                           	line	46
  2660                           ;LCD.c: 46: RB4 = 0;
  2661  01AB  1206               	bcf	(52/8),(52)&7
  2662                           	line	47
  2663                           ;LCD.c: 47: RB5 = 0;
  2664  01AC  1286               	bcf	(53/8),(53)&7
  2665                           	line	48
  2666                           ;LCD.c: 48: RB6 = 0;
  2667  01AD  1306               	bcf	(54/8),(54)&7
  2668                           	line	49
  2669                           ;LCD.c: 49: RB7 = 0;
  2670  01AE  1386               	bcf	(55/8),(55)&7
  2671                           	line	50
  2672                           ;LCD.c: 50: TRISB0 = 0;
  2673  01AF  1683               	bsf	status, 5	;RP0=1, select bank1
  2674  01B0  1303               	bcf	status, 6	;RP1=0, select bank1
  2675  01B1  1006               	bcf	(1072/8)^080h,(1072)&7
  2676                           	line	51
  2677                           ;LCD.c: 51: TRISB1 = 0;
  2678  01B2  1086               	bcf	(1073/8)^080h,(1073)&7
  2679                           	line	52
  2680                           ;LCD.c: 52: TRISB4 = 0;
  2681  01B3  1206               	bcf	(1076/8)^080h,(1076)&7
  2682                           	line	53
  2683                           ;LCD.c: 53: TRISB5 = 0;
  2684  01B4  1286               	bcf	(1077/8)^080h,(1077)&7
  2685                           	line	54
  2686                           ;LCD.c: 54: TRISB6 = 0;
  2687  01B5  1306               	bcf	(1078/8)^080h,(1078)&7
  2688                           	line	55
  2689                           ;LCD.c: 55: TRISB7 = 0;
  2690  01B6  1386               	bcf	(1079/8)^080h,(1079)&7
  2691                           	line	58
  2692                           	
  2693  01B7                     l6541:	
  2694                           ;LCD.c: 58: _delay((unsigned long)((40)*(20000000/4000.0)));
  2695                           	opt asmopt_off
  2696  01B7  3002               movlw  2
  2697  01B8  00F7               movwf	((??_InitLCD+0)+0+2),f
  2698  01B9  3004               movlw	4
  2699  01BA  00F6               movwf	((??_InitLCD+0)+0+1),f
  2700  01BB  30BA               	movlw	186
  2701  01BC  00F5               movwf	((??_InitLCD+0)+0),f
  2702  01BD                     u3497:
  2703  01BD  0BF5               	decfsz	((??_InitLCD+0)+0),f
  2704  01BE  29BD               	goto	u3497
  2705  01BF  0BF6               	decfsz	((??_InitLCD+0)+0+1),f
  2706  01C0  29BD               	goto	u3497
  2707  01C1  0BF7               	decfsz	((??_InitLCD+0)+0+2),f
  2708  01C2  29BD               	goto	u3497
  2709  01C3  0064               	clrwdt
  2710                           opt asmopt_on
  2711                           
  2712                           	line	60
  2713                           	
  2714  01C4                     l6543:	
  2715                           ;LCD.c: 60: PORTB &= 0x0F;
  2716  01C4  300F               	movlw	(0Fh)
  2717  01C5  00F5               	movwf	(??_InitLCD+0)+0
  2718  01C6  0875               	movf	(??_InitLCD+0)+0,w
  2719  01C7  1283               	bcf	status, 5	;RP0=0, select bank0
  2720  01C8  1303               	bcf	status, 6	;RP1=0, select bank0
  2721  01C9  0586               	andwf	(6),f	;volatile
  2722                           	line	61
  2723                           	
  2724  01CA                     l6545:	
  2725                           ;LCD.c: 61: PORTB |= 0x30;
  2726  01CA  3030               	movlw	(030h)
  2727  01CB  00F5               	movwf	(??_InitLCD+0)+0
  2728  01CC  0875               	movf	(??_InitLCD+0)+0,w
  2729  01CD  0486               	iorwf	(6),f	;volatile
  2730                           	line	62
  2731                           	
  2732  01CE                     l6547:	
  2733                           ;LCD.c: 62: ToggleEpinOfLCD();
  2734  01CE  120A  158A  26A8   	fcall	_ToggleEpinOfLCD
              120A  118A         
  2735                           	line	64
  2736                           	
  2737  01D3                     l6549:	
  2738                           ;LCD.c: 64: _delay((unsigned long)((6)*(20000000/4000.0)));
  2739                           	opt asmopt_off
  2740  01D3  3027               movlw	39
  2741  01D4  00F6               movwf	((??_InitLCD+0)+0+1),f
  2742  01D5  30F5               	movlw	245
  2743  01D6  00F5               movwf	((??_InitLCD+0)+0),f
  2744  01D7                     u3507:
  2745  01D7  0BF5               	decfsz	((??_InitLCD+0)+0),f
  2746  01D8  29D7               	goto	u3507
  2747  01D9  0BF6               	decfsz	((??_InitLCD+0)+0+1),f
  2748  01DA  29D7               	goto	u3507
  2749                           opt asmopt_on
  2750                           
  2751                           	line	66
  2752                           	
  2753  01DB                     l6551:	
  2754                           ;LCD.c: 66: PORTB &= 0x0F;
  2755  01DB  300F               	movlw	(0Fh)
  2756  01DC  00F5               	movwf	(??_InitLCD+0)+0
  2757  01DD  0875               	movf	(??_InitLCD+0)+0,w
  2758  01DE  1283               	bcf	status, 5	;RP0=0, select bank0
  2759  01DF  1303               	bcf	status, 6	;RP1=0, select bank0
  2760  01E0  0586               	andwf	(6),f	;volatile
  2761                           	line	67
  2762                           	
  2763  01E1                     l6553:	
  2764                           ;LCD.c: 67: PORTB |= 0x30;
  2765  01E1  3030               	movlw	(030h)
  2766  01E2  00F5               	movwf	(??_InitLCD+0)+0
  2767  01E3  0875               	movf	(??_InitLCD+0)+0,w
  2768  01E4  0486               	iorwf	(6),f	;volatile
  2769                           	line	68
  2770                           ;LCD.c: 68: ToggleEpinOfLCD();
  2771  01E5  120A  158A  26A8   	fcall	_ToggleEpinOfLCD
              120A  118A         
  2772                           	line	70
  2773                           	
  2774  01EA                     l6555:	
  2775                           ;LCD.c: 70: _delay((unsigned long)((300)*(20000000/4000000.0)));
  2776                           	opt asmopt_off
  2777  01EA  30D6               movlw	214
  2778  01EB  00F5               movwf	(??_InitLCD+0)+0,f
  2779  01EC                     u3517:
  2780  01EC  29ED               	nop2
  2781  01ED  29EE               	nop2
  2782  01EE  0BF5               decfsz	(??_InitLCD+0)+0,f
  2783  01EF  29EC               	goto	u3517
  2784  01F0  0064               	clrwdt
  2785                           opt asmopt_on
  2786                           
  2787                           	line	72
  2788                           	
  2789  01F1                     l6557:	
  2790                           ;LCD.c: 72: PORTB &= 0x0F;
  2791  01F1  300F               	movlw	(0Fh)
  2792  01F2  00F5               	movwf	(??_InitLCD+0)+0
  2793  01F3  0875               	movf	(??_InitLCD+0)+0,w
  2794  01F4  1283               	bcf	status, 5	;RP0=0, select bank0
  2795  01F5  1303               	bcf	status, 6	;RP1=0, select bank0
  2796  01F6  0586               	andwf	(6),f	;volatile
  2797                           	line	73
  2798                           	
  2799  01F7                     l6559:	
  2800                           ;LCD.c: 73: PORTB |= 0x30;
  2801  01F7  3030               	movlw	(030h)
  2802  01F8  00F5               	movwf	(??_InitLCD+0)+0
  2803  01F9  0875               	movf	(??_InitLCD+0)+0,w
  2804  01FA  0486               	iorwf	(6),f	;volatile
  2805                           	line	74
  2806                           	
  2807  01FB                     l6561:	
  2808                           ;LCD.c: 74: ToggleEpinOfLCD();
  2809  01FB  120A  158A  26A8   	fcall	_ToggleEpinOfLCD
              120A  118A         
  2810                           	line	76
  2811                           ;LCD.c: 76: _delay((unsigned long)((2)*(20000000/4000.0)));
  2812                           	opt asmopt_off
  2813  0200  300D               movlw	13
  2814  0201  00F6               movwf	((??_InitLCD+0)+0+1),f
  2815  0202  30FB               	movlw	251
  2816  0203  00F5               movwf	((??_InitLCD+0)+0),f
  2817  0204                     u3527:
  2818  0204  0BF5               	decfsz	((??_InitLCD+0)+0),f
  2819  0205  2A04               	goto	u3527
  2820  0206  0BF6               	decfsz	((??_InitLCD+0)+0+1),f
  2821  0207  2A04               	goto	u3527
  2822  0208  2A09               	nop2
  2823                           opt asmopt_on
  2824                           
  2825                           	line	78
  2826                           	
  2827  0209                     l6563:	
  2828                           ;LCD.c: 78: PORTB &= 0x0F;
  2829  0209  300F               	movlw	(0Fh)
  2830  020A  00F5               	movwf	(??_InitLCD+0)+0
  2831  020B  0875               	movf	(??_InitLCD+0)+0,w
  2832  020C  1283               	bcf	status, 5	;RP0=0, select bank0
  2833  020D  1303               	bcf	status, 6	;RP1=0, select bank0
  2834  020E  0586               	andwf	(6),f	;volatile
  2835                           	line	79
  2836                           	
  2837  020F                     l6565:	
  2838                           ;LCD.c: 79: PORTB |= 0x20;
  2839  020F  1686               	bsf	(6)+(5/8),(5)&7	;volatile
  2840                           	line	80
  2841                           	
  2842  0210                     l6567:	
  2843                           ;LCD.c: 80: ToggleEpinOfLCD();
  2844  0210  120A  158A  26A8   	fcall	_ToggleEpinOfLCD
              120A  118A         
  2845                           	line	82
  2846                           	
  2847  0215                     l6569:	
  2848                           ;LCD.c: 82: _delay((unsigned long)((2)*(20000000/4000.0)));
  2849                           	opt asmopt_off
  2850  0215  300D               movlw	13
  2851  0216  00F6               movwf	((??_InitLCD+0)+0+1),f
  2852  0217  30FB               	movlw	251
  2853  0218  00F5               movwf	((??_InitLCD+0)+0),f
  2854  0219                     u3537:
  2855  0219  0BF5               	decfsz	((??_InitLCD+0)+0),f
  2856  021A  2A19               	goto	u3537
  2857  021B  0BF6               	decfsz	((??_InitLCD+0)+0+1),f
  2858  021C  2A19               	goto	u3537
  2859  021D  2A1E               	nop2
  2860                           opt asmopt_on
  2861                           
  2862                           	line	84
  2863                           	
  2864  021E                     l6571:	
  2865                           ;LCD.c: 84: WriteCommandToLCD(0x28);
  2866  021E  3028               	movlw	(028h)
  2867  021F  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  2868                           	line	85
  2869                           	
  2870  0224                     l6573:	
  2871                           ;LCD.c: 85: WriteCommandToLCD(0x0c);
  2872  0224  300C               	movlw	(0Ch)
  2873  0225  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  2874                           	line	86
  2875                           	
  2876  022A                     l6575:	
  2877                           ;LCD.c: 86: WriteCommandToLCD(0x01);
  2878  022A  3001               	movlw	(01h)
  2879  022B  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  2880                           	line	87
  2881                           	
  2882  0230                     l6577:	
  2883                           ;LCD.c: 87: WriteCommandToLCD(0x06);
  2884  0230  3006               	movlw	(06h)
  2885  0231  120A  158A  26E2   	fcall	_WriteCommandToLCD
              120A  118A         
  2886                           	line	88
  2887                           	
  2888  0236                     l2042:	
  2889  0236  0008               	return
  2890                           	opt stack 0
  2891                           GLOBAL	__end_of_InitLCD
  2892  0237                     	__end_of_InitLCD:
  2893 ;; =============== function _InitLCD ends ============
  2894                           
  2895                           	signat	_InitLCD,88
  2896                           	global	_WriteDataToLCD
  2897                           psect	text580,local,class=CODE,delta=2
  2898                           global __ptext580
  2899  0F0E                     __ptext580:
  2900                           
  2901 ;; *************** function _WriteDataToLCD *****************
  2902 ;; Defined at:
  2903 ;;		line 28 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  LCDChar         1    wreg     unsigned char 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  LCDChar         1    4[COMMON] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;		None               void
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, pclath, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         0       0       0       0       0
  2918 ;;      Locals:         1       0       0       0       0
  2919 ;;      Temps:          2       0       0       0       0
  2920 ;;      Totals:         3       0       0       0       0
  2921 ;;Total ram usage:        3 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    1
  2924 ;; This function calls:
  2925 ;;		_ToggleEpinOfLCD
  2926 ;; This function is called by:
  2927 ;;		_WriteStringToLCD
  2928 ;;		_DisplayTimeToLCD
  2929 ;;		_DisplayDateOnLCD
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           psect	text580
  2933                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  2934                           	line	28
  2935                           	global	__size_of_WriteDataToLCD
  2936  002C                     	__size_of_WriteDataToLCD	equ	__end_of_WriteDataToLCD-_WriteDataToLCD
  2937                           	
  2938  0F0E                     _WriteDataToLCD:	
  2939                           	opt	stack 4
  2940                           ; Regs used in _WriteDataToLCD: [wreg+status,2+status,0+pclath+cstack]
  2941                           ;WriteDataToLCD@LCDChar stored from wreg
  2942  0F0E  00F4               	movwf	(WriteDataToLCD@LCDChar)
  2943                           	line	29
  2944                           	
  2945  0F0F                     l6527:	
  2946                           ;LCD.c: 29: RB1 = 1;
  2947  0F0F  1283               	bcf	status, 5	;RP0=0, select bank0
  2948  0F10  1303               	bcf	status, 6	;RP1=0, select bank0
  2949  0F11  1486               	bsf	(49/8),(49)&7
  2950                           	line	31
  2951                           	
  2952  0F12                     l6529:	
  2953                           ;LCD.c: 31: PORTB &= 0x0F;
  2954  0F12  300F               	movlw	(0Fh)
  2955  0F13  00F2               	movwf	(??_WriteDataToLCD+0)+0
  2956  0F14  0872               	movf	(??_WriteDataToLCD+0)+0,w
  2957  0F15  0586               	andwf	(6),f	;volatile
  2958                           	line	32
  2959                           ;LCD.c: 32: PORTB |= (LCDChar&0xF0);
  2960  0F16  0874               	movf	(WriteDataToLCD@LCDChar),w
  2961  0F17  39F0               	andlw	0F0h
  2962  0F18  00F2               	movwf	(??_WriteDataToLCD+0)+0
  2963  0F19  0872               	movf	(??_WriteDataToLCD+0)+0,w
  2964  0F1A  0486               	iorwf	(6),f	;volatile
  2965                           	line	33
  2966                           	
  2967  0F1B                     l6531:	
  2968                           ;LCD.c: 33: ToggleEpinOfLCD();
  2969  0F1B  120A  158A  26A8   	fcall	_ToggleEpinOfLCD
              120A  158A         
  2970                           	line	35
  2971                           	
  2972  0F20                     l6533:	
  2973                           ;LCD.c: 35: PORTB &= 0x0F;
  2974  0F20  300F               	movlw	(0Fh)
  2975  0F21  00F2               	movwf	(??_WriteDataToLCD+0)+0
  2976  0F22  0872               	movf	(??_WriteDataToLCD+0)+0,w
  2977  0F23  1283               	bcf	status, 5	;RP0=0, select bank0
  2978  0F24  1303               	bcf	status, 6	;RP1=0, select bank0
  2979  0F25  0586               	andwf	(6),f	;volatile
  2980                           	line	36
  2981                           	
  2982  0F26                     l6535:	
  2983                           ;LCD.c: 36: PORTB |= ((LCDChar<<4)&0xF0);
  2984  0F26  0874               	movf	(WriteDataToLCD@LCDChar),w
  2985  0F27  00F2               	movwf	(??_WriteDataToLCD+0)+0
  2986  0F28  3003               	movlw	(04h)-1
  2987  0F29                     u3265:
  2988  0F29  1003               	clrc
  2989  0F2A  0DF2               	rlf	(??_WriteDataToLCD+0)+0,f
  2990  0F2B  3EFF               	addlw	-1
  2991  0F2C  1D03               	skipz
  2992  0F2D  2F29               	goto	u3265
  2993  0F2E  1003               	clrc
  2994  0F2F  0D72               	rlf	(??_WriteDataToLCD+0)+0,w
  2995  0F30  39F0               	andlw	0F0h
  2996  0F31  00F3               	movwf	(??_WriteDataToLCD+1)+0
  2997  0F32  0873               	movf	(??_WriteDataToLCD+1)+0,w
  2998  0F33  0486               	iorwf	(6),f	;volatile
  2999                           	line	37
  3000                           	
  3001  0F34                     l6537:	
  3002                           ;LCD.c: 37: ToggleEpinOfLCD();
  3003  0F34  120A  158A  26A8   	fcall	_ToggleEpinOfLCD
              120A  158A         
  3004                           	line	38
  3005                           	
  3006  0F39                     l2039:	
  3007  0F39  0008               	return
  3008                           	opt stack 0
  3009                           GLOBAL	__end_of_WriteDataToLCD
  3010  0F3A                     	__end_of_WriteDataToLCD:
  3011 ;; =============== function _WriteDataToLCD ends ============
  3012                           
  3013                           	signat	_WriteDataToLCD,4216
  3014                           	global	_WriteCommandToLCD
  3015                           psect	text581,local,class=CODE,delta=2
  3016                           global __ptext581
  3017  0EE2                     __ptext581:
  3018                           
  3019 ;; *************** function _WriteCommandToLCD *****************
  3020 ;; Defined at:
  3021 ;;		line 14 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  Command         1    wreg     unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  Command         1    4[COMMON] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;		None               void
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       0       0       0       0
  3036 ;;      Locals:         1       0       0       0       0
  3037 ;;      Temps:          2       0       0       0       0
  3038 ;;      Totals:         3       0       0       0       0
  3039 ;;Total ram usage:        3 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    1
  3042 ;; This function calls:
  3043 ;;		_ToggleEpinOfLCD
  3044 ;; This function is called by:
  3045 ;;		_InitLCD
  3046 ;;		_ClearLCDScreen
  3047 ;;		_DisplayDateOnLCD
  3048 ;;		_SetTime
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           psect	text581
  3052                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  3053                           	line	14
  3054                           	global	__size_of_WriteCommandToLCD
  3055  002C                     	__size_of_WriteCommandToLCD	equ	__end_of_WriteCommandToLCD-_WriteCommandToLCD
  3056                           	
  3057  0EE2                     _WriteCommandToLCD:	
  3058                           	opt	stack 5
  3059                           ; Regs used in _WriteCommandToLCD: [wreg+status,2+status,0+pclath+cstack]
  3060                           ;WriteCommandToLCD@Command stored from wreg
  3061  0EE2  00F4               	movwf	(WriteCommandToLCD@Command)
  3062                           	line	15
  3063                           	
  3064  0EE3                     l6515:	
  3065                           ;LCD.c: 15: RB1 = 0;
  3066  0EE3  1283               	bcf	status, 5	;RP0=0, select bank0
  3067  0EE4  1303               	bcf	status, 6	;RP1=0, select bank0
  3068  0EE5  1086               	bcf	(49/8),(49)&7
  3069                           	line	17
  3070                           	
  3071  0EE6                     l6517:	
  3072                           ;LCD.c: 17: PORTB &= 0x0F;
  3073  0EE6  300F               	movlw	(0Fh)
  3074  0EE7  00F2               	movwf	(??_WriteCommandToLCD+0)+0
  3075  0EE8  0872               	movf	(??_WriteCommandToLCD+0)+0,w
  3076  0EE9  0586               	andwf	(6),f	;volatile
  3077                           	line	18
  3078                           ;LCD.c: 18: PORTB |= (Command&0xF0);
  3079  0EEA  0874               	movf	(WriteCommandToLCD@Command),w
  3080  0EEB  39F0               	andlw	0F0h
  3081  0EEC  00F2               	movwf	(??_WriteCommandToLCD+0)+0
  3082  0EED  0872               	movf	(??_WriteCommandToLCD+0)+0,w
  3083  0EEE  0486               	iorwf	(6),f	;volatile
  3084                           	line	19
  3085                           	
  3086  0EEF                     l6519:	
  3087                           ;LCD.c: 19: ToggleEpinOfLCD();
  3088  0EEF  120A  158A  26A8   	fcall	_ToggleEpinOfLCD
              120A  158A         
  3089                           	line	21
  3090                           	
  3091  0EF4                     l6521:	
  3092                           ;LCD.c: 21: PORTB &= 0x0F;
  3093  0EF4  300F               	movlw	(0Fh)
  3094  0EF5  00F2               	movwf	(??_WriteCommandToLCD+0)+0
  3095  0EF6  0872               	movf	(??_WriteCommandToLCD+0)+0,w
  3096  0EF7  1283               	bcf	status, 5	;RP0=0, select bank0
  3097  0EF8  1303               	bcf	status, 6	;RP1=0, select bank0
  3098  0EF9  0586               	andwf	(6),f	;volatile
  3099                           	line	22
  3100                           	
  3101  0EFA                     l6523:	
  3102                           ;LCD.c: 22: PORTB |= ((Command<<4)&0xF0);
  3103  0EFA  0874               	movf	(WriteCommandToLCD@Command),w
  3104  0EFB  00F2               	movwf	(??_WriteCommandToLCD+0)+0
  3105  0EFC  3003               	movlw	(04h)-1
  3106  0EFD                     u3255:
  3107  0EFD  1003               	clrc
  3108  0EFE  0DF2               	rlf	(??_WriteCommandToLCD+0)+0,f
  3109  0EFF  3EFF               	addlw	-1
  3110  0F00  1D03               	skipz
  3111  0F01  2EFD               	goto	u3255
  3112  0F02  1003               	clrc
  3113  0F03  0D72               	rlf	(??_WriteCommandToLCD+0)+0,w
  3114  0F04  39F0               	andlw	0F0h
  3115  0F05  00F3               	movwf	(??_WriteCommandToLCD+1)+0
  3116  0F06  0873               	movf	(??_WriteCommandToLCD+1)+0,w
  3117  0F07  0486               	iorwf	(6),f	;volatile
  3118                           	line	23
  3119                           	
  3120  0F08                     l6525:	
  3121                           ;LCD.c: 23: ToggleEpinOfLCD();
  3122  0F08  120A  158A  26A8   	fcall	_ToggleEpinOfLCD
              120A  158A         
  3123                           	line	24
  3124                           	
  3125  0F0D                     l2036:	
  3126  0F0D  0008               	return
  3127                           	opt stack 0
  3128                           GLOBAL	__end_of_WriteCommandToLCD
  3129  0F0E                     	__end_of_WriteCommandToLCD:
  3130 ;; =============== function _WriteCommandToLCD ends ============
  3131                           
  3132                           	signat	_WriteCommandToLCD,4216
  3133                           	global	_Get_DS1307_RTC_Date
  3134                           psect	text582,local,class=CODE,delta=2
  3135                           global __ptext582
  3136  00C3                     __ptext582:
  3137                           
  3138 ;; *************** function _Get_DS1307_RTC_Date *****************
  3139 ;; Defined at:
  3140 ;;		line 210 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      PTR unsigned char 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0
  3156 ;;      Temps:          4       0       0       0       0
  3157 ;;      Totals:         4       0       0       0       0
  3158 ;;Total ram usage:        4 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    2
  3161 ;; This function calls:
  3162 ;;		_Read_Bytes_From_DS1307_RTC
  3163 ;;		___bmul
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           psect	text582
  3169                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  3170                           	line	210
  3171                           	global	__size_of_Get_DS1307_RTC_Date
  3172  0070                     	__size_of_Get_DS1307_RTC_Date	equ	__end_of_Get_DS1307_RTC_Date-_Get_DS1307_RTC_Date
  3173                           	
  3174  00C3                     _Get_DS1307_RTC_Date:	
  3175                           	opt	stack 5
  3176                           ; Regs used in _Get_DS1307_RTC_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3177                           	line	212
  3178                           	
  3179  00C3                     l6497:	
  3180                           ;DS1307.c: 212: Read_Bytes_From_DS1307_RTC(0x03, pRTCArray, 4);
  3181  00C3  3035               	movlw	(_pRTCArray)&0ffh
  3182  00C4  00F9               	movwf	(??_Get_DS1307_RTC_Date+0)+0
  3183  00C5  0879               	movf	(??_Get_DS1307_RTC_Date+0)+0,w
  3184  00C6  00F1               	movwf	(?_Read_Bytes_From_DS1307_RTC)
  3185  00C7  3004               	movlw	low(04h)
  3186  00C8  00F2               	movwf	0+(?_Read_Bytes_From_DS1307_RTC)+01h
  3187  00C9  3000               	movlw	high(04h)
  3188  00CA  00F3               	movwf	(0+(?_Read_Bytes_From_DS1307_RTC)+01h)+1
  3189  00CB  3003               	movlw	(03h)
  3190  00CC  120A  118A  205A   	fcall	_Read_Bytes_From_DS1307_RTC
              120A  118A         
  3191                           	line	215
  3192                           	
  3193  00D1                     l6499:	
  3194                           ;DS1307.c: 215: Temp = pRTCArray[1];
  3195  00D1  1283               	bcf	status, 5	;RP0=0, select bank0
  3196  00D2  1303               	bcf	status, 6	;RP1=0, select bank0
  3197  00D3  0836               	movf	0+(_pRTCArray)+01h,w
  3198  00D4  00F9               	movwf	(??_Get_DS1307_RTC_Date+0)+0
  3199  00D5  0879               	movf	(??_Get_DS1307_RTC_Date+0)+0,w
  3200  00D6  00FD               	movwf	(_Temp)
  3201                           	line	216
  3202                           	
  3203  00D7                     l6501:	
  3204                           ;DS1307.c: 216: pRTCArray[1] = (Temp>>4)*10 + (Temp&0x0F);
  3205  00D7  300A               	movlw	(0Ah)
  3206  00D8  00F9               	movwf	(??_Get_DS1307_RTC_Date+0)+0
  3207  00D9  0879               	movf	(??_Get_DS1307_RTC_Date+0)+0,w
  3208  00DA  00F0               	movwf	(?___bmul)
  3209  00DB  087D               	movf	(_Temp),w
  3210  00DC  00FA               	movwf	(??_Get_DS1307_RTC_Date+1)+0
  3211  00DD  3004               	movlw	04h
  3212  00DE                     u3225:
  3213  00DE  1003               	clrc
  3214  00DF  0CFA               	rrf	(??_Get_DS1307_RTC_Date+1)+0,f
  3215  00E0  3EFF               	addlw	-1
  3216  00E1  1D03               	skipz
  3217  00E2  28DE               	goto	u3225
  3218  00E3  087A               	movf	0+(??_Get_DS1307_RTC_Date+1)+0,w
  3219  00E4  120A  158A  2690   	fcall	___bmul
              120A  118A         
  3220  00E9  00FB               	movwf	(??_Get_DS1307_RTC_Date+2)+0
  3221  00EA  087D               	movf	(_Temp),w
  3222  00EB  390F               	andlw	0Fh
  3223  00EC  077B               	addwf	0+(??_Get_DS1307_RTC_Date+2)+0,w
  3224  00ED  00FC               	movwf	(??_Get_DS1307_RTC_Date+3)+0
  3225  00EE  087C               	movf	(??_Get_DS1307_RTC_Date+3)+0,w
  3226  00EF  1283               	bcf	status, 5	;RP0=0, select bank0
  3227  00F0  1303               	bcf	status, 6	;RP1=0, select bank0
  3228  00F1  00B6               	movwf	0+(_pRTCArray)+01h
  3229                           	line	219
  3230                           	
  3231  00F2                     l6503:	
  3232                           ;DS1307.c: 219: Temp = pRTCArray[2];
  3233  00F2  0837               	movf	0+(_pRTCArray)+02h,w
  3234  00F3  00F9               	movwf	(??_Get_DS1307_RTC_Date+0)+0
  3235  00F4  0879               	movf	(??_Get_DS1307_RTC_Date+0)+0,w
  3236  00F5  00FD               	movwf	(_Temp)
  3237                           	line	220
  3238                           	
  3239  00F6                     l6505:	
  3240                           ;DS1307.c: 220: pRTCArray[2] = (Temp>>4)*10 + (Temp&0x0F);
  3241  00F6  300A               	movlw	(0Ah)
  3242  00F7  00F9               	movwf	(??_Get_DS1307_RTC_Date+0)+0
  3243  00F8  0879               	movf	(??_Get_DS1307_RTC_Date+0)+0,w
  3244  00F9  00F0               	movwf	(?___bmul)
  3245  00FA  087D               	movf	(_Temp),w
  3246  00FB  00FA               	movwf	(??_Get_DS1307_RTC_Date+1)+0
  3247  00FC  3004               	movlw	04h
  3248  00FD                     u3235:
  3249  00FD  1003               	clrc
  3250  00FE  0CFA               	rrf	(??_Get_DS1307_RTC_Date+1)+0,f
  3251  00FF  3EFF               	addlw	-1
  3252  0100  1D03               	skipz
  3253  0101  28FD               	goto	u3235
  3254  0102  087A               	movf	0+(??_Get_DS1307_RTC_Date+1)+0,w
  3255  0103  120A  158A  2690   	fcall	___bmul
              120A  118A         
  3256  0108  00FB               	movwf	(??_Get_DS1307_RTC_Date+2)+0
  3257  0109  087D               	movf	(_Temp),w
  3258  010A  390F               	andlw	0Fh
  3259  010B  077B               	addwf	0+(??_Get_DS1307_RTC_Date+2)+0,w
  3260  010C  00FC               	movwf	(??_Get_DS1307_RTC_Date+3)+0
  3261  010D  087C               	movf	(??_Get_DS1307_RTC_Date+3)+0,w
  3262  010E  1283               	bcf	status, 5	;RP0=0, select bank0
  3263  010F  1303               	bcf	status, 6	;RP1=0, select bank0
  3264  0110  00B7               	movwf	0+(_pRTCArray)+02h
  3265                           	line	223
  3266                           	
  3267  0111                     l6507:	
  3268                           ;DS1307.c: 223: Temp = pRTCArray[3];
  3269  0111  0838               	movf	0+(_pRTCArray)+03h,w
  3270  0112  00F9               	movwf	(??_Get_DS1307_RTC_Date+0)+0
  3271  0113  0879               	movf	(??_Get_DS1307_RTC_Date+0)+0,w
  3272  0114  00FD               	movwf	(_Temp)
  3273                           	line	224
  3274                           	
  3275  0115                     l6509:	
  3276                           ;DS1307.c: 224: pRTCArray[3] = (Temp>>4)*10 + (Temp&0x0F);
  3277  0115  300A               	movlw	(0Ah)
  3278  0116  00F9               	movwf	(??_Get_DS1307_RTC_Date+0)+0
  3279  0117  0879               	movf	(??_Get_DS1307_RTC_Date+0)+0,w
  3280  0118  00F0               	movwf	(?___bmul)
  3281  0119  087D               	movf	(_Temp),w
  3282  011A  00FA               	movwf	(??_Get_DS1307_RTC_Date+1)+0
  3283  011B  3004               	movlw	04h
  3284  011C                     u3245:
  3285  011C  1003               	clrc
  3286  011D  0CFA               	rrf	(??_Get_DS1307_RTC_Date+1)+0,f
  3287  011E  3EFF               	addlw	-1
  3288  011F  1D03               	skipz
  3289  0120  291C               	goto	u3245
  3290  0121  087A               	movf	0+(??_Get_DS1307_RTC_Date+1)+0,w
  3291  0122  120A  158A  2690   	fcall	___bmul
              120A  118A         
  3292  0127  00FB               	movwf	(??_Get_DS1307_RTC_Date+2)+0
  3293  0128  087D               	movf	(_Temp),w
  3294  0129  390F               	andlw	0Fh
  3295  012A  077B               	addwf	0+(??_Get_DS1307_RTC_Date+2)+0,w
  3296  012B  00FC               	movwf	(??_Get_DS1307_RTC_Date+3)+0
  3297  012C  087C               	movf	(??_Get_DS1307_RTC_Date+3)+0,w
  3298  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  3299  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  3300  012F  00B8               	movwf	0+(_pRTCArray)+03h
  3301                           	line	226
  3302                           	
  3303  0130                     l6511:	
  3304                           ;DS1307.c: 226: return pRTCArray;
  3305  0130  3035               	movlw	(_pRTCArray)&0ffh
  3306  0131  2932               	goto	l707
  3307                           	
  3308  0132                     l6513:	
  3309                           	line	227
  3310                           	
  3311  0132                     l707:	
  3312  0132  0008               	return
  3313                           	opt stack 0
  3314                           GLOBAL	__end_of_Get_DS1307_RTC_Date
  3315  0133                     	__end_of_Get_DS1307_RTC_Date:
  3316 ;; =============== function _Get_DS1307_RTC_Date ends ============
  3317                           
  3318                           	signat	_Get_DS1307_RTC_Date,89
  3319                           	global	_Set_DS1307_RTC_Date
  3320                           psect	text583,local,class=CODE,delta=2
  3321                           global __ptext583
  3322  047E                     __ptext583:
  3323                           
  3324 ;; *************** function _Set_DS1307_RTC_Date *****************
  3325 ;; Defined at:
  3326 ;;		line 189 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  Date            1    wreg     unsigned char 
  3329 ;;  Month           1    9[COMMON] unsigned char 
  3330 ;;  Year            1   10[COMMON] unsigned char 
  3331 ;;  Day             1   11[COMMON] unsigned char 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  Date            1   12[COMMON] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;		None               void
  3336 ;; Registers used:
  3337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3343 ;;      Params:         3       0       0       0       0
  3344 ;;      Locals:         1       0       0       0       0
  3345 ;;      Temps:          0       8       0       0       0
  3346 ;;      Totals:         4       8       0       0       0
  3347 ;;Total ram usage:       12 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    2
  3350 ;; This function calls:
  3351 ;;		___awmod
  3352 ;;		___awdiv
  3353 ;;		_Write_Bytes_To_DS1307_RTC
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           psect	text583
  3359                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  3360                           	line	189
  3361                           	global	__size_of_Set_DS1307_RTC_Date
  3362  00EA                     	__size_of_Set_DS1307_RTC_Date	equ	__end_of_Set_DS1307_RTC_Date-_Set_DS1307_RTC_Date
  3363                           	
  3364  047E                     _Set_DS1307_RTC_Date:	
  3365                           	opt	stack 5
  3366                           ; Regs used in _Set_DS1307_RTC_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3367                           ;Set_DS1307_RTC_Date@Date stored from wreg
  3368                           	line	191
  3369  047E  00FC               	movwf	(Set_DS1307_RTC_Date@Date)
  3370                           	
  3371  047F                     l6493:	
  3372                           ;DS1307.c: 191: pRTCArray[0] = (((unsigned char)(Day/10))<<4)|((unsigned char)(Day%10));
  3373  047F  300A               	movlw	low(0Ah)
  3374  0480  00F0               	movwf	(?___awmod)
  3375  0481  3000               	movlw	high(0Ah)
  3376  0482  00F1               	movwf	((?___awmod))+1
  3377  0483  087B               	movf	(Set_DS1307_RTC_Date@Day),w
  3378  0484  1283               	bcf	status, 5	;RP0=0, select bank0
  3379  0485  1303               	bcf	status, 6	;RP1=0, select bank0
  3380  0486  00A0               	movwf	(??_Set_DS1307_RTC_Date+0)+0
  3381  0487  01A1               	clrf	(??_Set_DS1307_RTC_Date+0)+0+1
  3382  0488  0820               	movf	0+(??_Set_DS1307_RTC_Date+0)+0,w
  3383  0489  00F2               	movwf	0+(?___awmod)+02h
  3384  048A  0821               	movf	1+(??_Set_DS1307_RTC_Date+0)+0,w
  3385  048B  00F3               	movwf	1+(?___awmod)+02h
  3386  048C  120A  158A  279A   	fcall	___awmod
              120A  118A         
  3387  0491  0870               	movf	(0+?___awmod),w
  3388  0492  1283               	bcf	status, 5	;RP0=0, select bank0
  3389  0493  1303               	bcf	status, 6	;RP1=0, select bank0
  3390  0494  00A2               	movwf	(??_Set_DS1307_RTC_Date+2)+0
  3391  0495  0871               	movf	(1+?___awmod),w
  3392  0496  00A3               	movwf	((??_Set_DS1307_RTC_Date+2)+0+1)
  3393  0497  300A               	movlw	low(0Ah)
  3394  0498  00F0               	movwf	(?___awdiv)
  3395  0499  3000               	movlw	high(0Ah)
  3396  049A  00F1               	movwf	((?___awdiv))+1
  3397  049B  087B               	movf	(Set_DS1307_RTC_Date@Day),w
  3398  049C  00A4               	movwf	(??_Set_DS1307_RTC_Date+4)+0
  3399  049D  01A5               	clrf	(??_Set_DS1307_RTC_Date+4)+0+1
  3400  049E  0824               	movf	0+(??_Set_DS1307_RTC_Date+4)+0,w
  3401  049F  00F2               	movwf	0+(?___awdiv)+02h
  3402  04A0  0825               	movf	1+(??_Set_DS1307_RTC_Date+4)+0,w
  3403  04A1  00F3               	movwf	1+(?___awdiv)+02h
  3404  04A2  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  3405  04A7  0870               	movf	(0+(?___awdiv)),w
  3406  04A8  1283               	bcf	status, 5	;RP0=0, select bank0
  3407  04A9  1303               	bcf	status, 6	;RP1=0, select bank0
  3408  04AA  00A6               	movwf	(??_Set_DS1307_RTC_Date+6)+0
  3409  04AB  3003               	movlw	(04h)-1
  3410  04AC                     u3185:
  3411  04AC  1003               	clrc
  3412  04AD  0DA6               	rlf	(??_Set_DS1307_RTC_Date+6)+0,f
  3413  04AE  3EFF               	addlw	-1
  3414  04AF  1D03               	skipz
  3415  04B0  2CAC               	goto	u3185
  3416  04B1  1003               	clrc
  3417  04B2  0D26               	rlf	(??_Set_DS1307_RTC_Date+6)+0,w
  3418  04B3  0422               	iorwf	0+(??_Set_DS1307_RTC_Date+2)+0,w
  3419  04B4  00A7               	movwf	(??_Set_DS1307_RTC_Date+7)+0
  3420  04B5  0827               	movf	(??_Set_DS1307_RTC_Date+7)+0,w
  3421  04B6  00B5               	movwf	(_pRTCArray)
  3422                           	line	192
  3423                           ;DS1307.c: 192: pRTCArray[1] = (((unsigned char)(Date/10))<<4)|((unsigned char)(Date%10)
                                 );
  3424  04B7  300A               	movlw	low(0Ah)
  3425  04B8  00F0               	movwf	(?___awmod)
  3426  04B9  3000               	movlw	high(0Ah)
  3427  04BA  00F1               	movwf	((?___awmod))+1
  3428  04BB  087C               	movf	(Set_DS1307_RTC_Date@Date),w
  3429  04BC  00A0               	movwf	(??_Set_DS1307_RTC_Date+0)+0
  3430  04BD  01A1               	clrf	(??_Set_DS1307_RTC_Date+0)+0+1
  3431  04BE  0820               	movf	0+(??_Set_DS1307_RTC_Date+0)+0,w
  3432  04BF  00F2               	movwf	0+(?___awmod)+02h
  3433  04C0  0821               	movf	1+(??_Set_DS1307_RTC_Date+0)+0,w
  3434  04C1  00F3               	movwf	1+(?___awmod)+02h
  3435  04C2  120A  158A  279A   	fcall	___awmod
              120A  118A         
  3436  04C7  0870               	movf	(0+?___awmod),w
  3437  04C8  1283               	bcf	status, 5	;RP0=0, select bank0
  3438  04C9  1303               	bcf	status, 6	;RP1=0, select bank0
  3439  04CA  00A2               	movwf	(??_Set_DS1307_RTC_Date+2)+0
  3440  04CB  0871               	movf	(1+?___awmod),w
  3441  04CC  00A3               	movwf	((??_Set_DS1307_RTC_Date+2)+0+1)
  3442  04CD  300A               	movlw	low(0Ah)
  3443  04CE  00F0               	movwf	(?___awdiv)
  3444  04CF  3000               	movlw	high(0Ah)
  3445  04D0  00F1               	movwf	((?___awdiv))+1
  3446  04D1  087C               	movf	(Set_DS1307_RTC_Date@Date),w
  3447  04D2  00A4               	movwf	(??_Set_DS1307_RTC_Date+4)+0
  3448  04D3  01A5               	clrf	(??_Set_DS1307_RTC_Date+4)+0+1
  3449  04D4  0824               	movf	0+(??_Set_DS1307_RTC_Date+4)+0,w
  3450  04D5  00F2               	movwf	0+(?___awdiv)+02h
  3451  04D6  0825               	movf	1+(??_Set_DS1307_RTC_Date+4)+0,w
  3452  04D7  00F3               	movwf	1+(?___awdiv)+02h
  3453  04D8  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  3454  04DD  0870               	movf	(0+(?___awdiv)),w
  3455  04DE  1283               	bcf	status, 5	;RP0=0, select bank0
  3456  04DF  1303               	bcf	status, 6	;RP1=0, select bank0
  3457  04E0  00A6               	movwf	(??_Set_DS1307_RTC_Date+6)+0
  3458  04E1  3003               	movlw	(04h)-1
  3459  04E2                     u3195:
  3460  04E2  1003               	clrc
  3461  04E3  0DA6               	rlf	(??_Set_DS1307_RTC_Date+6)+0,f
  3462  04E4  3EFF               	addlw	-1
  3463  04E5  1D03               	skipz
  3464  04E6  2CE2               	goto	u3195
  3465  04E7  1003               	clrc
  3466  04E8  0D26               	rlf	(??_Set_DS1307_RTC_Date+6)+0,w
  3467  04E9  0422               	iorwf	0+(??_Set_DS1307_RTC_Date+2)+0,w
  3468  04EA  00A7               	movwf	(??_Set_DS1307_RTC_Date+7)+0
  3469  04EB  0827               	movf	(??_Set_DS1307_RTC_Date+7)+0,w
  3470  04EC  00B6               	movwf	0+(_pRTCArray)+01h
  3471                           	line	193
  3472                           ;DS1307.c: 193: pRTCArray[2] = (((unsigned char)(Month/10))<<4)|((unsigned char)(Month%1
                                 0));
  3473  04ED  300A               	movlw	low(0Ah)
  3474  04EE  00F0               	movwf	(?___awmod)
  3475  04EF  3000               	movlw	high(0Ah)
  3476  04F0  00F1               	movwf	((?___awmod))+1
  3477  04F1  0879               	movf	(Set_DS1307_RTC_Date@Month),w
  3478  04F2  00A0               	movwf	(??_Set_DS1307_RTC_Date+0)+0
  3479  04F3  01A1               	clrf	(??_Set_DS1307_RTC_Date+0)+0+1
  3480  04F4  0820               	movf	0+(??_Set_DS1307_RTC_Date+0)+0,w
  3481  04F5  00F2               	movwf	0+(?___awmod)+02h
  3482  04F6  0821               	movf	1+(??_Set_DS1307_RTC_Date+0)+0,w
  3483  04F7  00F3               	movwf	1+(?___awmod)+02h
  3484  04F8  120A  158A  279A   	fcall	___awmod
              120A  118A         
  3485  04FD  0870               	movf	(0+?___awmod),w
  3486  04FE  1283               	bcf	status, 5	;RP0=0, select bank0
  3487  04FF  1303               	bcf	status, 6	;RP1=0, select bank0
  3488  0500  00A2               	movwf	(??_Set_DS1307_RTC_Date+2)+0
  3489  0501  0871               	movf	(1+?___awmod),w
  3490  0502  00A3               	movwf	((??_Set_DS1307_RTC_Date+2)+0+1)
  3491  0503  300A               	movlw	low(0Ah)
  3492  0504  00F0               	movwf	(?___awdiv)
  3493  0505  3000               	movlw	high(0Ah)
  3494  0506  00F1               	movwf	((?___awdiv))+1
  3495  0507  0879               	movf	(Set_DS1307_RTC_Date@Month),w
  3496  0508  00A4               	movwf	(??_Set_DS1307_RTC_Date+4)+0
  3497  0509  01A5               	clrf	(??_Set_DS1307_RTC_Date+4)+0+1
  3498  050A  0824               	movf	0+(??_Set_DS1307_RTC_Date+4)+0,w
  3499  050B  00F2               	movwf	0+(?___awdiv)+02h
  3500  050C  0825               	movf	1+(??_Set_DS1307_RTC_Date+4)+0,w
  3501  050D  00F3               	movwf	1+(?___awdiv)+02h
  3502  050E  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  3503  0513  0870               	movf	(0+(?___awdiv)),w
  3504  0514  1283               	bcf	status, 5	;RP0=0, select bank0
  3505  0515  1303               	bcf	status, 6	;RP1=0, select bank0
  3506  0516  00A6               	movwf	(??_Set_DS1307_RTC_Date+6)+0
  3507  0517  3003               	movlw	(04h)-1
  3508  0518                     u3205:
  3509  0518  1003               	clrc
  3510  0519  0DA6               	rlf	(??_Set_DS1307_RTC_Date+6)+0,f
  3511  051A  3EFF               	addlw	-1
  3512  051B  1D03               	skipz
  3513  051C  2D18               	goto	u3205
  3514  051D  1003               	clrc
  3515  051E  0D26               	rlf	(??_Set_DS1307_RTC_Date+6)+0,w
  3516  051F  0422               	iorwf	0+(??_Set_DS1307_RTC_Date+2)+0,w
  3517  0520  00A7               	movwf	(??_Set_DS1307_RTC_Date+7)+0
  3518  0521  0827               	movf	(??_Set_DS1307_RTC_Date+7)+0,w
  3519  0522  00B7               	movwf	0+(_pRTCArray)+02h
  3520                           	line	194
  3521                           ;DS1307.c: 194: pRTCArray[3] = (((unsigned char)(Year/10))<<4)|((unsigned char)(Year%10)
                                 );
  3522  0523  300A               	movlw	low(0Ah)
  3523  0524  00F0               	movwf	(?___awmod)
  3524  0525  3000               	movlw	high(0Ah)
  3525  0526  00F1               	movwf	((?___awmod))+1
  3526  0527  087A               	movf	(Set_DS1307_RTC_Date@Year),w
  3527  0528  00A0               	movwf	(??_Set_DS1307_RTC_Date+0)+0
  3528  0529  01A1               	clrf	(??_Set_DS1307_RTC_Date+0)+0+1
  3529  052A  0820               	movf	0+(??_Set_DS1307_RTC_Date+0)+0,w
  3530  052B  00F2               	movwf	0+(?___awmod)+02h
  3531  052C  0821               	movf	1+(??_Set_DS1307_RTC_Date+0)+0,w
  3532  052D  00F3               	movwf	1+(?___awmod)+02h
  3533  052E  120A  158A  279A   	fcall	___awmod
              120A  118A         
  3534  0533  0870               	movf	(0+?___awmod),w
  3535  0534  1283               	bcf	status, 5	;RP0=0, select bank0
  3536  0535  1303               	bcf	status, 6	;RP1=0, select bank0
  3537  0536  00A2               	movwf	(??_Set_DS1307_RTC_Date+2)+0
  3538  0537  0871               	movf	(1+?___awmod),w
  3539  0538  00A3               	movwf	((??_Set_DS1307_RTC_Date+2)+0+1)
  3540  0539  300A               	movlw	low(0Ah)
  3541  053A  00F0               	movwf	(?___awdiv)
  3542  053B  3000               	movlw	high(0Ah)
  3543  053C  00F1               	movwf	((?___awdiv))+1
  3544  053D  087A               	movf	(Set_DS1307_RTC_Date@Year),w
  3545  053E  00A4               	movwf	(??_Set_DS1307_RTC_Date+4)+0
  3546  053F  01A5               	clrf	(??_Set_DS1307_RTC_Date+4)+0+1
  3547  0540  0824               	movf	0+(??_Set_DS1307_RTC_Date+4)+0,w
  3548  0541  00F2               	movwf	0+(?___awdiv)+02h
  3549  0542  0825               	movf	1+(??_Set_DS1307_RTC_Date+4)+0,w
  3550  0543  00F3               	movwf	1+(?___awdiv)+02h
  3551  0544  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  3552  0549  0870               	movf	(0+(?___awdiv)),w
  3553  054A  1283               	bcf	status, 5	;RP0=0, select bank0
  3554  054B  1303               	bcf	status, 6	;RP1=0, select bank0
  3555  054C  00A6               	movwf	(??_Set_DS1307_RTC_Date+6)+0
  3556  054D  3003               	movlw	(04h)-1
  3557  054E                     u3215:
  3558  054E  1003               	clrc
  3559  054F  0DA6               	rlf	(??_Set_DS1307_RTC_Date+6)+0,f
  3560  0550  3EFF               	addlw	-1
  3561  0551  1D03               	skipz
  3562  0552  2D4E               	goto	u3215
  3563  0553  1003               	clrc
  3564  0554  0D26               	rlf	(??_Set_DS1307_RTC_Date+6)+0,w
  3565  0555  0422               	iorwf	0+(??_Set_DS1307_RTC_Date+2)+0,w
  3566  0556  00A7               	movwf	(??_Set_DS1307_RTC_Date+7)+0
  3567  0557  0827               	movf	(??_Set_DS1307_RTC_Date+7)+0,w
  3568  0558  00B8               	movwf	0+(_pRTCArray)+03h
  3569                           	line	197
  3570                           	
  3571  0559                     l6495:	
  3572                           ;DS1307.c: 197: Write_Bytes_To_DS1307_RTC(0x03, pRTCArray, 4);
  3573  0559  3035               	movlw	(_pRTCArray)&0ffh
  3574  055A  00A0               	movwf	(??_Set_DS1307_RTC_Date+0)+0
  3575  055B  0820               	movf	(??_Set_DS1307_RTC_Date+0)+0,w
  3576  055C  00F1               	movwf	(?_Write_Bytes_To_DS1307_RTC)
  3577  055D  3004               	movlw	(04h)
  3578  055E  00A1               	movwf	(??_Set_DS1307_RTC_Date+1)+0
  3579  055F  0821               	movf	(??_Set_DS1307_RTC_Date+1)+0,w
  3580  0560  00F2               	movwf	0+(?_Write_Bytes_To_DS1307_RTC)+01h
  3581  0561  3003               	movlw	(03h)
  3582  0562  120A  118A  2012   	fcall	_Write_Bytes_To_DS1307_RTC
              120A  118A         
  3583                           	line	198
  3584                           	
  3585  0567                     l704:	
  3586  0567  0008               	return
  3587                           	opt stack 0
  3588                           GLOBAL	__end_of_Set_DS1307_RTC_Date
  3589  0568                     	__end_of_Set_DS1307_RTC_Date:
  3590 ;; =============== function _Set_DS1307_RTC_Date ends ============
  3591                           
  3592                           	signat	_Set_DS1307_RTC_Date,16504
  3593                           	global	_Get_DS1307_RTC_Time
  3594                           psect	text584,local,class=CODE,delta=2
  3595                           global __ptext584
  3596  0237                     __ptext584:
  3597                           
  3598 ;; *************** function _Get_DS1307_RTC_Time *****************
  3599 ;; Defined at:
  3600 ;;		line 146 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      PTR unsigned char 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0
  3616 ;;      Temps:          4       0       0       0       0
  3617 ;;      Totals:         4       0       0       0       0
  3618 ;;Total ram usage:        4 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    2
  3621 ;; This function calls:
  3622 ;;		_Read_Bytes_From_DS1307_RTC
  3623 ;;		___bmul
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;;		_SetTime
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           psect	text584
  3630                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  3631                           	line	146
  3632                           	global	__size_of_Get_DS1307_RTC_Time
  3633  00A5                     	__size_of_Get_DS1307_RTC_Time	equ	__end_of_Get_DS1307_RTC_Time-_Get_DS1307_RTC_Time
  3634                           	
  3635  0237                     _Get_DS1307_RTC_Time:	
  3636                           	opt	stack 5
  3637                           ; Regs used in _Get_DS1307_RTC_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3638                           	line	148
  3639                           	
  3640  0237                     l6463:	
  3641                           ;DS1307.c: 148: Read_Bytes_From_DS1307_RTC(0x00, pRTCArray, 3);
  3642  0237  3035               	movlw	(_pRTCArray)&0ffh
  3643  0238  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3644  0239  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3645  023A  00F1               	movwf	(?_Read_Bytes_From_DS1307_RTC)
  3646  023B  3003               	movlw	low(03h)
  3647  023C  00F2               	movwf	0+(?_Read_Bytes_From_DS1307_RTC)+01h
  3648  023D  3000               	movlw	high(03h)
  3649  023E  00F3               	movwf	(0+(?_Read_Bytes_From_DS1307_RTC)+01h)+1
  3650  023F  3000               	movlw	(0)
  3651  0240  120A  118A  205A   	fcall	_Read_Bytes_From_DS1307_RTC
              120A  118A         
  3652                           	line	151
  3653                           	
  3654  0245                     l6465:	
  3655                           ;DS1307.c: 151: Temp = pRTCArray[0];
  3656  0245  1283               	bcf	status, 5	;RP0=0, select bank0
  3657  0246  1303               	bcf	status, 6	;RP1=0, select bank0
  3658  0247  0835               	movf	(_pRTCArray),w
  3659  0248  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3660  0249  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3661  024A  00FD               	movwf	(_Temp)
  3662                           	line	152
  3663                           	
  3664  024B                     l6467:	
  3665                           ;DS1307.c: 152: pRTCArray[0] = ((Temp&0x7F)>>4)*10 + (Temp&0x0F);
  3666  024B  300A               	movlw	(0Ah)
  3667  024C  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3668  024D  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3669  024E  00F0               	movwf	(?___bmul)
  3670  024F  087D               	movf	(_Temp),w
  3671  0250  00FA               	movwf	(??_Get_DS1307_RTC_Time+1)+0
  3672  0251  3004               	movlw	04h
  3673  0252                     u3125:
  3674  0252  1003               	clrc
  3675  0253  0CFA               	rrf	(??_Get_DS1307_RTC_Time+1)+0,f
  3676  0254  3EFF               	addlw	-1
  3677  0255  1D03               	skipz
  3678  0256  2A52               	goto	u3125
  3679  0257  087A               	movf	0+(??_Get_DS1307_RTC_Time+1)+0,w
  3680  0258  3907               	andlw	07h
  3681  0259  120A  158A  2690   	fcall	___bmul
              120A  118A         
  3682  025E  00FB               	movwf	(??_Get_DS1307_RTC_Time+2)+0
  3683  025F  087D               	movf	(_Temp),w
  3684  0260  390F               	andlw	0Fh
  3685  0261  077B               	addwf	0+(??_Get_DS1307_RTC_Time+2)+0,w
  3686  0262  00FC               	movwf	(??_Get_DS1307_RTC_Time+3)+0
  3687  0263  087C               	movf	(??_Get_DS1307_RTC_Time+3)+0,w
  3688  0264  1283               	bcf	status, 5	;RP0=0, select bank0
  3689  0265  1303               	bcf	status, 6	;RP1=0, select bank0
  3690  0266  00B5               	movwf	(_pRTCArray)
  3691                           	line	155
  3692                           	
  3693  0267                     l6469:	
  3694                           ;DS1307.c: 155: Temp = pRTCArray[1];
  3695  0267  0836               	movf	0+(_pRTCArray)+01h,w
  3696  0268  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3697  0269  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3698  026A  00FD               	movwf	(_Temp)
  3699                           	line	156
  3700                           	
  3701  026B                     l6471:	
  3702                           ;DS1307.c: 156: pRTCArray[1] = (Temp>>4)*10 + (Temp&0x0F);
  3703  026B  300A               	movlw	(0Ah)
  3704  026C  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3705  026D  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3706  026E  00F0               	movwf	(?___bmul)
  3707  026F  087D               	movf	(_Temp),w
  3708  0270  00FA               	movwf	(??_Get_DS1307_RTC_Time+1)+0
  3709  0271  3004               	movlw	04h
  3710  0272                     u3135:
  3711  0272  1003               	clrc
  3712  0273  0CFA               	rrf	(??_Get_DS1307_RTC_Time+1)+0,f
  3713  0274  3EFF               	addlw	-1
  3714  0275  1D03               	skipz
  3715  0276  2A72               	goto	u3135
  3716  0277  087A               	movf	0+(??_Get_DS1307_RTC_Time+1)+0,w
  3717  0278  120A  158A  2690   	fcall	___bmul
              120A  118A         
  3718  027D  00FB               	movwf	(??_Get_DS1307_RTC_Time+2)+0
  3719  027E  087D               	movf	(_Temp),w
  3720  027F  390F               	andlw	0Fh
  3721  0280  077B               	addwf	0+(??_Get_DS1307_RTC_Time+2)+0,w
  3722  0281  00FC               	movwf	(??_Get_DS1307_RTC_Time+3)+0
  3723  0282  087C               	movf	(??_Get_DS1307_RTC_Time+3)+0,w
  3724  0283  1283               	bcf	status, 5	;RP0=0, select bank0
  3725  0284  1303               	bcf	status, 6	;RP1=0, select bank0
  3726  0285  00B6               	movwf	0+(_pRTCArray)+01h
  3727                           	line	159
  3728                           	
  3729  0286                     l6473:	
  3730                           ;DS1307.c: 159: if(pRTCArray[2]&0x40)
  3731  0286  1F37               	btfss	0+(_pRTCArray)+02h,(6)&7
  3732  0287  2A89               	goto	u3141
  3733  0288  2A8A               	goto	u3140
  3734  0289                     u3141:
  3735  0289  2AB5               	goto	l6483
  3736  028A                     u3140:
  3737                           	line	161
  3738                           	
  3739  028A                     l6475:	
  3740                           ;DS1307.c: 160: {
  3741                           ;DS1307.c: 161: if(pRTCArray[2]&0x20)
  3742  028A  1EB7               	btfss	0+(_pRTCArray)+02h,(5)&7
  3743  028B  2A8D               	goto	u3151
  3744  028C  2A8E               	goto	u3150
  3745  028D                     u3151:
  3746  028D  2A92               	goto	l698
  3747  028E                     u3150:
  3748                           	line	162
  3749                           	
  3750  028E                     l6477:	
  3751                           ;DS1307.c: 162: pRTCArray[3] = 1;
  3752  028E  01B8               	clrf	0+(_pRTCArray)+03h
  3753  028F  1403               	bsf	status,0
  3754  0290  0DB8               	rlf	0+(_pRTCArray)+03h,f
  3755  0291  2A94               	goto	l6479
  3756                           	line	163
  3757                           	
  3758  0292                     l698:	
  3759                           	line	164
  3760                           ;DS1307.c: 163: else
  3761                           ;DS1307.c: 164: pRTCArray[3] = 0;
  3762  0292  01B8               	clrf	0+(_pRTCArray)+03h
  3763  0293  2A94               	goto	l6479
  3764                           	
  3765  0294                     l699:	
  3766                           	line	166
  3767                           	
  3768  0294                     l6479:	
  3769                           ;DS1307.c: 166: Temp = pRTCArray[2];
  3770  0294  0837               	movf	0+(_pRTCArray)+02h,w
  3771  0295  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3772  0296  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3773  0297  00FD               	movwf	(_Temp)
  3774                           	line	167
  3775                           	
  3776  0298                     l6481:	
  3777                           ;DS1307.c: 167: pRTCArray[2] = ((Temp&0x1F)>>4)*10 + (Temp&0x0F);
  3778  0298  300A               	movlw	(0Ah)
  3779  0299  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3780  029A  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3781  029B  00F0               	movwf	(?___bmul)
  3782  029C  087D               	movf	(_Temp),w
  3783  029D  00FA               	movwf	(??_Get_DS1307_RTC_Time+1)+0
  3784  029E  3004               	movlw	04h
  3785  029F                     u3165:
  3786  029F  1003               	clrc
  3787  02A0  0CFA               	rrf	(??_Get_DS1307_RTC_Time+1)+0,f
  3788  02A1  3EFF               	addlw	-1
  3789  02A2  1D03               	skipz
  3790  02A3  2A9F               	goto	u3165
  3791  02A4  087A               	movf	0+(??_Get_DS1307_RTC_Time+1)+0,w
  3792  02A5  3901               	andlw	01h
  3793  02A6  120A  158A  2690   	fcall	___bmul
              120A  118A         
  3794  02AB  00FB               	movwf	(??_Get_DS1307_RTC_Time+2)+0
  3795  02AC  087D               	movf	(_Temp),w
  3796  02AD  390F               	andlw	0Fh
  3797  02AE  077B               	addwf	0+(??_Get_DS1307_RTC_Time+2)+0,w
  3798  02AF  00FC               	movwf	(??_Get_DS1307_RTC_Time+3)+0
  3799  02B0  087C               	movf	(??_Get_DS1307_RTC_Time+3)+0,w
  3800  02B1  1283               	bcf	status, 5	;RP0=0, select bank0
  3801  02B2  1303               	bcf	status, 6	;RP1=0, select bank0
  3802  02B3  00B7               	movwf	0+(_pRTCArray)+02h
  3803                           	line	168
  3804                           ;DS1307.c: 168: }
  3805  02B4  2AD9               	goto	l6489
  3806                           	line	169
  3807                           	
  3808  02B5                     l697:	
  3809                           	line	171
  3810                           	
  3811  02B5                     l6483:	
  3812                           ;DS1307.c: 169: else
  3813                           ;DS1307.c: 170: {
  3814                           ;DS1307.c: 171: Temp = pRTCArray[2];
  3815  02B5  0837               	movf	0+(_pRTCArray)+02h,w
  3816  02B6  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3817  02B7  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3818  02B8  00FD               	movwf	(_Temp)
  3819                           	line	172
  3820                           	
  3821  02B9                     l6485:	
  3822                           ;DS1307.c: 172: pRTCArray[2] = (Temp>>4)*10 + (Temp&0x0F);
  3823  02B9  300A               	movlw	(0Ah)
  3824  02BA  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3825  02BB  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3826  02BC  00F0               	movwf	(?___bmul)
  3827  02BD  087D               	movf	(_Temp),w
  3828  02BE  00FA               	movwf	(??_Get_DS1307_RTC_Time+1)+0
  3829  02BF  3004               	movlw	04h
  3830  02C0                     u3175:
  3831  02C0  1003               	clrc
  3832  02C1  0CFA               	rrf	(??_Get_DS1307_RTC_Time+1)+0,f
  3833  02C2  3EFF               	addlw	-1
  3834  02C3  1D03               	skipz
  3835  02C4  2AC0               	goto	u3175
  3836  02C5  087A               	movf	0+(??_Get_DS1307_RTC_Time+1)+0,w
  3837  02C6  120A  158A  2690   	fcall	___bmul
              120A  118A         
  3838  02CB  00FB               	movwf	(??_Get_DS1307_RTC_Time+2)+0
  3839  02CC  087D               	movf	(_Temp),w
  3840  02CD  390F               	andlw	0Fh
  3841  02CE  077B               	addwf	0+(??_Get_DS1307_RTC_Time+2)+0,w
  3842  02CF  00FC               	movwf	(??_Get_DS1307_RTC_Time+3)+0
  3843  02D0  087C               	movf	(??_Get_DS1307_RTC_Time+3)+0,w
  3844  02D1  1283               	bcf	status, 5	;RP0=0, select bank0
  3845  02D2  1303               	bcf	status, 6	;RP1=0, select bank0
  3846  02D3  00B7               	movwf	0+(_pRTCArray)+02h
  3847                           	line	173
  3848                           	
  3849  02D4                     l6487:	
  3850                           ;DS1307.c: 173: pRTCArray[3] = 2;
  3851  02D4  3002               	movlw	(02h)
  3852  02D5  00F9               	movwf	(??_Get_DS1307_RTC_Time+0)+0
  3853  02D6  0879               	movf	(??_Get_DS1307_RTC_Time+0)+0,w
  3854  02D7  00B8               	movwf	0+(_pRTCArray)+03h
  3855  02D8  2AD9               	goto	l6489
  3856                           	line	174
  3857                           	
  3858  02D9                     l700:	
  3859                           	line	176
  3860                           	
  3861  02D9                     l6489:	
  3862                           ;DS1307.c: 174: }
  3863                           ;DS1307.c: 176: return pRTCArray;
  3864  02D9  3035               	movlw	(_pRTCArray)&0ffh
  3865  02DA  2ADB               	goto	l701
  3866                           	
  3867  02DB                     l6491:	
  3868                           	line	177
  3869                           	
  3870  02DB                     l701:	
  3871  02DB  0008               	return
  3872                           	opt stack 0
  3873                           GLOBAL	__end_of_Get_DS1307_RTC_Time
  3874  02DC                     	__end_of_Get_DS1307_RTC_Time:
  3875 ;; =============== function _Get_DS1307_RTC_Time ends ============
  3876                           
  3877                           	signat	_Get_DS1307_RTC_Time,89
  3878                           	global	_Set_DS1307_RTC_Time
  3879                           psect	text585,local,class=CODE,delta=2
  3880                           global __ptext585
  3881  02DC                     __ptext585:
  3882                           
  3883 ;; *************** function _Set_DS1307_RTC_Time *****************
  3884 ;; Defined at:
  3885 ;;		line 117 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  Mode            1    wreg     unsigned char 
  3888 ;;  Hours           1    9[COMMON] unsigned char 
  3889 ;;  Mins            1   10[COMMON] unsigned char 
  3890 ;;  Secs            1   11[COMMON] unsigned char 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  Mode            1   12[COMMON] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;		None               void
  3895 ;; Registers used:
  3896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3902 ;;      Params:         3       0       0       0       0
  3903 ;;      Locals:         1       0       0       0       0
  3904 ;;      Temps:          0       8       0       0       0
  3905 ;;      Totals:         4       8       0       0       0
  3906 ;;Total ram usage:       12 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    2
  3909 ;; This function calls:
  3910 ;;		___awmod
  3911 ;;		___awdiv
  3912 ;;		_Write_Bytes_To_DS1307_RTC
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;;		_SetTime
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           psect	text585
  3919                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  3920                           	line	117
  3921                           	global	__size_of_Set_DS1307_RTC_Time
  3922  00C6                     	__size_of_Set_DS1307_RTC_Time	equ	__end_of_Set_DS1307_RTC_Time-_Set_DS1307_RTC_Time
  3923                           	
  3924  02DC                     _Set_DS1307_RTC_Time:	
  3925                           	opt	stack 4
  3926                           ; Regs used in _Set_DS1307_RTC_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3927                           ;Set_DS1307_RTC_Time@Mode stored from wreg
  3928                           	line	119
  3929  02DC  00FC               	movwf	(Set_DS1307_RTC_Time@Mode)
  3930                           	
  3931  02DD                     l6453:	
  3932                           ;DS1307.c: 119: pRTCArray[0] = (((unsigned char)(Secs/10))<<4)|((unsigned char)(Secs%10)
                                 );
  3933  02DD  300A               	movlw	low(0Ah)
  3934  02DE  00F0               	movwf	(?___awmod)
  3935  02DF  3000               	movlw	high(0Ah)
  3936  02E0  00F1               	movwf	((?___awmod))+1
  3937  02E1  087B               	movf	(Set_DS1307_RTC_Time@Secs),w
  3938  02E2  1283               	bcf	status, 5	;RP0=0, select bank0
  3939  02E3  1303               	bcf	status, 6	;RP1=0, select bank0
  3940  02E4  00A0               	movwf	(??_Set_DS1307_RTC_Time+0)+0
  3941  02E5  01A1               	clrf	(??_Set_DS1307_RTC_Time+0)+0+1
  3942  02E6  0820               	movf	0+(??_Set_DS1307_RTC_Time+0)+0,w
  3943  02E7  00F2               	movwf	0+(?___awmod)+02h
  3944  02E8  0821               	movf	1+(??_Set_DS1307_RTC_Time+0)+0,w
  3945  02E9  00F3               	movwf	1+(?___awmod)+02h
  3946  02EA  120A  158A  279A   	fcall	___awmod
              120A  118A         
  3947  02EF  0870               	movf	(0+?___awmod),w
  3948  02F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3949  02F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3950  02F2  00A2               	movwf	(??_Set_DS1307_RTC_Time+2)+0
  3951  02F3  0871               	movf	(1+?___awmod),w
  3952  02F4  00A3               	movwf	((??_Set_DS1307_RTC_Time+2)+0+1)
  3953  02F5  300A               	movlw	low(0Ah)
  3954  02F6  00F0               	movwf	(?___awdiv)
  3955  02F7  3000               	movlw	high(0Ah)
  3956  02F8  00F1               	movwf	((?___awdiv))+1
  3957  02F9  087B               	movf	(Set_DS1307_RTC_Time@Secs),w
  3958  02FA  00A4               	movwf	(??_Set_DS1307_RTC_Time+4)+0
  3959  02FB  01A5               	clrf	(??_Set_DS1307_RTC_Time+4)+0+1
  3960  02FC  0824               	movf	0+(??_Set_DS1307_RTC_Time+4)+0,w
  3961  02FD  00F2               	movwf	0+(?___awdiv)+02h
  3962  02FE  0825               	movf	1+(??_Set_DS1307_RTC_Time+4)+0,w
  3963  02FF  00F3               	movwf	1+(?___awdiv)+02h
  3964  0300  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  3965  0305  0870               	movf	(0+(?___awdiv)),w
  3966  0306  1283               	bcf	status, 5	;RP0=0, select bank0
  3967  0307  1303               	bcf	status, 6	;RP1=0, select bank0
  3968  0308  00A6               	movwf	(??_Set_DS1307_RTC_Time+6)+0
  3969  0309  3003               	movlw	(04h)-1
  3970  030A                     u3095:
  3971  030A  1003               	clrc
  3972  030B  0DA6               	rlf	(??_Set_DS1307_RTC_Time+6)+0,f
  3973  030C  3EFF               	addlw	-1
  3974  030D  1D03               	skipz
  3975  030E  2B0A               	goto	u3095
  3976  030F  1003               	clrc
  3977  0310  0D26               	rlf	(??_Set_DS1307_RTC_Time+6)+0,w
  3978  0311  0422               	iorwf	0+(??_Set_DS1307_RTC_Time+2)+0,w
  3979  0312  00A7               	movwf	(??_Set_DS1307_RTC_Time+7)+0
  3980  0313  0827               	movf	(??_Set_DS1307_RTC_Time+7)+0,w
  3981  0314  00B5               	movwf	(_pRTCArray)
  3982                           	line	120
  3983                           ;DS1307.c: 120: pRTCArray[1] = (((unsigned char)(Mins/10))<<4)|((unsigned char)(Mins%10)
                                 );
  3984  0315  300A               	movlw	low(0Ah)
  3985  0316  00F0               	movwf	(?___awmod)
  3986  0317  3000               	movlw	high(0Ah)
  3987  0318  00F1               	movwf	((?___awmod))+1
  3988  0319  087A               	movf	(Set_DS1307_RTC_Time@Mins),w
  3989  031A  00A0               	movwf	(??_Set_DS1307_RTC_Time+0)+0
  3990  031B  01A1               	clrf	(??_Set_DS1307_RTC_Time+0)+0+1
  3991  031C  0820               	movf	0+(??_Set_DS1307_RTC_Time+0)+0,w
  3992  031D  00F2               	movwf	0+(?___awmod)+02h
  3993  031E  0821               	movf	1+(??_Set_DS1307_RTC_Time+0)+0,w
  3994  031F  00F3               	movwf	1+(?___awmod)+02h
  3995  0320  120A  158A  279A   	fcall	___awmod
              120A  118A         
  3996  0325  0870               	movf	(0+?___awmod),w
  3997  0326  1283               	bcf	status, 5	;RP0=0, select bank0
  3998  0327  1303               	bcf	status, 6	;RP1=0, select bank0
  3999  0328  00A2               	movwf	(??_Set_DS1307_RTC_Time+2)+0
  4000  0329  0871               	movf	(1+?___awmod),w
  4001  032A  00A3               	movwf	((??_Set_DS1307_RTC_Time+2)+0+1)
  4002  032B  300A               	movlw	low(0Ah)
  4003  032C  00F0               	movwf	(?___awdiv)
  4004  032D  3000               	movlw	high(0Ah)
  4005  032E  00F1               	movwf	((?___awdiv))+1
  4006  032F  087A               	movf	(Set_DS1307_RTC_Time@Mins),w
  4007  0330  00A4               	movwf	(??_Set_DS1307_RTC_Time+4)+0
  4008  0331  01A5               	clrf	(??_Set_DS1307_RTC_Time+4)+0+1
  4009  0332  0824               	movf	0+(??_Set_DS1307_RTC_Time+4)+0,w
  4010  0333  00F2               	movwf	0+(?___awdiv)+02h
  4011  0334  0825               	movf	1+(??_Set_DS1307_RTC_Time+4)+0,w
  4012  0335  00F3               	movwf	1+(?___awdiv)+02h
  4013  0336  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  4014  033B  0870               	movf	(0+(?___awdiv)),w
  4015  033C  1283               	bcf	status, 5	;RP0=0, select bank0
  4016  033D  1303               	bcf	status, 6	;RP1=0, select bank0
  4017  033E  00A6               	movwf	(??_Set_DS1307_RTC_Time+6)+0
  4018  033F  3003               	movlw	(04h)-1
  4019  0340                     u3105:
  4020  0340  1003               	clrc
  4021  0341  0DA6               	rlf	(??_Set_DS1307_RTC_Time+6)+0,f
  4022  0342  3EFF               	addlw	-1
  4023  0343  1D03               	skipz
  4024  0344  2B40               	goto	u3105
  4025  0345  1003               	clrc
  4026  0346  0D26               	rlf	(??_Set_DS1307_RTC_Time+6)+0,w
  4027  0347  0422               	iorwf	0+(??_Set_DS1307_RTC_Time+2)+0,w
  4028  0348  00A7               	movwf	(??_Set_DS1307_RTC_Time+7)+0
  4029  0349  0827               	movf	(??_Set_DS1307_RTC_Time+7)+0,w
  4030  034A  00B6               	movwf	0+(_pRTCArray)+01h
  4031                           	line	121
  4032                           ;DS1307.c: 121: pRTCArray[2] = (((unsigned char)(Hours/10))<<4)|((unsigned char)(Hours%1
                                 0));
  4033  034B  300A               	movlw	low(0Ah)
  4034  034C  00F0               	movwf	(?___awmod)
  4035  034D  3000               	movlw	high(0Ah)
  4036  034E  00F1               	movwf	((?___awmod))+1
  4037  034F  0879               	movf	(Set_DS1307_RTC_Time@Hours),w
  4038  0350  00A0               	movwf	(??_Set_DS1307_RTC_Time+0)+0
  4039  0351  01A1               	clrf	(??_Set_DS1307_RTC_Time+0)+0+1
  4040  0352  0820               	movf	0+(??_Set_DS1307_RTC_Time+0)+0,w
  4041  0353  00F2               	movwf	0+(?___awmod)+02h
  4042  0354  0821               	movf	1+(??_Set_DS1307_RTC_Time+0)+0,w
  4043  0355  00F3               	movwf	1+(?___awmod)+02h
  4044  0356  120A  158A  279A   	fcall	___awmod
              120A  118A         
  4045  035B  0870               	movf	(0+?___awmod),w
  4046  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  4047  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  4048  035E  00A2               	movwf	(??_Set_DS1307_RTC_Time+2)+0
  4049  035F  0871               	movf	(1+?___awmod),w
  4050  0360  00A3               	movwf	((??_Set_DS1307_RTC_Time+2)+0+1)
  4051  0361  300A               	movlw	low(0Ah)
  4052  0362  00F0               	movwf	(?___awdiv)
  4053  0363  3000               	movlw	high(0Ah)
  4054  0364  00F1               	movwf	((?___awdiv))+1
  4055  0365  0879               	movf	(Set_DS1307_RTC_Time@Hours),w
  4056  0366  00A4               	movwf	(??_Set_DS1307_RTC_Time+4)+0
  4057  0367  01A5               	clrf	(??_Set_DS1307_RTC_Time+4)+0+1
  4058  0368  0824               	movf	0+(??_Set_DS1307_RTC_Time+4)+0,w
  4059  0369  00F2               	movwf	0+(?___awdiv)+02h
  4060  036A  0825               	movf	1+(??_Set_DS1307_RTC_Time+4)+0,w
  4061  036B  00F3               	movwf	1+(?___awdiv)+02h
  4062  036C  120A  118A  2133   	fcall	___awdiv
              120A  118A         
  4063  0371  0870               	movf	(0+(?___awdiv)),w
  4064  0372  1283               	bcf	status, 5	;RP0=0, select bank0
  4065  0373  1303               	bcf	status, 6	;RP1=0, select bank0
  4066  0374  00A6               	movwf	(??_Set_DS1307_RTC_Time+6)+0
  4067  0375  3003               	movlw	(04h)-1
  4068  0376                     u3115:
  4069  0376  1003               	clrc
  4070  0377  0DA6               	rlf	(??_Set_DS1307_RTC_Time+6)+0,f
  4071  0378  3EFF               	addlw	-1
  4072  0379  1D03               	skipz
  4073  037A  2B76               	goto	u3115
  4074  037B  1003               	clrc
  4075  037C  0D26               	rlf	(??_Set_DS1307_RTC_Time+6)+0,w
  4076  037D  0422               	iorwf	0+(??_Set_DS1307_RTC_Time+2)+0,w
  4077  037E  00A7               	movwf	(??_Set_DS1307_RTC_Time+7)+0
  4078  037F  0827               	movf	(??_Set_DS1307_RTC_Time+7)+0,w
  4079  0380  00B7               	movwf	0+(_pRTCArray)+02h
  4080                           	line	123
  4081                           ;DS1307.c: 123: switch(Mode)
  4082  0381  2B8B               	goto	l6459
  4083                           	line	125
  4084                           ;DS1307.c: 124: {
  4085                           ;DS1307.c: 125: case 0: pRTCArray[2] |= 0x40; break;
  4086                           	
  4087  0382                     l690:	
  4088  0382  1737               	bsf	0+(_pRTCArray)+02h+(6/8),(6)&7
  4089  0383  2B93               	goto	l6461
  4090                           	line	126
  4091                           ;DS1307.c: 126: case 1: pRTCArray[2] |= 0x60; break;
  4092                           	
  4093  0384                     l692:	
  4094                           	
  4095  0384                     l6455:	
  4096  0384  3060               	movlw	(060h)
  4097  0385  00A0               	movwf	(??_Set_DS1307_RTC_Time+0)+0
  4098  0386  0820               	movf	(??_Set_DS1307_RTC_Time+0)+0,w
  4099  0387  04B7               	iorwf	0+(_pRTCArray)+02h,f
  4100  0388  2B93               	goto	l6461
  4101                           	line	128
  4102                           ;DS1307.c: 128: default: break;
  4103                           	
  4104  0389                     l693:	
  4105  0389  2B93               	goto	l6461
  4106                           	line	129
  4107                           	
  4108  038A                     l6457:	
  4109                           ;DS1307.c: 129: }
  4110  038A  2B93               	goto	l6461
  4111                           	line	123
  4112                           	
  4113  038B                     l689:	
  4114                           	
  4115  038B                     l6459:	
  4116  038B  087C               	movf	(Set_DS1307_RTC_Time@Mode),w
  4117                           	; Switch size 1, requested type "space"
  4118                           ; Number of cases is 2, Range of values is 0 to 1
  4119                           ; switch strategies available:
  4120                           ; Name         Instructions Cycles
  4121                           ; simple_byte            7     4 (average)
  4122                           ; direct_byte           14     8 (fixed)
  4123                           ; jumptable            260     6 (fixed)
  4124                           ; rangetable             6     6 (fixed)
  4125                           ; spacedrange           10     9 (fixed)
  4126                           ; locatedrange           2     3 (fixed)
  4127                           ;	Chosen strategy is simple_byte
  4128                           
  4129                           	opt asmopt_off
  4130  038C  3A00               	xorlw	0^0	; case 0
  4131  038D  1903               	skipnz
  4132  038E  2B82               	goto	l690
  4133  038F  3A01               	xorlw	1^0	; case 1
  4134  0390  1903               	skipnz
  4135  0391  2B84               	goto	l6455
  4136  0392  2B93               	goto	l6461
  4137                           	opt asmopt_on
  4138                           
  4139                           	line	129
  4140                           	
  4141  0393                     l691:	
  4142                           	line	132
  4143                           	
  4144  0393                     l6461:	
  4145                           ;DS1307.c: 132: Write_Bytes_To_DS1307_RTC(0x00, pRTCArray, 3);
  4146  0393  3035               	movlw	(_pRTCArray)&0ffh
  4147  0394  00A0               	movwf	(??_Set_DS1307_RTC_Time+0)+0
  4148  0395  0820               	movf	(??_Set_DS1307_RTC_Time+0)+0,w
  4149  0396  00F1               	movwf	(?_Write_Bytes_To_DS1307_RTC)
  4150  0397  3003               	movlw	(03h)
  4151  0398  00A1               	movwf	(??_Set_DS1307_RTC_Time+1)+0
  4152  0399  0821               	movf	(??_Set_DS1307_RTC_Time+1)+0,w
  4153  039A  00F2               	movwf	0+(?_Write_Bytes_To_DS1307_RTC)+01h
  4154  039B  3000               	movlw	(0)
  4155  039C  120A  118A  2012   	fcall	_Write_Bytes_To_DS1307_RTC
              120A  118A         
  4156                           	line	133
  4157                           	
  4158  03A1                     l694:	
  4159  03A1  0008               	return
  4160                           	opt stack 0
  4161                           GLOBAL	__end_of_Set_DS1307_RTC_Time
  4162  03A2                     	__end_of_Set_DS1307_RTC_Time:
  4163 ;; =============== function _Set_DS1307_RTC_Time ends ============
  4164                           
  4165                           	signat	_Set_DS1307_RTC_Time,16504
  4166                           	global	_ToggleEpinOfLCD
  4167                           psect	text586,local,class=CODE,delta=2
  4168                           global __ptext586
  4169  0EA8                     __ptext586:
  4170                           
  4171 ;; *************** function _ToggleEpinOfLCD *****************
  4172 ;; Defined at:
  4173 ;;		line 5 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;		None               void
  4180 ;; Registers used:
  4181 ;;		wreg
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4187 ;;      Params:         0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0
  4189 ;;      Temps:          2       0       0       0       0
  4190 ;;      Totals:         2       0       0       0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_WriteCommandToLCD
  4197 ;;		_WriteDataToLCD
  4198 ;;		_InitLCD
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           psect	text586
  4202                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\LCD.c"
  4203                           	line	5
  4204                           	global	__size_of_ToggleEpinOfLCD
  4205  0019                     	__size_of_ToggleEpinOfLCD	equ	__end_of_ToggleEpinOfLCD-_ToggleEpinOfLCD
  4206                           	
  4207  0EA8                     _ToggleEpinOfLCD:	
  4208                           	opt	stack 4
  4209                           ; Regs used in _ToggleEpinOfLCD: [wreg]
  4210                           	line	6
  4211                           	
  4212  0EA8                     l6447:	
  4213                           ;LCD.c: 6: RB0 = 1;
  4214  0EA8  1283               	bcf	status, 5	;RP0=0, select bank0
  4215  0EA9  1303               	bcf	status, 6	;RP1=0, select bank0
  4216  0EAA  1406               	bsf	(48/8),(48)&7
  4217                           	line	7
  4218                           	
  4219  0EAB                     l6449:	
  4220                           ;LCD.c: 7: _delay((unsigned long)((500)*(20000000/4000000.0)));
  4221                           	opt asmopt_off
  4222  0EAB  3004               movlw	4
  4223  0EAC  00F1               movwf	((??_ToggleEpinOfLCD+0)+0+1),f
  4224  0EAD  303D               	movlw	61
  4225  0EAE  00F0               movwf	((??_ToggleEpinOfLCD+0)+0),f
  4226  0EAF                     u3547:
  4227  0EAF  0BF0               	decfsz	((??_ToggleEpinOfLCD+0)+0),f
  4228  0EB0  2EAF               	goto	u3547
  4229  0EB1  0BF1               	decfsz	((??_ToggleEpinOfLCD+0)+0+1),f
  4230  0EB2  2EAF               	goto	u3547
  4231  0EB3  2EB4               	nop2
  4232                           opt asmopt_on
  4233                           
  4234                           	line	8
  4235                           	
  4236  0EB4                     l6451:	
  4237                           ;LCD.c: 8: RB0 = 0;
  4238  0EB4  1283               	bcf	status, 5	;RP0=0, select bank0
  4239  0EB5  1303               	bcf	status, 6	;RP1=0, select bank0
  4240  0EB6  1006               	bcf	(48/8),(48)&7
  4241                           	line	9
  4242                           ;LCD.c: 9: _delay((unsigned long)((500)*(20000000/4000000.0)));
  4243                           	opt asmopt_off
  4244  0EB7  3004               movlw	4
  4245  0EB8  00F1               movwf	((??_ToggleEpinOfLCD+0)+0+1),f
  4246  0EB9  303D               	movlw	61
  4247  0EBA  00F0               movwf	((??_ToggleEpinOfLCD+0)+0),f
  4248  0EBB                     u3557:
  4249  0EBB  0BF0               	decfsz	((??_ToggleEpinOfLCD+0)+0),f
  4250  0EBC  2EBB               	goto	u3557
  4251  0EBD  0BF1               	decfsz	((??_ToggleEpinOfLCD+0)+0+1),f
  4252  0EBE  2EBB               	goto	u3557
  4253  0EBF  2EC0               	nop2
  4254                           opt asmopt_on
  4255                           
  4256                           	line	10
  4257                           	
  4258  0EC0                     l2033:	
  4259  0EC0  0008               	return
  4260                           	opt stack 0
  4261                           GLOBAL	__end_of_ToggleEpinOfLCD
  4262  0EC1                     	__end_of_ToggleEpinOfLCD:
  4263 ;; =============== function _ToggleEpinOfLCD ends ============
  4264                           
  4265                           	signat	_ToggleEpinOfLCD,88
  4266                           	global	_Read_Bytes_From_DS1307_RTC
  4267                           psect	text587,local,class=CODE,delta=2
  4268                           global __ptext587
  4269  005A                     __ptext587:
  4270                           
  4271 ;; *************** function _Read_Bytes_From_DS1307_RTC *****************
  4272 ;; Defined at:
  4273 ;;		line 81 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  Address         1    wreg     unsigned char 
  4276 ;;  pData           1    1[COMMON] PTR unsigned char 
  4277 ;;		 -> pRTCArray(4), 
  4278 ;;  NoOfBytes       2    2[COMMON] unsigned int 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  Address         1    6[COMMON] unsigned char 
  4281 ;;  i               2    7[COMMON] unsigned int 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;		None               void
  4284 ;; Registers used:
  4285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4291 ;;      Params:         3       0       0       0       0
  4292 ;;      Locals:         3       0       0       0       0
  4293 ;;      Temps:          2       0       0       0       0
  4294 ;;      Totals:         8       0       0       0       0
  4295 ;;Total ram usage:        8 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    1
  4298 ;; This function calls:
  4299 ;;		_I2C_Start
  4300 ;;		_I2C_Write_Byte
  4301 ;;		_I2C_ReStart
  4302 ;;		_I2C_Read_Byte
  4303 ;;		_I2C_Send_ACK
  4304 ;;		_I2C_Send_NACK
  4305 ;;		_I2C_Stop
  4306 ;; This function is called by:
  4307 ;;		_Get_DS1307_RTC_Time
  4308 ;;		_Get_DS1307_RTC_Date
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           psect	text587
  4312                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  4313                           	line	81
  4314                           	global	__size_of_Read_Bytes_From_DS1307_RTC
  4315  0069                     	__size_of_Read_Bytes_From_DS1307_RTC	equ	__end_of_Read_Bytes_From_DS1307_RTC-_Read_Byte
                                 s_From_DS1307_RTC
  4316                           	
  4317  005A                     _Read_Bytes_From_DS1307_RTC:	
  4318                           	opt	stack 5
  4319                           ; Regs used in _Read_Bytes_From_DS1307_RTC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4320                           ;Read_Bytes_From_DS1307_RTC@Address stored from wreg
  4321                           	line	84
  4322  005A  00F6               	movwf	(Read_Bytes_From_DS1307_RTC@Address)
  4323                           	
  4324  005B                     l6421:	
  4325                           ;DS1307.c: 82: unsigned int i;
  4326                           ;DS1307.c: 84: I2C_Start();
  4327  005B  120A  158A  2623   	fcall	_I2C_Start
              120A  118A         
  4328                           	line	87
  4329                           ;DS1307.c: 87: while(I2C_Write_Byte(0xD0 + 0) == 1)
  4330  0060  2867               	goto	l6425
  4331                           	
  4332  0061                     l681:	
  4333                           	line	88
  4334                           	
  4335  0061                     l6423:	
  4336                           ;DS1307.c: 88: { I2C_Start(); }
  4337  0061  120A  158A  2623   	fcall	_I2C_Start
              120A  118A         
  4338  0066  2867               	goto	l6425
  4339                           	
  4340  0067                     l680:	
  4341                           	line	87
  4342                           	
  4343  0067                     l6425:	
  4344  0067  30D0               	movlw	(0D0h)
  4345  0068  120A  158A  2679   	fcall	_I2C_Write_Byte
              120A  118A         
  4346  006D  1803               	btfsc	status,0
  4347  006E  2870               	goto	u3071
  4348  006F  2871               	goto	u3070
  4349  0070                     u3071:
  4350  0070  2861               	goto	l6423
  4351  0071                     u3070:
  4352  0071  2872               	goto	l6427
  4353                           	
  4354  0072                     l682:	
  4355                           	line	90
  4356                           	
  4357  0072                     l6427:	
  4358                           ;DS1307.c: 90: I2C_Write_Byte(Address);
  4359  0072  0876               	movf	(Read_Bytes_From_DS1307_RTC@Address),w
  4360  0073  120A  158A  2679   	fcall	_I2C_Write_Byte
              120A  118A         
  4361                           	line	91
  4362                           	
  4363  0078                     l6429:	
  4364                           ;DS1307.c: 91: I2C_ReStart();
  4365  0078  120A  158A  2639   	fcall	_I2C_ReStart
              120A  118A         
  4366                           	line	94
  4367                           	
  4368  007D                     l6431:	
  4369                           ;DS1307.c: 94: I2C_Write_Byte(0xD0 + 1);
  4370  007D  30D1               	movlw	(0D1h)
  4371  007E  120A  158A  2679   	fcall	_I2C_Write_Byte
              120A  118A         
  4372                           	line	96
  4373                           	
  4374  0083                     l6433:	
  4375                           ;DS1307.c: 96: pData[0] = I2C_Read_Byte();
  4376  0083  120A  158A  265C   	fcall	_I2C_Read_Byte
              120A  118A         
  4377  0088  00F4               	movwf	(??_Read_Bytes_From_DS1307_RTC+0)+0
  4378  0089  0871               	movf	(Read_Bytes_From_DS1307_RTC@pData),w
  4379  008A  0084               	movwf	fsr0
  4380  008B  0874               	movf	(??_Read_Bytes_From_DS1307_RTC+0)+0,w
  4381  008C  1383               	bcf	status, 7	;select IRP bank0
  4382  008D  0080               	movwf	indf
  4383                           	line	98
  4384                           	
  4385  008E                     l6435:	
  4386                           ;DS1307.c: 98: for(i=1;i<NoOfBytes;i++)
  4387  008E  3001               	movlw	low(01h)
  4388  008F  00F7               	movwf	(Read_Bytes_From_DS1307_RTC@i)
  4389  0090  3000               	movlw	high(01h)
  4390  0091  00F8               	movwf	((Read_Bytes_From_DS1307_RTC@i))+1
  4391  0092  28AD               	goto	l6443
  4392                           	line	99
  4393                           	
  4394  0093                     l684:	
  4395                           	line	100
  4396                           	
  4397  0093                     l6437:	
  4398                           ;DS1307.c: 99: {
  4399                           ;DS1307.c: 100: I2C_Send_ACK();
  4400  0093  120A  158A  2650   	fcall	_I2C_Send_ACK
              120A  118A         
  4401                           	line	101
  4402                           	
  4403  0098                     l6439:	
  4404                           ;DS1307.c: 101: pData[i] = I2C_Read_Byte();
  4405  0098  120A  158A  265C   	fcall	_I2C_Read_Byte
              120A  118A         
  4406  009D  00F4               	movwf	(??_Read_Bytes_From_DS1307_RTC+0)+0
  4407  009E  0877               	movf	(Read_Bytes_From_DS1307_RTC@i),w
  4408  009F  0771               	addwf	(Read_Bytes_From_DS1307_RTC@pData),w
  4409  00A0  00F5               	movwf	(??_Read_Bytes_From_DS1307_RTC+1)+0
  4410  00A1  0875               	movf	0+(??_Read_Bytes_From_DS1307_RTC+1)+0,w
  4411  00A2  0084               	movwf	fsr0
  4412  00A3  0874               	movf	(??_Read_Bytes_From_DS1307_RTC+0)+0,w
  4413  00A4  1383               	bcf	status, 7	;select IRP bank0
  4414  00A5  0080               	movwf	indf
  4415                           	line	98
  4416                           	
  4417  00A6                     l6441:	
  4418  00A6  3001               	movlw	low(01h)
  4419  00A7  07F7               	addwf	(Read_Bytes_From_DS1307_RTC@i),f
  4420  00A8  1803               	skipnc
  4421  00A9  0AF8               	incf	(Read_Bytes_From_DS1307_RTC@i+1),f
  4422  00AA  3000               	movlw	high(01h)
  4423  00AB  07F8               	addwf	(Read_Bytes_From_DS1307_RTC@i+1),f
  4424  00AC  28AD               	goto	l6443
  4425                           	
  4426  00AD                     l683:	
  4427                           	
  4428  00AD                     l6443:	
  4429  00AD  0873               	movf	(Read_Bytes_From_DS1307_RTC@NoOfBytes+1),w
  4430  00AE  0278               	subwf	(Read_Bytes_From_DS1307_RTC@i+1),w
  4431  00AF  1D03               	skipz
  4432  00B0  28B3               	goto	u3085
  4433  00B1  0872               	movf	(Read_Bytes_From_DS1307_RTC@NoOfBytes),w
  4434  00B2  0277               	subwf	(Read_Bytes_From_DS1307_RTC@i),w
  4435  00B3                     u3085:
  4436  00B3  1C03               	skipc
  4437  00B4  28B6               	goto	u3081
  4438  00B5  28B7               	goto	u3080
  4439  00B6                     u3081:
  4440  00B6  2893               	goto	l6437
  4441  00B7                     u3080:
  4442  00B7  28B8               	goto	l6445
  4443                           	
  4444  00B8                     l685:	
  4445                           	line	104
  4446                           	
  4447  00B8                     l6445:	
  4448                           ;DS1307.c: 102: }
  4449                           ;DS1307.c: 104: I2C_Send_NACK();
  4450  00B8  120A  158A  2644   	fcall	_I2C_Send_NACK
              120A  118A         
  4451                           	line	105
  4452                           ;DS1307.c: 105: I2C_Stop();
  4453  00BD  120A  158A  262E   	fcall	_I2C_Stop
              120A  118A         
  4454                           	line	106
  4455                           	
  4456  00C2                     l686:	
  4457  00C2  0008               	return
  4458                           	opt stack 0
  4459                           GLOBAL	__end_of_Read_Bytes_From_DS1307_RTC
  4460  00C3                     	__end_of_Read_Bytes_From_DS1307_RTC:
  4461 ;; =============== function _Read_Bytes_From_DS1307_RTC ends ============
  4462                           
  4463                           	signat	_Read_Bytes_From_DS1307_RTC,12408
  4464                           	global	_Write_Bytes_To_DS1307_RTC
  4465                           psect	text588,local,class=CODE,delta=2
  4466                           global __ptext588
  4467  0012                     __ptext588:
  4468                           
  4469 ;; *************** function _Write_Bytes_To_DS1307_RTC *****************
  4470 ;; Defined at:
  4471 ;;		line 57 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  Address         1    wreg     unsigned char 
  4474 ;;  pData           1    1[COMMON] PTR unsigned char 
  4475 ;;		 -> pRTCArray(4), 
  4476 ;;  NoOfBytes       1    2[COMMON] unsigned char 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  Address         1    5[COMMON] unsigned char 
  4479 ;;  i               2    6[COMMON] unsigned int 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;		None               void
  4482 ;; Registers used:
  4483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         2       0       0       0       0
  4490 ;;      Locals:         3       0       0       0       0
  4491 ;;      Temps:          2       0       0       0       0
  4492 ;;      Totals:         7       0       0       0       0
  4493 ;;Total ram usage:        7 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    1
  4496 ;; This function calls:
  4497 ;;		_I2C_Start
  4498 ;;		_I2C_Write_Byte
  4499 ;;		_I2C_Stop
  4500 ;; This function is called by:
  4501 ;;		_Set_DS1307_RTC_Time
  4502 ;;		_Set_DS1307_RTC_Date
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           psect	text588
  4506                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\DS1307.c"
  4507                           	line	57
  4508                           	global	__size_of_Write_Bytes_To_DS1307_RTC
  4509  0048                     	__size_of_Write_Bytes_To_DS1307_RTC	equ	__end_of_Write_Bytes_To_DS1307_RTC-_Write_Bytes
                                 _To_DS1307_RTC
  4510                           	
  4511  0012                     _Write_Bytes_To_DS1307_RTC:	
  4512                           	opt	stack 4
  4513                           ; Regs used in _Write_Bytes_To_DS1307_RTC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4514                           ;Write_Bytes_To_DS1307_RTC@Address stored from wreg
  4515                           	line	60
  4516  0012  00F5               	movwf	(Write_Bytes_To_DS1307_RTC@Address)
  4517                           	
  4518  0013                     l6403:	
  4519                           ;DS1307.c: 58: unsigned int i;
  4520                           ;DS1307.c: 60: I2C_Start();
  4521  0013  120A  158A  2623   	fcall	_I2C_Start
              120A  118A         
  4522                           	line	63
  4523                           ;DS1307.c: 63: while(I2C_Write_Byte(0xD0 + 0) == 1)
  4524  0018  281F               	goto	l6407
  4525                           	
  4526  0019                     l672:	
  4527                           	line	64
  4528                           	
  4529  0019                     l6405:	
  4530                           ;DS1307.c: 64: { I2C_Start(); }
  4531  0019  120A  158A  2623   	fcall	_I2C_Start
              120A  118A         
  4532  001E  281F               	goto	l6407
  4533                           	
  4534  001F                     l671:	
  4535                           	line	63
  4536                           	
  4537  001F                     l6407:	
  4538  001F  30D0               	movlw	(0D0h)
  4539  0020  120A  158A  2679   	fcall	_I2C_Write_Byte
              120A  118A         
  4540  0025  1803               	btfsc	status,0
  4541  0026  2828               	goto	u3051
  4542  0027  2829               	goto	u3050
  4543  0028                     u3051:
  4544  0028  2819               	goto	l6405
  4545  0029                     u3050:
  4546  0029  282A               	goto	l6409
  4547                           	
  4548  002A                     l673:	
  4549                           	line	66
  4550                           	
  4551  002A                     l6409:	
  4552                           ;DS1307.c: 66: I2C_Write_Byte(Address);
  4553  002A  0875               	movf	(Write_Bytes_To_DS1307_RTC@Address),w
  4554  002B  120A  158A  2679   	fcall	_I2C_Write_Byte
              120A  118A         
  4555                           	line	68
  4556                           	
  4557  0030                     l6411:	
  4558                           ;DS1307.c: 68: for(i=0;i<NoOfBytes;i++)
  4559  0030  01F6               	clrf	(Write_Bytes_To_DS1307_RTC@i)
  4560  0031  01F7               	clrf	(Write_Bytes_To_DS1307_RTC@i+1)
  4561  0032  2846               	goto	l6417
  4562                           	line	69
  4563                           	
  4564  0033                     l675:	
  4565                           	
  4566  0033                     l6413:	
  4567                           ;DS1307.c: 69: I2C_Write_Byte(pData[i]);
  4568  0033  0876               	movf	(Write_Bytes_To_DS1307_RTC@i),w
  4569  0034  0771               	addwf	(Write_Bytes_To_DS1307_RTC@pData),w
  4570  0035  00F3               	movwf	(??_Write_Bytes_To_DS1307_RTC+0)+0
  4571  0036  0873               	movf	0+(??_Write_Bytes_To_DS1307_RTC+0)+0,w
  4572  0037  0084               	movwf	fsr0
  4573  0038  1383               	bcf	status, 7	;select IRP bank0
  4574  0039  0800               	movf	indf,w
  4575  003A  120A  158A  2679   	fcall	_I2C_Write_Byte
              120A  118A         
  4576                           	line	68
  4577                           	
  4578  003F                     l6415:	
  4579  003F  3001               	movlw	low(01h)
  4580  0040  07F6               	addwf	(Write_Bytes_To_DS1307_RTC@i),f
  4581  0041  1803               	skipnc
  4582  0042  0AF7               	incf	(Write_Bytes_To_DS1307_RTC@i+1),f
  4583  0043  3000               	movlw	high(01h)
  4584  0044  07F7               	addwf	(Write_Bytes_To_DS1307_RTC@i+1),f
  4585  0045  2846               	goto	l6417
  4586                           	
  4587  0046                     l674:	
  4588                           	
  4589  0046                     l6417:	
  4590  0046  0872               	movf	(Write_Bytes_To_DS1307_RTC@NoOfBytes),w
  4591  0047  00F3               	movwf	(??_Write_Bytes_To_DS1307_RTC+0)+0
  4592  0048  01F4               	clrf	(??_Write_Bytes_To_DS1307_RTC+0)+0+1
  4593  0049  0874               	movf	1+(??_Write_Bytes_To_DS1307_RTC+0)+0,w
  4594  004A  0277               	subwf	(Write_Bytes_To_DS1307_RTC@i+1),w
  4595  004B  1D03               	skipz
  4596  004C  284F               	goto	u3065
  4597  004D  0873               	movf	0+(??_Write_Bytes_To_DS1307_RTC+0)+0,w
  4598  004E  0276               	subwf	(Write_Bytes_To_DS1307_RTC@i),w
  4599  004F                     u3065:
  4600  004F  1C03               	skipc
  4601  0050  2852               	goto	u3061
  4602  0051  2853               	goto	u3060
  4603  0052                     u3061:
  4604  0052  2833               	goto	l6413
  4605  0053                     u3060:
  4606  0053  2854               	goto	l6419
  4607                           	
  4608  0054                     l676:	
  4609                           	line	71
  4610                           	
  4611  0054                     l6419:	
  4612                           ;DS1307.c: 71: I2C_Stop();
  4613  0054  120A  158A  262E   	fcall	_I2C_Stop
              120A  118A         
  4614                           	line	72
  4615                           	
  4616  0059                     l677:	
  4617  0059  0008               	return
  4618                           	opt stack 0
  4619                           GLOBAL	__end_of_Write_Bytes_To_DS1307_RTC
  4620  005A                     	__end_of_Write_Bytes_To_DS1307_RTC:
  4621 ;; =============== function _Write_Bytes_To_DS1307_RTC ends ============
  4622                           
  4623                           	signat	_Write_Bytes_To_DS1307_RTC,12408
  4624                           	global	___awmod
  4625                           psect	text589,local,class=CODE,delta=2
  4626                           global __ptext589
  4627  0F9A                     __ptext589:
  4628                           
  4629 ;; *************** function ___awmod *****************
  4630 ;; Defined at:
  4631 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  divisor         2    0[COMMON] int 
  4634 ;;  dividend        2    2[COMMON] int 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  sign            1    6[COMMON] unsigned char 
  4637 ;;  counter         1    5[COMMON] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2    0[COMMON] int 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4647 ;;      Params:         4       0       0       0       0
  4648 ;;      Locals:         2       0       0       0       0
  4649 ;;      Temps:          1       0       0       0       0
  4650 ;;      Totals:         7       0       0       0       0
  4651 ;;Total ram usage:        7 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_Set_DS1307_RTC_Time
  4657 ;;		_Set_DS1307_RTC_Date
  4658 ;;		_DisplayTimeToLCD
  4659 ;;		_DisplayDateOnLCD
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           psect	text589
  4663                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  4664                           	line	5
  4665                           	global	__size_of___awmod
  4666  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  4667                           	
  4668  0F9A                     ___awmod:	
  4669                           	opt	stack 6
  4670                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4671                           	line	8
  4672                           	
  4673  0F9A                     l6369:	
  4674  0F9A  01F6               	clrf	(___awmod@sign)
  4675                           	line	9
  4676  0F9B  1FF3               	btfss	(___awmod@dividend+1),7
  4677  0F9C  2F9E               	goto	u2961
  4678  0F9D  2F9F               	goto	u2960
  4679  0F9E                     u2961:
  4680  0F9E  2FA8               	goto	l6373
  4681  0F9F                     u2960:
  4682                           	line	10
  4683                           	
  4684  0F9F                     l6371:	
  4685  0F9F  09F2               	comf	(___awmod@dividend),f
  4686  0FA0  09F3               	comf	(___awmod@dividend+1),f
  4687  0FA1  0AF2               	incf	(___awmod@dividend),f
  4688  0FA2  1903               	skipnz
  4689  0FA3  0AF3               	incf	(___awmod@dividend+1),f
  4690                           	line	11
  4691  0FA4  01F6               	clrf	(___awmod@sign)
  4692  0FA5  1403               	bsf	status,0
  4693  0FA6  0DF6               	rlf	(___awmod@sign),f
  4694  0FA7  2FA8               	goto	l6373
  4695                           	line	12
  4696                           	
  4697  0FA8                     l4273:	
  4698                           	line	13
  4699                           	
  4700  0FA8                     l6373:	
  4701  0FA8  1FF1               	btfss	(___awmod@divisor+1),7
  4702  0FA9  2FAB               	goto	u2971
  4703  0FAA  2FAC               	goto	u2970
  4704  0FAB                     u2971:
  4705  0FAB  2FB2               	goto	l6377
  4706  0FAC                     u2970:
  4707                           	line	14
  4708                           	
  4709  0FAC                     l6375:	
  4710  0FAC  09F0               	comf	(___awmod@divisor),f
  4711  0FAD  09F1               	comf	(___awmod@divisor+1),f
  4712  0FAE  0AF0               	incf	(___awmod@divisor),f
  4713  0FAF  1903               	skipnz
  4714  0FB0  0AF1               	incf	(___awmod@divisor+1),f
  4715  0FB1  2FB2               	goto	l6377
  4716                           	
  4717  0FB2                     l4274:	
  4718                           	line	15
  4719                           	
  4720  0FB2                     l6377:	
  4721  0FB2  0871               	movf	(___awmod@divisor+1),w
  4722  0FB3  0470               	iorwf	(___awmod@divisor),w
  4723  0FB4  1903               	skipnz
  4724  0FB5  2FB7               	goto	u2981
  4725  0FB6  2FB8               	goto	u2980
  4726  0FB7                     u2981:
  4727  0FB7  2FEE               	goto	l6395
  4728  0FB8                     u2980:
  4729                           	line	16
  4730                           	
  4731  0FB8                     l6379:	
  4732  0FB8  01F5               	clrf	(___awmod@counter)
  4733  0FB9  1403               	bsf	status,0
  4734  0FBA  0DF5               	rlf	(___awmod@counter),f
  4735                           	line	17
  4736  0FBB  2FC8               	goto	l6385
  4737                           	
  4738  0FBC                     l4277:	
  4739                           	line	18
  4740                           	
  4741  0FBC                     l6381:	
  4742  0FBC  3001               	movlw	01h
  4743                           	
  4744  0FBD                     u2995:
  4745  0FBD  1003               	clrc
  4746  0FBE  0DF0               	rlf	(___awmod@divisor),f
  4747  0FBF  0DF1               	rlf	(___awmod@divisor+1),f
  4748  0FC0  3EFF               	addlw	-1
  4749  0FC1  1D03               	skipz
  4750  0FC2  2FBD               	goto	u2995
  4751                           	line	19
  4752                           	
  4753  0FC3                     l6383:	
  4754  0FC3  3001               	movlw	(01h)
  4755  0FC4  00F4               	movwf	(??___awmod+0)+0
  4756  0FC5  0874               	movf	(??___awmod+0)+0,w
  4757  0FC6  07F5               	addwf	(___awmod@counter),f
  4758  0FC7  2FC8               	goto	l6385
  4759                           	line	20
  4760                           	
  4761  0FC8                     l4276:	
  4762                           	line	17
  4763                           	
  4764  0FC8                     l6385:	
  4765  0FC8  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  4766  0FC9  2FCB               	goto	u3001
  4767  0FCA  2FCC               	goto	u3000
  4768  0FCB                     u3001:
  4769  0FCB  2FBC               	goto	l6381
  4770  0FCC                     u3000:
  4771  0FCC  2FCE               	goto	l6387
  4772                           	
  4773  0FCD                     l4278:	
  4774  0FCD  2FCE               	goto	l6387
  4775                           	line	21
  4776                           	
  4777  0FCE                     l4279:	
  4778                           	line	22
  4779                           	
  4780  0FCE                     l6387:	
  4781  0FCE  0871               	movf	(___awmod@divisor+1),w
  4782  0FCF  0273               	subwf	(___awmod@dividend+1),w
  4783  0FD0  1D03               	skipz
  4784  0FD1  2FD4               	goto	u3015
  4785  0FD2  0870               	movf	(___awmod@divisor),w
  4786  0FD3  0272               	subwf	(___awmod@dividend),w
  4787  0FD4                     u3015:
  4788  0FD4  1C03               	skipc
  4789  0FD5  2FD7               	goto	u3011
  4790  0FD6  2FD8               	goto	u3010
  4791  0FD7                     u3011:
  4792  0FD7  2FDF               	goto	l6391
  4793  0FD8                     u3010:
  4794                           	line	23
  4795                           	
  4796  0FD8                     l6389:	
  4797  0FD8  0870               	movf	(___awmod@divisor),w
  4798  0FD9  02F2               	subwf	(___awmod@dividend),f
  4799  0FDA  0871               	movf	(___awmod@divisor+1),w
  4800  0FDB  1C03               	skipc
  4801  0FDC  03F3               	decf	(___awmod@dividend+1),f
  4802  0FDD  02F3               	subwf	(___awmod@dividend+1),f
  4803  0FDE  2FDF               	goto	l6391
  4804                           	
  4805  0FDF                     l4280:	
  4806                           	line	24
  4807                           	
  4808  0FDF                     l6391:	
  4809  0FDF  3001               	movlw	01h
  4810                           	
  4811  0FE0                     u3025:
  4812  0FE0  1003               	clrc
  4813  0FE1  0CF1               	rrf	(___awmod@divisor+1),f
  4814  0FE2  0CF0               	rrf	(___awmod@divisor),f
  4815  0FE3  3EFF               	addlw	-1
  4816  0FE4  1D03               	skipz
  4817  0FE5  2FE0               	goto	u3025
  4818                           	line	25
  4819                           	
  4820  0FE6                     l6393:	
  4821  0FE6  3001               	movlw	low(01h)
  4822  0FE7  02F5               	subwf	(___awmod@counter),f
  4823  0FE8  1D03               	btfss	status,2
  4824  0FE9  2FEB               	goto	u3031
  4825  0FEA  2FEC               	goto	u3030
  4826  0FEB                     u3031:
  4827  0FEB  2FCE               	goto	l6387
  4828  0FEC                     u3030:
  4829  0FEC  2FEE               	goto	l6395
  4830                           	
  4831  0FED                     l4281:	
  4832  0FED  2FEE               	goto	l6395
  4833                           	line	26
  4834                           	
  4835  0FEE                     l4275:	
  4836                           	line	27
  4837                           	
  4838  0FEE                     l6395:	
  4839  0FEE  0876               	movf	(___awmod@sign),w
  4840  0FEF  1D03               	skipz
  4841  0FF0  2FF2               	goto	u3040
  4842  0FF1  2FF8               	goto	l6399
  4843  0FF2                     u3040:
  4844                           	line	28
  4845                           	
  4846  0FF2                     l6397:	
  4847  0FF2  09F2               	comf	(___awmod@dividend),f
  4848  0FF3  09F3               	comf	(___awmod@dividend+1),f
  4849  0FF4  0AF2               	incf	(___awmod@dividend),f
  4850  0FF5  1903               	skipnz
  4851  0FF6  0AF3               	incf	(___awmod@dividend+1),f
  4852  0FF7  2FF8               	goto	l6399
  4853                           	
  4854  0FF8                     l4282:	
  4855                           	line	29
  4856                           	
  4857  0FF8                     l6399:	
  4858  0FF8  0873               	movf	(___awmod@dividend+1),w
  4859  0FF9  01F1               	clrf	(?___awmod+1)
  4860  0FFA  07F1               	addwf	(?___awmod+1)
  4861  0FFB  0872               	movf	(___awmod@dividend),w
  4862  0FFC  01F0               	clrf	(?___awmod)
  4863  0FFD  07F0               	addwf	(?___awmod)
  4864                           
  4865  0FFE  2FFF               	goto	l4283
  4866                           	
  4867  0FFF                     l6401:	
  4868                           	line	30
  4869                           	
  4870  0FFF                     l4283:	
  4871  0FFF  0008               	return
  4872                           	opt stack 0
  4873                           GLOBAL	__end_of___awmod
  4874  1000                     	__end_of___awmod:
  4875 ;; =============== function ___awmod ends ============
  4876                           
  4877                           	signat	___awmod,8314
  4878                           	global	___awdiv
  4879                           psect	text590,local,class=CODE,delta=2
  4880                           global __ptext590
  4881  0133                     __ptext590:
  4882                           
  4883 ;; *************** function ___awdiv *****************
  4884 ;; Defined at:
  4885 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  divisor         2    0[COMMON] int 
  4888 ;;  dividend        2    2[COMMON] int 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  quotient        2    7[COMMON] int 
  4891 ;;  sign            1    6[COMMON] unsigned char 
  4892 ;;  counter         1    5[COMMON] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  2    0[COMMON] int 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4902 ;;      Params:         4       0       0       0       0
  4903 ;;      Locals:         4       0       0       0       0
  4904 ;;      Temps:          1       0       0       0       0
  4905 ;;      Totals:         9       0       0       0       0
  4906 ;;Total ram usage:        9 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_Set_DS1307_RTC_Time
  4912 ;;		_Set_DS1307_RTC_Date
  4913 ;;		_DisplayTimeToLCD
  4914 ;;		_DisplayDateOnLCD
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           psect	text590
  4918                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  4919                           	line	5
  4920                           	global	__size_of___awdiv
  4921  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4922                           	
  4923  0133                     ___awdiv:	
  4924                           	opt	stack 6
  4925                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4926                           	line	9
  4927                           	
  4928  0133                     l6329:	
  4929  0133  01F6               	clrf	(___awdiv@sign)
  4930                           	line	10
  4931  0134  1FF1               	btfss	(___awdiv@divisor+1),7
  4932  0135  2937               	goto	u2861
  4933  0136  2938               	goto	u2860
  4934  0137                     u2861:
  4935  0137  2941               	goto	l6333
  4936  0138                     u2860:
  4937                           	line	11
  4938                           	
  4939  0138                     l6331:	
  4940  0138  09F0               	comf	(___awdiv@divisor),f
  4941  0139  09F1               	comf	(___awdiv@divisor+1),f
  4942  013A  0AF0               	incf	(___awdiv@divisor),f
  4943  013B  1903               	skipnz
  4944  013C  0AF1               	incf	(___awdiv@divisor+1),f
  4945                           	line	12
  4946  013D  01F6               	clrf	(___awdiv@sign)
  4947  013E  1403               	bsf	status,0
  4948  013F  0DF6               	rlf	(___awdiv@sign),f
  4949  0140  2941               	goto	l6333
  4950                           	line	13
  4951                           	
  4952  0141                     l4205:	
  4953                           	line	14
  4954                           	
  4955  0141                     l6333:	
  4956  0141  1FF3               	btfss	(___awdiv@dividend+1),7
  4957  0142  2944               	goto	u2871
  4958  0143  2945               	goto	u2870
  4959  0144                     u2871:
  4960  0144  294F               	goto	l6339
  4961  0145                     u2870:
  4962                           	line	15
  4963                           	
  4964  0145                     l6335:	
  4965  0145  09F2               	comf	(___awdiv@dividend),f
  4966  0146  09F3               	comf	(___awdiv@dividend+1),f
  4967  0147  0AF2               	incf	(___awdiv@dividend),f
  4968  0148  1903               	skipnz
  4969  0149  0AF3               	incf	(___awdiv@dividend+1),f
  4970                           	line	16
  4971                           	
  4972  014A                     l6337:	
  4973  014A  3001               	movlw	(01h)
  4974  014B  00F4               	movwf	(??___awdiv+0)+0
  4975  014C  0874               	movf	(??___awdiv+0)+0,w
  4976  014D  06F6               	xorwf	(___awdiv@sign),f
  4977  014E  294F               	goto	l6339
  4978                           	line	17
  4979                           	
  4980  014F                     l4206:	
  4981                           	line	18
  4982                           	
  4983  014F                     l6339:	
  4984  014F  01F7               	clrf	(___awdiv@quotient)
  4985  0150  01F8               	clrf	(___awdiv@quotient+1)
  4986                           	line	19
  4987                           	
  4988  0151                     l6341:	
  4989  0151  0871               	movf	(___awdiv@divisor+1),w
  4990  0152  0470               	iorwf	(___awdiv@divisor),w
  4991  0153  1903               	skipnz
  4992  0154  2956               	goto	u2881
  4993  0155  2957               	goto	u2880
  4994  0156                     u2881:
  4995  0156  2995               	goto	l6361
  4996  0157                     u2880:
  4997                           	line	20
  4998                           	
  4999  0157                     l6343:	
  5000  0157  01F5               	clrf	(___awdiv@counter)
  5001  0158  1403               	bsf	status,0
  5002  0159  0DF5               	rlf	(___awdiv@counter),f
  5003                           	line	21
  5004  015A  2967               	goto	l6349
  5005                           	
  5006  015B                     l4209:	
  5007                           	line	22
  5008                           	
  5009  015B                     l6345:	
  5010  015B  3001               	movlw	01h
  5011                           	
  5012  015C                     u2895:
  5013  015C  1003               	clrc
  5014  015D  0DF0               	rlf	(___awdiv@divisor),f
  5015  015E  0DF1               	rlf	(___awdiv@divisor+1),f
  5016  015F  3EFF               	addlw	-1
  5017  0160  1D03               	skipz
  5018  0161  295C               	goto	u2895
  5019                           	line	23
  5020                           	
  5021  0162                     l6347:	
  5022  0162  3001               	movlw	(01h)
  5023  0163  00F4               	movwf	(??___awdiv+0)+0
  5024  0164  0874               	movf	(??___awdiv+0)+0,w
  5025  0165  07F5               	addwf	(___awdiv@counter),f
  5026  0166  2967               	goto	l6349
  5027                           	line	24
  5028                           	
  5029  0167                     l4208:	
  5030                           	line	21
  5031                           	
  5032  0167                     l6349:	
  5033  0167  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  5034  0168  296A               	goto	u2901
  5035  0169  296B               	goto	u2900
  5036  016A                     u2901:
  5037  016A  295B               	goto	l6345
  5038  016B                     u2900:
  5039  016B  296D               	goto	l6351
  5040                           	
  5041  016C                     l4210:	
  5042  016C  296D               	goto	l6351
  5043                           	line	25
  5044                           	
  5045  016D                     l4211:	
  5046                           	line	26
  5047                           	
  5048  016D                     l6351:	
  5049  016D  3001               	movlw	01h
  5050                           	
  5051  016E                     u2915:
  5052  016E  1003               	clrc
  5053  016F  0DF7               	rlf	(___awdiv@quotient),f
  5054  0170  0DF8               	rlf	(___awdiv@quotient+1),f
  5055  0171  3EFF               	addlw	-1
  5056  0172  1D03               	skipz
  5057  0173  296E               	goto	u2915
  5058                           	line	27
  5059  0174  0871               	movf	(___awdiv@divisor+1),w
  5060  0175  0273               	subwf	(___awdiv@dividend+1),w
  5061  0176  1D03               	skipz
  5062  0177  297A               	goto	u2925
  5063  0178  0870               	movf	(___awdiv@divisor),w
  5064  0179  0272               	subwf	(___awdiv@dividend),w
  5065  017A                     u2925:
  5066  017A  1C03               	skipc
  5067  017B  297D               	goto	u2921
  5068  017C  297E               	goto	u2920
  5069  017D                     u2921:
  5070  017D  2986               	goto	l6357
  5071  017E                     u2920:
  5072                           	line	28
  5073                           	
  5074  017E                     l6353:	
  5075  017E  0870               	movf	(___awdiv@divisor),w
  5076  017F  02F2               	subwf	(___awdiv@dividend),f
  5077  0180  0871               	movf	(___awdiv@divisor+1),w
  5078  0181  1C03               	skipc
  5079  0182  03F3               	decf	(___awdiv@dividend+1),f
  5080  0183  02F3               	subwf	(___awdiv@dividend+1),f
  5081                           	line	29
  5082                           	
  5083  0184                     l6355:	
  5084  0184  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5085  0185  2986               	goto	l6357
  5086                           	line	30
  5087                           	
  5088  0186                     l4212:	
  5089                           	line	31
  5090                           	
  5091  0186                     l6357:	
  5092  0186  3001               	movlw	01h
  5093                           	
  5094  0187                     u2935:
  5095  0187  1003               	clrc
  5096  0188  0CF1               	rrf	(___awdiv@divisor+1),f
  5097  0189  0CF0               	rrf	(___awdiv@divisor),f
  5098  018A  3EFF               	addlw	-1
  5099  018B  1D03               	skipz
  5100  018C  2987               	goto	u2935
  5101                           	line	32
  5102                           	
  5103  018D                     l6359:	
  5104  018D  3001               	movlw	low(01h)
  5105  018E  02F5               	subwf	(___awdiv@counter),f
  5106  018F  1D03               	btfss	status,2
  5107  0190  2992               	goto	u2941
  5108  0191  2993               	goto	u2940
  5109  0192                     u2941:
  5110  0192  296D               	goto	l6351
  5111  0193                     u2940:
  5112  0193  2995               	goto	l6361
  5113                           	
  5114  0194                     l4213:	
  5115  0194  2995               	goto	l6361
  5116                           	line	33
  5117                           	
  5118  0195                     l4207:	
  5119                           	line	34
  5120                           	
  5121  0195                     l6361:	
  5122  0195  0876               	movf	(___awdiv@sign),w
  5123  0196  1D03               	skipz
  5124  0197  2999               	goto	u2950
  5125  0198  299F               	goto	l6365
  5126  0199                     u2950:
  5127                           	line	35
  5128                           	
  5129  0199                     l6363:	
  5130  0199  09F7               	comf	(___awdiv@quotient),f
  5131  019A  09F8               	comf	(___awdiv@quotient+1),f
  5132  019B  0AF7               	incf	(___awdiv@quotient),f
  5133  019C  1903               	skipnz
  5134  019D  0AF8               	incf	(___awdiv@quotient+1),f
  5135  019E  299F               	goto	l6365
  5136                           	
  5137  019F                     l4214:	
  5138                           	line	36
  5139                           	
  5140  019F                     l6365:	
  5141  019F  0878               	movf	(___awdiv@quotient+1),w
  5142  01A0  01F1               	clrf	(?___awdiv+1)
  5143  01A1  07F1               	addwf	(?___awdiv+1)
  5144  01A2  0877               	movf	(___awdiv@quotient),w
  5145  01A3  01F0               	clrf	(?___awdiv)
  5146  01A4  07F0               	addwf	(?___awdiv)
  5147                           
  5148  01A5  29A6               	goto	l4215
  5149                           	
  5150  01A6                     l6367:	
  5151                           	line	37
  5152                           	
  5153  01A6                     l4215:	
  5154  01A6  0008               	return
  5155                           	opt stack 0
  5156                           GLOBAL	__end_of___awdiv
  5157  01A7                     	__end_of___awdiv:
  5158 ;; =============== function ___awdiv ends ============
  5159                           
  5160                           	signat	___awdiv,8314
  5161                           	global	___bmul
  5162                           psect	text591,local,class=CODE,delta=2
  5163                           global __ptext591
  5164  0E90                     __ptext591:
  5165                           
  5166 ;; *************** function ___bmul *****************
  5167 ;; Defined at:
  5168 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  multiplier      1    wreg     unsigned char 
  5171 ;;  multiplicand    1    0[COMMON] unsigned char 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  multiplier      1    3[COMMON] unsigned char 
  5174 ;;  product         1    2[COMMON] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      unsigned char 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5184 ;;      Params:         1       0       0       0       0
  5185 ;;      Locals:         2       0       0       0       0
  5186 ;;      Temps:          1       0       0       0       0
  5187 ;;      Totals:         4       0       0       0       0
  5188 ;;Total ram usage:        4 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_Get_DS1307_RTC_Time
  5194 ;;		_Get_DS1307_RTC_Date
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           psect	text591
  5198                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  5199                           	line	3
  5200                           	global	__size_of___bmul
  5201  0018                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  5202                           	
  5203  0E90                     ___bmul:	
  5204                           	opt	stack 6
  5205                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5206                           ;___bmul@multiplier stored from wreg
  5207  0E90  00F3               	movwf	(___bmul@multiplier)
  5208                           	line	4
  5209                           	
  5210  0E91                     l6315:	
  5211  0E91  01F2               	clrf	(___bmul@product)
  5212                           	line	6
  5213                           	
  5214  0E92                     l4059:	
  5215                           	line	7
  5216  0E92  1C73               	btfss	(___bmul@multiplier),(0)&7
  5217  0E93  2E95               	goto	u2841
  5218  0E94  2E96               	goto	u2840
  5219  0E95                     u2841:
  5220  0E95  2E9B               	goto	l6319
  5221  0E96                     u2840:
  5222                           	line	8
  5223                           	
  5224  0E96                     l6317:	
  5225  0E96  0870               	movf	(___bmul@multiplicand),w
  5226  0E97  00F1               	movwf	(??___bmul+0)+0
  5227  0E98  0871               	movf	(??___bmul+0)+0,w
  5228  0E99  07F2               	addwf	(___bmul@product),f
  5229  0E9A  2E9B               	goto	l6319
  5230                           	
  5231  0E9B                     l4060:	
  5232                           	line	9
  5233                           	
  5234  0E9B                     l6319:	
  5235  0E9B  1003               	clrc
  5236  0E9C  0DF0               	rlf	(___bmul@multiplicand),f
  5237                           
  5238                           	line	10
  5239                           	
  5240  0E9D                     l6321:	
  5241  0E9D  1003               	clrc
  5242  0E9E  0CF3               	rrf	(___bmul@multiplier),f
  5243                           
  5244                           	line	11
  5245                           	
  5246  0E9F                     l6323:	
  5247  0E9F  08F3               	movf	(___bmul@multiplier),f
  5248  0EA0  1D03               	skipz
  5249  0EA1  2EA3               	goto	u2851
  5250  0EA2  2EA4               	goto	u2850
  5251  0EA3                     u2851:
  5252  0EA3  2E92               	goto	l4059
  5253  0EA4                     u2850:
  5254  0EA4  2EA5               	goto	l6325
  5255                           	
  5256  0EA5                     l4061:	
  5257                           	line	12
  5258                           	
  5259  0EA5                     l6325:	
  5260  0EA5  0872               	movf	(___bmul@product),w
  5261  0EA6  2EA7               	goto	l4062
  5262                           	
  5263  0EA7                     l6327:	
  5264                           	line	13
  5265                           	
  5266  0EA7                     l4062:	
  5267  0EA7  0008               	return
  5268                           	opt stack 0
  5269                           GLOBAL	__end_of___bmul
  5270  0EA8                     	__end_of___bmul:
  5271 ;; =============== function ___bmul ends ============
  5272                           
  5273                           	signat	___bmul,8313
  5274                           	global	_InitI2C
  5275                           psect	text592,local,class=CODE,delta=2
  5276                           global __ptext592
  5277  0005                     __ptext592:
  5278                           
  5279 ;; *************** function _InitI2C *****************
  5280 ;; Defined at:
  5281 ;;		line 7 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		wreg
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5295 ;;      Params:         0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0
  5298 ;;      Totals:         0       0       0       0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_main
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           psect	text592
  5308                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5309                           	line	7
  5310                           	global	__size_of_InitI2C
  5311  000D                     	__size_of_InitI2C	equ	__end_of_InitI2C-_InitI2C
  5312                           	
  5313  0005                     _InitI2C:	
  5314                           	opt	stack 7
  5315                           ; Regs used in _InitI2C: [wreg]
  5316                           	line	8
  5317                           	
  5318  0005                     l4967:	
  5319                           ;I2C.c: 8: TRISC4 = 1;
  5320  0005  1683               	bsf	status, 5	;RP0=1, select bank1
  5321  0006  1303               	bcf	status, 6	;RP1=0, select bank1
  5322  0007  1607               	bsf	(1084/8)^080h,(1084)&7
  5323                           	line	9
  5324                           ;I2C.c: 9: TRISC3 = 1;
  5325  0008  1587               	bsf	(1083/8)^080h,(1083)&7
  5326                           	line	11
  5327                           	
  5328  0009                     l4969:	
  5329                           ;I2C.c: 11: SSPADD = ((20000000/4000)/100) - 1;
  5330  0009  3031               	movlw	(031h)
  5331  000A  0093               	movwf	(147)^080h	;volatile
  5332                           	line	12
  5333                           ;I2C.c: 12: SSPSTAT = 0x80;
  5334  000B  3080               	movlw	(080h)
  5335  000C  0094               	movwf	(148)^080h	;volatile
  5336                           	line	13
  5337                           ;I2C.c: 13: SSPCON = 0x28;
  5338  000D  3028               	movlw	(028h)
  5339  000E  1283               	bcf	status, 5	;RP0=0, select bank0
  5340  000F  1303               	bcf	status, 6	;RP1=0, select bank0
  5341  0010  0094               	movwf	(20)	;volatile
  5342                           	line	14
  5343                           	
  5344  0011                     l1348:	
  5345  0011  0008               	return
  5346                           	opt stack 0
  5347                           GLOBAL	__end_of_InitI2C
  5348  0012                     	__end_of_InitI2C:
  5349 ;; =============== function _InitI2C ends ============
  5350                           
  5351                           	signat	_InitI2C,88
  5352                           	global	_I2C_Send_ACK
  5353                           psect	text593,local,class=CODE,delta=2
  5354                           global __ptext593
  5355  0E50                     __ptext593:
  5356                           
  5357 ;; *************** function _I2C_Send_ACK *****************
  5358 ;; Defined at:
  5359 ;;		line 47 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;		None               void
  5366 ;; Registers used:
  5367 ;;		None
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5373 ;;      Params:         0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0
  5376 ;;      Totals:         0       0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_Read_Bytes_From_DS1307_RTC
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           psect	text593
  5386                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5387                           	line	47
  5388                           	global	__size_of_I2C_Send_ACK
  5389  000C                     	__size_of_I2C_Send_ACK	equ	__end_of_I2C_Send_ACK-_I2C_Send_ACK
  5390                           	
  5391  0E50                     _I2C_Send_ACK:	
  5392                           	opt	stack 5
  5393                           ; Regs used in _I2C_Send_ACK: []
  5394                           	line	48
  5395                           	
  5396  0E50                     l6313:	
  5397                           ;I2C.c: 48: ACKDT = 0;
  5398  0E50  1683               	bsf	status, 5	;RP0=1, select bank1
  5399  0E51  1303               	bcf	status, 6	;RP1=0, select bank1
  5400  0E52  1291               	bcf	(1165/8)^080h,(1165)&7
  5401                           	line	49
  5402                           ;I2C.c: 49: ACKEN = 1;
  5403  0E53  1611               	bsf	(1164/8)^080h,(1164)&7
  5404                           	line	50
  5405                           ;I2C.c: 50: while(!SSPIF);
  5406  0E54  2E55               	goto	l1369
  5407                           	
  5408  0E55                     l1370:	
  5409                           	
  5410  0E55                     l1369:	
  5411  0E55  1283               	bcf	status, 5	;RP0=0, select bank0
  5412  0E56  1D8C               	btfss	(99/8),(99)&7
  5413  0E57  2E59               	goto	u2831
  5414  0E58  2E5A               	goto	u2830
  5415  0E59                     u2831:
  5416  0E59  2E55               	goto	l1369
  5417  0E5A                     u2830:
  5418                           	
  5419  0E5A                     l1371:	
  5420                           	line	51
  5421                           ;I2C.c: 51: SSPIF = 0;
  5422  0E5A  118C               	bcf	(99/8),(99)&7
  5423                           	line	52
  5424                           	
  5425  0E5B                     l1372:	
  5426  0E5B  0008               	return
  5427                           	opt stack 0
  5428                           GLOBAL	__end_of_I2C_Send_ACK
  5429  0E5C                     	__end_of_I2C_Send_ACK:
  5430 ;; =============== function _I2C_Send_ACK ends ============
  5431                           
  5432                           	signat	_I2C_Send_ACK,88
  5433                           	global	_I2C_Send_NACK
  5434                           psect	text594,local,class=CODE,delta=2
  5435                           global __ptext594
  5436  0E44                     __ptext594:
  5437                           
  5438 ;; *************** function _I2C_Send_NACK *****************
  5439 ;; Defined at:
  5440 ;;		line 57 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;		None               void
  5447 ;; Registers used:
  5448 ;;		None
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5454 ;;      Params:         0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0
  5457 ;;      Totals:         0       0       0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_Read_Bytes_From_DS1307_RTC
  5464 ;;		_Read_Byte_From_DS1307_RTC
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           psect	text594
  5468                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5469                           	line	57
  5470                           	global	__size_of_I2C_Send_NACK
  5471  000C                     	__size_of_I2C_Send_NACK	equ	__end_of_I2C_Send_NACK-_I2C_Send_NACK
  5472                           	
  5473  0E44                     _I2C_Send_NACK:	
  5474                           	opt	stack 5
  5475                           ; Regs used in _I2C_Send_NACK: []
  5476                           	line	58
  5477                           	
  5478  0E44                     l6311:	
  5479                           ;I2C.c: 58: ACKDT = 1;
  5480  0E44  1683               	bsf	status, 5	;RP0=1, select bank1
  5481  0E45  1303               	bcf	status, 6	;RP1=0, select bank1
  5482  0E46  1691               	bsf	(1165/8)^080h,(1165)&7
  5483                           	line	59
  5484                           ;I2C.c: 59: ACKEN = 1;
  5485  0E47  1611               	bsf	(1164/8)^080h,(1164)&7
  5486                           	line	60
  5487                           ;I2C.c: 60: while(!SSPIF);
  5488  0E48  2E49               	goto	l1375
  5489                           	
  5490  0E49                     l1376:	
  5491                           	
  5492  0E49                     l1375:	
  5493  0E49  1283               	bcf	status, 5	;RP0=0, select bank0
  5494  0E4A  1D8C               	btfss	(99/8),(99)&7
  5495  0E4B  2E4D               	goto	u2821
  5496  0E4C  2E4E               	goto	u2820
  5497  0E4D                     u2821:
  5498  0E4D  2E49               	goto	l1375
  5499  0E4E                     u2820:
  5500                           	
  5501  0E4E                     l1377:	
  5502                           	line	61
  5503                           ;I2C.c: 61: SSPIF = 0;
  5504  0E4E  118C               	bcf	(99/8),(99)&7
  5505                           	line	62
  5506                           	
  5507  0E4F                     l1378:	
  5508  0E4F  0008               	return
  5509                           	opt stack 0
  5510                           GLOBAL	__end_of_I2C_Send_NACK
  5511  0E50                     	__end_of_I2C_Send_NACK:
  5512 ;; =============== function _I2C_Send_NACK ends ============
  5513                           
  5514                           	signat	_I2C_Send_NACK,88
  5515                           	global	_I2C_Read_Byte
  5516                           psect	text595,local,class=CODE,delta=2
  5517                           global __ptext595
  5518  0E5C                     __ptext595:
  5519                           
  5520 ;; *************** function _I2C_Read_Byte *****************
  5521 ;; Defined at:
  5522 ;;		line 78 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      unsigned char 
  5529 ;; Registers used:
  5530 ;;		wreg
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0
  5539 ;;      Totals:         0       0       0       0       0
  5540 ;;Total ram usage:        0 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_Read_Bytes_From_DS1307_RTC
  5546 ;;		_Read_Byte_From_DS1307_RTC
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           psect	text595
  5550                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5551                           	line	78
  5552                           	global	__size_of_I2C_Read_Byte
  5553  000D                     	__size_of_I2C_Read_Byte	equ	__end_of_I2C_Read_Byte-_I2C_Read_Byte
  5554                           	
  5555  0E5C                     _I2C_Read_Byte:	
  5556                           	opt	stack 5
  5557                           ; Regs used in _I2C_Read_Byte: [wreg]
  5558                           	line	79
  5559                           	
  5560  0E5C                     l6305:	
  5561                           ;I2C.c: 79: RCEN = 1;
  5562  0E5C  1683               	bsf	status, 5	;RP0=1, select bank1
  5563  0E5D  1303               	bcf	status, 6	;RP1=0, select bank1
  5564  0E5E  1591               	bsf	(1163/8)^080h,(1163)&7
  5565                           	line	80
  5566                           ;I2C.c: 80: while(!SSPIF);
  5567  0E5F  2E60               	goto	l1387
  5568                           	
  5569  0E60                     l1388:	
  5570                           	
  5571  0E60                     l1387:	
  5572  0E60  1283               	bcf	status, 5	;RP0=0, select bank0
  5573  0E61  1D8C               	btfss	(99/8),(99)&7
  5574  0E62  2E64               	goto	u2811
  5575  0E63  2E65               	goto	u2810
  5576  0E64                     u2811:
  5577  0E64  2E60               	goto	l1387
  5578  0E65                     u2810:
  5579                           	
  5580  0E65                     l1389:	
  5581                           	line	81
  5582                           ;I2C.c: 81: SSPIF = 0;
  5583  0E65  118C               	bcf	(99/8),(99)&7
  5584                           	line	83
  5585                           	
  5586  0E66                     l6307:	
  5587                           ;I2C.c: 83: return SSPBUF;
  5588  0E66  0813               	movf	(19),w	;volatile
  5589  0E67  2E68               	goto	l1390
  5590                           	
  5591  0E68                     l6309:	
  5592                           	line	84
  5593                           	
  5594  0E68                     l1390:	
  5595  0E68  0008               	return
  5596                           	opt stack 0
  5597                           GLOBAL	__end_of_I2C_Read_Byte
  5598  0E69                     	__end_of_I2C_Read_Byte:
  5599 ;; =============== function _I2C_Read_Byte ends ============
  5600                           
  5601                           	signat	_I2C_Read_Byte,89
  5602                           	global	_I2C_ReStart
  5603                           psect	text596,local,class=CODE,delta=2
  5604                           global __ptext596
  5605  0E39                     __ptext596:
  5606                           
  5607 ;; *************** function _I2C_ReStart *****************
  5608 ;; Defined at:
  5609 ;;		line 28 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;		None               void
  5616 ;; Registers used:
  5617 ;;		None
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5623 ;;      Params:         0       0       0       0       0
  5624 ;;      Locals:         0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0
  5626 ;;      Totals:         0       0       0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_Read_Bytes_From_DS1307_RTC
  5633 ;;		_Read_Byte_From_DS1307_RTC
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           psect	text596
  5637                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5638                           	line	28
  5639                           	global	__size_of_I2C_ReStart
  5640  000B                     	__size_of_I2C_ReStart	equ	__end_of_I2C_ReStart-_I2C_ReStart
  5641                           	
  5642  0E39                     _I2C_ReStart:	
  5643                           	opt	stack 5
  5644                           ; Regs used in _I2C_ReStart: []
  5645                           	line	29
  5646                           	
  5647  0E39                     l6303:	
  5648                           ;I2C.c: 29: RSEN = 1;
  5649  0E39  1683               	bsf	status, 5	;RP0=1, select bank1
  5650  0E3A  1303               	bcf	status, 6	;RP1=0, select bank1
  5651  0E3B  1491               	bsf	(1161/8)^080h,(1161)&7
  5652                           	line	30
  5653                           ;I2C.c: 30: while(!SSPIF);
  5654  0E3C  2E3D               	goto	l1357
  5655                           	
  5656  0E3D                     l1358:	
  5657                           	
  5658  0E3D                     l1357:	
  5659  0E3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5660  0E3E  1D8C               	btfss	(99/8),(99)&7
  5661  0E3F  2E41               	goto	u2801
  5662  0E40  2E42               	goto	u2800
  5663  0E41                     u2801:
  5664  0E41  2E3D               	goto	l1357
  5665  0E42                     u2800:
  5666                           	
  5667  0E42                     l1359:	
  5668                           	line	31
  5669                           ;I2C.c: 31: SSPIF = 0;
  5670  0E42  118C               	bcf	(99/8),(99)&7
  5671                           	line	32
  5672                           	
  5673  0E43                     l1360:	
  5674  0E43  0008               	return
  5675                           	opt stack 0
  5676                           GLOBAL	__end_of_I2C_ReStart
  5677  0E44                     	__end_of_I2C_ReStart:
  5678 ;; =============== function _I2C_ReStart ends ============
  5679                           
  5680                           	signat	_I2C_ReStart,88
  5681                           	global	_I2C_Stop
  5682                           psect	text597,local,class=CODE,delta=2
  5683                           global __ptext597
  5684  0E2E                     __ptext597:
  5685                           
  5686 ;; *************** function _I2C_Stop *****************
  5687 ;; Defined at:
  5688 ;;		line 37 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;		None
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;		None               void
  5695 ;; Registers used:
  5696 ;;		None
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5702 ;;      Params:         0       0       0       0       0
  5703 ;;      Locals:         0       0       0       0       0
  5704 ;;      Temps:          0       0       0       0       0
  5705 ;;      Totals:         0       0       0       0       0
  5706 ;;Total ram usage:        0 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_Write_Bytes_To_DS1307_RTC
  5712 ;;		_Read_Bytes_From_DS1307_RTC
  5713 ;;		_Write_Byte_To_DS1307_RTC
  5714 ;;		_Read_Byte_From_DS1307_RTC
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           psect	text597
  5718                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5719                           	line	37
  5720                           	global	__size_of_I2C_Stop
  5721  000B                     	__size_of_I2C_Stop	equ	__end_of_I2C_Stop-_I2C_Stop
  5722                           	
  5723  0E2E                     _I2C_Stop:	
  5724                           	opt	stack 5
  5725                           ; Regs used in _I2C_Stop: []
  5726                           	line	38
  5727                           	
  5728  0E2E                     l6279:	
  5729                           ;I2C.c: 38: PEN = 1;
  5730  0E2E  1683               	bsf	status, 5	;RP0=1, select bank1
  5731  0E2F  1303               	bcf	status, 6	;RP1=0, select bank1
  5732  0E30  1511               	bsf	(1162/8)^080h,(1162)&7
  5733                           	line	39
  5734                           ;I2C.c: 39: while(!SSPIF);
  5735  0E31  2E32               	goto	l1363
  5736                           	
  5737  0E32                     l1364:	
  5738                           	
  5739  0E32                     l1363:	
  5740  0E32  1283               	bcf	status, 5	;RP0=0, select bank0
  5741  0E33  1D8C               	btfss	(99/8),(99)&7
  5742  0E34  2E36               	goto	u2781
  5743  0E35  2E37               	goto	u2780
  5744  0E36                     u2781:
  5745  0E36  2E32               	goto	l1363
  5746  0E37                     u2780:
  5747                           	
  5748  0E37                     l1365:	
  5749                           	line	40
  5750                           ;I2C.c: 40: SSPIF = 0;
  5751  0E37  118C               	bcf	(99/8),(99)&7
  5752                           	line	41
  5753                           	
  5754  0E38                     l1366:	
  5755  0E38  0008               	return
  5756                           	opt stack 0
  5757                           GLOBAL	__end_of_I2C_Stop
  5758  0E39                     	__end_of_I2C_Stop:
  5759 ;; =============== function _I2C_Stop ends ============
  5760                           
  5761                           	signat	_I2C_Stop,88
  5762                           	global	_I2C_Write_Byte
  5763                           psect	text598,local,class=CODE,delta=2
  5764                           global __ptext598
  5765  0E79                     __ptext598:
  5766                           
  5767 ;; *************** function _I2C_Write_Byte *****************
  5768 ;; Defined at:
  5769 ;;		line 67 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  Byte            1    wreg     unsigned char 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  Byte            1    0[COMMON] unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;		None               void
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5783 ;;      Params:         0       0       0       0       0
  5784 ;;      Locals:         1       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0
  5786 ;;      Totals:         1       0       0       0       0
  5787 ;;Total ram usage:        1 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_Write_Bytes_To_DS1307_RTC
  5793 ;;		_Read_Bytes_From_DS1307_RTC
  5794 ;;		_Write_Byte_To_DS1307_RTC
  5795 ;;		_Read_Byte_From_DS1307_RTC
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           psect	text598
  5799                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5800                           	line	67
  5801                           	global	__size_of_I2C_Write_Byte
  5802  0017                     	__size_of_I2C_Write_Byte	equ	__end_of_I2C_Write_Byte-_I2C_Write_Byte
  5803                           	
  5804  0E79                     _I2C_Write_Byte:	
  5805                           	opt	stack 5
  5806                           ; Regs used in _I2C_Write_Byte: [wreg+status,2+status,0]
  5807                           ;I2C_Write_Byte@Byte stored from wreg
  5808  0E79  00F0               	movwf	(I2C_Write_Byte@Byte)
  5809                           	line	68
  5810                           	
  5811  0E7A                     l6271:	
  5812                           ;I2C.c: 68: SSPBUF = Byte;
  5813  0E7A  0870               	movf	(I2C_Write_Byte@Byte),w
  5814  0E7B  1283               	bcf	status, 5	;RP0=0, select bank0
  5815  0E7C  1303               	bcf	status, 6	;RP1=0, select bank0
  5816  0E7D  0093               	movwf	(19)	;volatile
  5817                           	line	69
  5818                           ;I2C.c: 69: while(!SSPIF);
  5819  0E7E  2E7F               	goto	l1381
  5820                           	
  5821  0E7F                     l1382:	
  5822                           	
  5823  0E7F                     l1381:	
  5824  0E7F  1D8C               	btfss	(99/8),(99)&7
  5825  0E80  2E82               	goto	u2761
  5826  0E81  2E83               	goto	u2760
  5827  0E82                     u2761:
  5828  0E82  2E7F               	goto	l1381
  5829  0E83                     u2760:
  5830                           	
  5831  0E83                     l1383:	
  5832                           	line	70
  5833                           ;I2C.c: 70: SSPIF = 0;
  5834  0E83  118C               	bcf	(99/8),(99)&7
  5835                           	line	72
  5836                           ;I2C.c: 72: return ACKSTAT;
  5837  0E84  1683               	bsf	status, 5	;RP0=1, select bank1
  5838  0E85  1303               	bcf	status, 6	;RP1=0, select bank1
  5839  0E86  1B11               	btfsc	(1166/8)^080h,(1166)&7
  5840  0E87  2E89               	goto	u2771
  5841  0E88  2E8A               	goto	u2770
  5842  0E89                     u2771:
  5843  0E89  2E8C               	goto	l6275
  5844  0E8A                     u2770:
  5845                           	
  5846  0E8A                     l6273:	
  5847  0E8A  1003               	clrc
  5848                           	
  5849  0E8B  2E8F               	goto	l1384
  5850                           	
  5851  0E8C                     l6255:	
  5852                           	
  5853  0E8C                     l6275:	
  5854  0E8C  1403               	setc
  5855                           	
  5856  0E8D  2E8F               	goto	l1384
  5857                           	
  5858  0E8E                     l6257:	
  5859  0E8E  2E8F               	goto	l1384
  5860                           	
  5861  0E8F                     l6277:	
  5862                           	line	73
  5863                           	
  5864  0E8F                     l1384:	
  5865  0E8F  0008               	return
  5866                           	opt stack 0
  5867                           GLOBAL	__end_of_I2C_Write_Byte
  5868  0E90                     	__end_of_I2C_Write_Byte:
  5869 ;; =============== function _I2C_Write_Byte ends ============
  5870                           
  5871                           	signat	_I2C_Write_Byte,4216
  5872                           	global	_I2C_Start
  5873                           psect	text599,local,class=CODE,delta=2
  5874                           global __ptext599
  5875  0E23                     __ptext599:
  5876                           
  5877 ;; *************** function _I2C_Start *****************
  5878 ;; Defined at:
  5879 ;;		line 19 in file "F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;		None
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;		None               void
  5886 ;; Registers used:
  5887 ;;		None
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5893 ;;      Params:         0       0       0       0       0
  5894 ;;      Locals:         0       0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0
  5896 ;;      Totals:         0       0       0       0       0
  5897 ;;Total ram usage:        0 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; This function calls:
  5900 ;;		Nothing
  5901 ;; This function is called by:
  5902 ;;		_Write_Bytes_To_DS1307_RTC
  5903 ;;		_Read_Bytes_From_DS1307_RTC
  5904 ;;		_Write_Byte_To_DS1307_RTC
  5905 ;;		_Read_Byte_From_DS1307_RTC
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           psect	text599
  5909                           	file	"F:\pic projects\PIC16F877 with DS1307 RTC Code\Code\I2C.c"
  5910                           	line	19
  5911                           	global	__size_of_I2C_Start
  5912  000B                     	__size_of_I2C_Start	equ	__end_of_I2C_Start-_I2C_Start
  5913                           	
  5914  0E23                     _I2C_Start:	
  5915                           	opt	stack 5
  5916                           ; Regs used in _I2C_Start: []
  5917                           	line	20
  5918                           	
  5919  0E23                     l6269:	
  5920                           ;I2C.c: 20: SEN = 1;
  5921  0E23  1683               	bsf	status, 5	;RP0=1, select bank1
  5922  0E24  1303               	bcf	status, 6	;RP1=0, select bank1
  5923  0E25  1411               	bsf	(1160/8)^080h,(1160)&7
  5924                           	line	21
  5925                           ;I2C.c: 21: while(!SSPIF);
  5926  0E26  2E27               	goto	l1351
  5927                           	
  5928  0E27                     l1352:	
  5929                           	
  5930  0E27                     l1351:	
  5931  0E27  1283               	bcf	status, 5	;RP0=0, select bank0
  5932  0E28  1D8C               	btfss	(99/8),(99)&7
  5933  0E29  2E2B               	goto	u2751
  5934  0E2A  2E2C               	goto	u2750
  5935  0E2B                     u2751:
  5936  0E2B  2E27               	goto	l1351
  5937  0E2C                     u2750:
  5938                           	
  5939  0E2C                     l1353:	
  5940                           	line	22
  5941                           ;I2C.c: 22: SSPIF = 0;
  5942  0E2C  118C               	bcf	(99/8),(99)&7
  5943                           	line	23
  5944                           	
  5945  0E2D                     l1354:	
  5946  0E2D  0008               	return
  5947                           	opt stack 0
  5948                           GLOBAL	__end_of_I2C_Start
  5949  0E2E                     	__end_of_I2C_Start:
  5950 ;; =============== function _I2C_Start ends ============
  5951                           
  5952                           	signat	_I2C_Start,88
  5953                           psect	text600,local,class=CODE,delta=2
  5954                           global __ptext600
  5955  0000                     __ptext600:
  5956                           	global	btemp
  5957  007E                     	btemp set 07Eh
  5958                           
  5959                           	DABS	1,126,2	;btemp
  5960                           	global	wtemp0
  5961  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 07 08:37:07 2014

                                  pc 0002                       ___bmul@product 0072  
                 __size_of_I2C_Start 000B                                   _RD 0C60  
                                 _WR 0C61                         ___awdiv@sign 0076  
                                 fsr 0004                                  l700 02D9  
                                l701 02DB                                  l704 0567  
                                l707 0132                                  l671 001F  
                                l672 0019                                  l680 0067  
                                l673 002A                                  l681 0061  
                                l674 0046                                  l682 0072  
                                l690 0382                                  l675 0033  
                                l683 00AD                                  l691 0393  
                                l676 0054                                  l684 0093  
                                l692 0384                                  l677 0059  
                                l685 00B8                                  l693 0389  
                                l686 00C2                                  l694 03A1  
                                l689 038B                                  l697 02B5  
                                l698 0292                                  l699 0294  
                                _GIE 005F                                  _RB0 0030  
                                _RB1 0031                                  _RD0 0040  
                                _RB4 0034                                  _RD1 0041  
                                _RB5 0035                                  _RD2 0042  
                                _RB6 0036                                  _RD3 0043  
                                _RB7 0037                                  _PEN 048A  
                                _SEN 0488                 __size_of_I2C_ReStart 000B  
                                fsr0 0004                                  indf 0000  
                       ___awmod@sign 0076                   I2C_Write_Byte@Byte 0070  
            Set_DS1307_RTC_Time@Mode 007C              Set_DS1307_RTC_Time@Mins 007A  
            Set_DS1307_RTC_Time@Secs 007B                                 l2033 0EC0  
                               l2042 0236                                 l2051 0E78  
                               l2036 0F0D                                 l2045 0ED4  
                               l2046 0EC3                                 l2054 0471  
                               l2062 065D                                 l2070 064E  
                               l1351 0E27                                 l2039 0F39  
                               l2047 0EE1                                 l2055 045B  
                               l2071 0655                                 l2063 0624  
                               l1352 0E27                                 l1360 0E43  
                               l2048 0EE1                                 l2056 047D  
                               l2064 0677                                 l2072 0677  
                               l1353 0E2C                                 l2057 0462  
                               l2065 062B                                 l1354 0E2D  
                               l1370 0E55                                 l2058 0469  
                               l2066 0632                                 l1363 0E32  
                               l1371 0E5A                                 l2059 047D  
                               l2067 0639                                 l1364 0E32  
                               l1372 0E5B                                 l1348 0011  
                               l2068 0640                                 l1381 0E7F  
                               l1365 0E37                                 l1357 0E3D  
                               l2069 0647                                 l1382 0E7F  
                               l1366 0E38                                 l1358 0E3D  
                               l1390 0E68                                 l1383 0E83  
                               l1359 0E42                                 l1375 0E49  
                               l1384 0E8F                                 l1376 0E49  
                               l3400 06F4                                 l1377 0E4E  
                               l1369 0E55                                 l3401 06F3  
                               l1378 0E4F                                 l4210 016C  
                               l3410 074A                                 l3402 073F  
                               l1387 0E60                                 l4211 016D  
                               l3411 075F                                 l3403 06FB  
                               l1388 0E60                                 l4060 0E9B  
                               l4212 0186                                 l3412 07FE  
                               l3420 07D0                                 l3404 06FB  
                               l1389 0E65                                 l4061 0EA5  
                               l4213 0194                                 l4205 0141  
                               l3421 07FB                                 l3413 0791  
                               l3405 0700                                 l4062 0EA7  
                               l4214 019F                                 l4206 014F  
                               l3414 0791                                 l3406 0722  
                               l3422 07FF                                 l4215 01A6  
                               l4207 0195                                 l3415 0796  
                               l3407 078B                                 l4208 0167  
                               l3416 07AE                                 l3408 0745  
                               l4209 015B                                 l3417 07FD  
                               l3409 0745                                 l3418 07C6  
                               l4059 0E92                                 l3419 07FC  
                               l2733 0F6D                                 l3390 068B  
                               l2734 0F96                                 l3391 06B0  
                               l2735 0F97                                 l4280 0FDF  
                               l3392 06B1                                 l2736 0F97  
                               l4281 0FED                                 l4273 0FA8  
                               l3393 06B1                                 l4282 0FF8  
                               l4274 0FB2                                 l4283 0FFF  
                               l4275 0FEE                                 l3387 07FF  
                               l3395 06C0                                 l4276 0FC8  
                               l3396 06C1                                 l3388 0686  
                               l4277 0FBC                                 l3397 06D3  
                               l3389 0686                                 l4278 0FCD  
                               l3398 06F5                                 l6303 0E39  
                               l6311 0E44                                 l4279 0FCE  
                               l3399 06E4                                 l6305 0E5C  
                               l6313 0E50                                 l6321 0E9D  
                               l6401 0FFF                                 l6307 0E66  
                               l6323 0E9F                                 l6315 0E91  
                               l6331 0138                                 l6411 0030  
                               l6403 0013                                 l6309 0E68  
                               l6325 0EA5                                 l6317 0E96  
                               l6341 0151                                 l6333 0141  
                               l6413 0033                                 l6405 0019  
                               l6421 005B                                 l6501 00D7  
                               l6255 0E8C                                 l6271 0E7A  
                               l6327 0EA7                                 l6319 0E9B  
                               l6351 016D                                 l6343 0157  
                               l6335 0145                                 l6415 003F  
                               l6407 001F                                 l6431 007D  
                               l6423 0061                                 l6511 0130  
                               l6503 00F2                                 l6257 0E8E  
                               l6273 0E8A                                 l6353 017E  
                               l6345 015B                                 l6361 0195  
                               l6337 014A                                 l6329 0133  
                               l6417 0046                                 l6409 002A  
                               l6441 00A6                                 l6433 0083  
                               l6425 0067                                 l6513 0132  
                               l6505 00F6                                 l6521 0EF4  
                               l6601 0420                                 l6275 0E8C  
                               l6363 0199                                 l6355 0184  
                               l6347 0162                                 l6339 014F  
                               l6371 0F9F                                 l6419 0054  
                               l6443 00AD                                 l6435 008E  
                               l6427 0072                                 l6451 0EB4  
                               l6507 0111                                 l6523 0EFA  
                               l6515 0EE3                                 l6531 0F1B  
                               l6611 0470                                 l6603 043A  
                               l6269 0E23                                 l6277 0E8F  
                               l6365 019F                                 l6357 0186  
                               l6349 0167                                 l6381 0FBC  
                               l6373 0FA8                                 l6445 00B8  
                               l6437 0093                                 l6429 0078  
                               l6461 0393                                 l6453 02DD  
                               l6509 0115                                 l6525 0F08  
                               l6517 0EE6                                 l6533 0F20  
                               l6541 01B7                                 l6605 045B  
                               l6613 0471                                 l6621 05AB  
                               l6701 0755                                 l6279 0E2E  
                               l6367 01A6                                 l6359 018D  
                               l6391 0FDF                                 l6383 0FC3  
                               l6375 0FAC                                 l6439 0098  
                               l6447 0EA8                                 l6455 0384  
                               l6471 026B                                 l6463 0237  
                               l6519 0EEF                                 l6535 0F26  
                               l6527 0F0F                                 l6551 01DB  
                               l6543 01C4                                 l6607 0462  
                               l6631 062B                                 l6623 05C6  
                               l6615 0569                                 l6711 0790  
                               l6703 076E                                 l6393 0FE6  
                               l6385 0FC8                                 l6377 0FB2  
                               l6369 0F9A                                 l6449 0EAB  
                               l6457 038A                                 l6481 0298  
                               l6473 0286                                 l6465 0245  
                               l6537 0F34                                 l6529 0F12  
                               l6561 01FB                                 l6553 01E1  
                               l6545 01CA                                 l6609 0469  
                               l6641 064E                                 l6633 0632  
                               l6625 05E7                                 l6617 056F  
                               l6721 07AE                                 l6713 0796  
                               l6705 0774                                 l6387 0FCE  
                               l6379 0FB8                                 l6395 0FEE  
                               l6459 038B                                 l6491 02DB  
                               l6475 028A                                 l6483 02B5  
                               l6467 024B                                 l6571 021E  
                               l6563 0209                                 l6555 01EA  
                               l6547 01CE                                 l6539 01A7  
                               l6643 0655                                 l6635 0639  
                               l6627 0602                                 l6619 058A  
                               l6731 07CB                                 l6723 07B3  
                               l6715 079B                                 l6707 077C  
                               l6651 0685                                 l6397 0FF2  
                               l6389 0FD8                                 l6485 02B9  
                               l6477 028E                                 l6469 0267  
                               l6493 047F                                 l6573 0224  
                               l6565 020F                                 l6557 01F1  
                               l6549 01D3                                 l6581 0EC3  
                               l6645 065C                                 l6637 0640  
                               l6629 0624                                 l6733 07CF  
                               l6725 07BF                                 l6717 07A7  
                               l6709 0784                                 l6661 06BB  
                               l6653 068B                                 l6741 0F3A  
                               l4967 0005                                 l6399 0FF8  
                               l6487 02D4                                 l6479 0294  
                               l6495 0559                                 l6575 022A  
                               l6567 0210                                 l6559 01F7  
                               l6583 0ECF                                 l6591 03A3  
                               l6639 0647                                 l6647 065D  
                               l6735 07D3                                 l6727 07C5  
                               l6719 07AD                                 l6671 06DB  
                               l6663 06C1                                 l6655 0695  
                               l6751 0F7C                                 l6743 0F44  
                               l4969 0009                                 l6489 02D9  
                               l6497 00C3                                 l6577 0230  
                               l6569 0215                                 l6585 0ED4  
                               l6593 03A8                                 l6737 07EE  
                               l6729 07C6                                 l6673 06DF  
                               l6681 06F5                                 l6665 06C6  
                               l6657 069B                                 l6649 0678  
                               l6753 0F86                                 l6745 0F58  
                               l6499 00D1                                 l6579 0EC2  
                               l6587 0E69                                 l6595 03C3  
                               l6739 07F4                                 l6691 0728  
                               l6683 06FA                                 l6675 06E4  
                               l6667 06D3                                 l6659 06B7  
                               l6747 0F6D                                 l6589 0E6F  
                               l6597 03E4                                 l6693 0730  
                               l6685 0700                                 l6677 06E9  
                               l6669 06D8                                 l6749 0F72  
                               l6599 03FF                                 l6695 0738  
                               l6687 071B                                 l6679 06EA  
                               l6697 0744                                 l6689 0722  
                               l6699 074A                                 STR_1 0832  
                               STR_2 0835                                 STR_3 0822  
                               STR_4 081A                                 STR_5 0816  
                               STR_6 082E                                 STR_7 081E  
                               STR_8 082A                                 STR_9 0826  
                               u3000 0FCC                                 u3001 0FCB  
                               u3010 0FD8                                 u3011 0FD7  
                               u3030 0FEC                                 u3031 0FEB  
                               u3015 0FD4                                 u3040 0FF2  
                               u3025 0FE0                                 u3105 0340  
                               u3050 0029                                 u3051 0028  
                               u3115 0376                                 u3060 0053  
                               u3140 028A                                 u3300 06B7  
                               u3061 0052                                 u3141 0289  
                               u3125 0252                                 u3205 0518  
                               u3301 06B6                                 u3070 0071  
                               u3150 028E                                 u3310 06BB  
                               u3071 0070                                 u3151 028D  
                               u3135 0272                                 u3215 054E  
                               u3311 06BA                                 u3080 00B7  
                               u3400 0749                                 u3320 06BF  
                               u3065 004F                                 u3081 00B6  
                               u3225 00DE                                 u3401 0748  
                               u3321 06BE                                 u3410 0755  
                               u3330 06C6                                 u3235 00FD  
                               u3411 0754                                 u3331 06C5  
                               u3420 078F                                 u3340 06D8  
                               u3085 00B3                                 u3165 029F  
                               u3245 011C                                 u3421 078E  
                               u3341 06D7                                 u3270 0EE0  
                               u3430 0795                                 u3350 06E9  
                               u3095 030A                                 u3175 02C0  
                               u3255 0EFD                                 u3271 0EDF  
                               u3431 0794                                 u3351 06E8  
                               u2800 0E42                                 u3440 079B  
                               u3360 06F9                                 u3280 0684  
                               u2801 0E41                                 u3185 04AC  
                               u3265 0F29                                 u3441 079A  
                               u3361 06F8                                 u3281 0683  
                               u2810 0E65                                 u3450 07B3  
                               u3370 06FF                                 u3290 068A  
                               u2811 0E64                                 u3195 04E2  
                               u3507 01D7                                 u3451 07B2  
                               u3371 06FE                                 u3291 0689  
                               u2820 0E4E                                 u2900 016B  
                               u3460 07CB                                 u3380 071B  
                               u2821 0E4D                                 u2901 016A  
                               u3517 01EC                                 u3461 07CA  
                               u3381 071A                                 u2750 0E2C  
                               u2830 0E5A                                 u3390 0743  
                               u2751 0E2B                                 u2831 0E59  
                               u3527 0204                                 u3391 0742  
                               u2760 0E83                                 u2840 0E96  
                               u2920 017E                                 u2761 0E82  
                               u2841 0E95                                 u2921 017D  
                               u3537 0219                                 u2770 0E8A  
                               u2850 0EA4                                 u2771 0E89  
                               u2851 0EA3                                 u2915 016E  
                               u3547 0EAF                                 u2780 0E37  
                               u2940 0193                                 u2860 0138  
                               u2781 0E36                                 u2941 0192  
                               u2925 017A                                 u2861 0137  
                               u3557 0EBB                                 u3477 0F8E  
                               u2950 0199                                 u2870 0145  
                               u2935 0187                                 u2871 0144  
                               u3487 0E73                                 u2880 0157  
                               u2960 0F9F                                 u2881 0156  
                               u2961 0F9E                                 u3497 01BD  
                               u2970 0FAC                                 u2971 0FAB  
                               u2980 0FB8                                 _RCEN 048B  
                               u2981 0FB7                                 u2895 015C  
                               u2995 0FBD                                 _RSEN 0489  
                               _WREN 0C62                                 _Temp 007D  
        ??_Write_Bytes_To_DS1307_RTC 0073                                 _main 0F3A  
                               btemp 007E                     __end_of_I2C_Stop 0E39  
              __size_of_I2C_Send_ACK 000C                                 start 0000  
                  ___bmul@multiplier 0073                      __end_of_InitI2C 0012  
                    __end_of_InitLCD 0237                      __end_of_SetTime 0800  
           Set_DS1307_RTC_Time@Hours 0079                                ?_main 0070  
                              _ACKEN 048C                                _ACKDT 048D  
                    __end_of___awdiv 01A7                                _EEADR 010D  
                              STR_10 0812                                STR_11 0806  
                    __end_of___awmod 1000                                _CARRY 0018  
                    ___awdiv@divisor 0070                      ___awdiv@counter 0075  
                              _PORTB 0006                                _SSPIF 0063  
 __end_of_Read_Bytes_From_DS1307_RTC 00C3           _Read_Bytes_From_DS1307_RTC 005A  
             __size_of_I2C_Read_Byte 000D                         _I2C_Send_ACK 0E50  
                  __end_of_I2C_Start 0E2E                                pclath 000A  
             __size_of_I2C_Send_NACK 000C                                status 0003  
            __size_of_WriteDataToLCD 002C                                wtemp0 007E  
                    _ToggleEpinOfLCD 0EA8                         __end_of_main 0F9A  
        __end_of_Get_DS1307_RTC_Date 0133          __end_of_Set_DS1307_RTC_Date 0568  
        __end_of_Get_DS1307_RTC_Time 02DC            _Write_Bytes_To_DS1307_RTC 0012  
        __end_of_Set_DS1307_RTC_Time 03A2                               ??_main 0032  
                   ??_ClearLCDScreen 0075                        SetTime@hr_set 002B  
                             _EEDATA 010C                               _EECON1 018C  
                             _EECON2 018D                     ___awdiv@dividend 0072  
                             _SSPADD 0093                               _TRISB0 0430  
                             _TRISB1 0431                               _TRISB4 0434  
                             _TRISC3 043B                               _TRISB5 0435  
                             _TRISC4 043C                               _TRISB6 0436  
                             _TRISB7 0437                               _SSPCON 0014  
                             _SSPBUF 0013            __size_of_DisplayDateOnLCD 0110  
                          ??_InitI2C 0070                            ??_InitLCD 0075  
                          ??_SetTime 0028                               ___bmul 0E90  
                      _I2C_Read_Byte 0E5C                            ??___awdiv 0074  
                          ??___awmod 0074                     ___awdiv@quotient 0077  
                    ___awmod@divisor 0070                    WriteStringToLCD@s 0076  
                      _I2C_Send_NACK 0E44                      ___awmod@counter 0075  
                  ?_WriteStringToLCD 0070                            ?_I2C_Stop 0070  
                 ??_WriteStringToLCD 0075              __end_of_ToggleEpinOfLCD 0EC1  
Read_Bytes_From_DS1307_RTC@NoOfBytes 0072                  ___bmul@multiplicand 0070  
          __size_of_DisplayTimeToLCD 00DC                       ?_I2C_Read_Byte 0070  
                     __pcstackCOMMON 0070                       ?_I2C_Send_NACK 0070  
           WriteCommandToLCD@Command 0074                           ??_I2C_Stop 0070  
                         __pbssBANK0 0035                       _WriteDataToLCD 0F0E  
                         __pmaintext 0F3A                              ?___bmul 0070  
              WriteDataToLCD@LCDChar 0074                       SetTime@min_set 002C  
            __size_of_I2C_Write_Byte 0017                       SetTime@sec_set 002D  
                            _ACKSTAT 048E                        ??_I2C_ReStart 0070  
        ?_Read_Bytes_From_DS1307_RTC 0071   __size_of_Write_Bytes_To_DS1307_RTC 0048  
                            _SSPSTAT 0094               __end_of_WriteDataToLCD 0F3A  
                   ?_ToggleEpinOfLCD 0070                     _DisplayDateOnLCD 0568  
                            _InitI2C 0005                              _InitLCD 01A7  
                          _I2C_Start 0E23                      ??_I2C_Read_Byte 0070  
                            _SetTime 0678                      __size_of___bmul 0018  
                    ??_I2C_Send_NACK 0070                              ___awdiv 0133  
                            ___awmod 0F9A                     ___awmod@dividend 0072  
                __end_of_I2C_ReStart 0E44           DisplayDateOnLCD@pDateArray 007B  
  __end_of_Write_Bytes_To_DS1307_RTC 005A                 end_of_initialization 0E1F  
                    ?_WriteDataToLCD 0070                           ?_I2C_Start 0070  
                   _DisplayTimeToLCD 03A2         __size_of_Get_DS1307_RTC_Date 0070  
       __size_of_Set_DS1307_RTC_Date 00EA         __size_of_Get_DS1307_RTC_Time 00A5  
       __size_of_Set_DS1307_RTC_Time 00C6           Write_Bytes_To_DS1307_RTC@i 0076  
                  __size_of_I2C_Stop 000B    Read_Bytes_From_DS1307_RTC@Address 0076  
          __size_of_WriteStringToLCD 0021     Write_Bytes_To_DS1307_RTC@Address 0075  
__size_of_Read_Bytes_From_DS1307_RTC 0069                       __end_of___bmul 0EA8  
                     _I2C_Write_Byte 0E79                          _I2C_ReStart 0E39  
                start_initialization 0E1A              __size_of_ClearLCDScreen 0010  
                       SetTime@limit 002F                         SetTime@temp1 0031  
                       SetTime@store 0030                          ??_I2C_Start 0070  
             __end_of_I2C_Write_Byte 0E90                             ??___bmul 0071  
        Read_Bytes_From_DS1307_RTC@i 0077             __end_of_DisplayDateOnLCD 0678  
                          _pRTCArray 0035                          __pbssCOMMON 007D  
                      __pcstackBANK0 0020       Write_Bytes_To_DS1307_RTC@pData 0071  
                      ?_I2C_Send_ACK 0070                             ?_InitI2C 0070  
                           ?_InitLCD 0070                             ?_SetTime 0070  
                    ?_I2C_Write_Byte 0070           DisplayTimeToLCD@pTimeArray 007B  
                           ?___awdiv 0070                            __ptext600 0000  
                           ?___awmod 0070                            __ptext580 0F0E  
                          __ptext581 0EE2                            __ptext573 0000  
                          __ptext590 0133                            __ptext582 00C3  
                          __ptext574 0678                            __ptext591 0E90  
                          __ptext583 047E                            __ptext575 0568  
                          __ptext592 0005                            __ptext584 0237  
                          __ptext576 03A2                            __ptext593 0E50  
                          __ptext585 02DC                            __ptext577 0E69  
                          __ptext594 0E44                            __ptext586 0EA8  
                          __ptext578 0EC1                            __ptext595 0E5C  
                          __ptext587 005A                            __ptext579 01A7  
                          __ptext596 0E39                            __ptext588 0012  
                          __ptext597 0E2E                            __ptext589 0F9A  
                          __ptext598 0E79                            __ptext599 0E23  
                          __pstrings 0800                     ??_WriteDataToLCD 0072  
                           _I2C_Stop 0E2E             __end_of_DisplayTimeToLCD 047E  
                     ??_I2C_Send_ACK 0070                     _WriteStringToLCD 0EC1  
                _Get_DS1307_RTC_Date 00C3                  _Set_DS1307_RTC_Date 047E  
                _Get_DS1307_RTC_Time 0237                __end_of_I2C_Read_Byte 0E69  
                _Set_DS1307_RTC_Time 02DC             __size_of_ToggleEpinOfLCD 0019  
    Read_Bytes_From_DS1307_RTC@pData 0071                __end_of_I2C_Send_NACK 0E50  
                        __stringbase 0805                 ?_Get_DS1307_RTC_Date 0070  
               ?_Set_DS1307_RTC_Date 0079                 ?_Get_DS1307_RTC_Time 0070  
               ?_Set_DS1307_RTC_Time 0079                       _ClearLCDScreen 0E69  
         ?_Write_Bytes_To_DS1307_RTC 0071                    _WriteCommandToLCD 0EE2  
                 ?_WriteCommandToLCD 0070                     __size_of_InitI2C 000D  
                   __size_of_InitLCD 0090                     __size_of_SetTime 0188  
                ??_WriteCommandToLCD 0072                     __size_of___awdiv 0074  
                   __size_of___awmod 0066                         ?_I2C_ReStart 0070  
              ??_Get_DS1307_RTC_Date 0079                ??_Set_DS1307_RTC_Date 0020  
              ??_Get_DS1307_RTC_Time 0079                ??_Set_DS1307_RTC_Time 0020  
             __end_of_ClearLCDScreen 0E79            __end_of_WriteCommandToLCD 0F0E  
                      __size_of_main 0060                  SetTime@disply_locat 002E  
               __end_of_I2C_Send_ACK 0E5C                    ??_ToggleEpinOfLCD 0070  
                  ?_DisplayDateOnLCD 0070                   ??_DisplayDateOnLCD 0079  
       ??_Read_Bytes_From_DS1307_RTC 0074                      ?_ClearLCDScreen 0070  
 Write_Bytes_To_DS1307_RTC@NoOfBytes 0072                     ??_I2C_Write_Byte 0070  
           Set_DS1307_RTC_Date@Month 0079                            stringcode 0800  
           __end_of_WriteStringToLCD 0EE2              Set_DS1307_RTC_Date@Date 007C  
            Set_DS1307_RTC_Date@Year 007A                             stringdir 0800  
                           stringtab 0800                    ?_DisplayTimeToLCD 0070  
         __size_of_WriteCommandToLCD 002C                   ??_DisplayTimeToLCD 0079  
             Set_DS1307_RTC_Date@Day 007B  
