

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu Nov 06 21:30:14 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "F:\pic projects\eeprom read\eeprom.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "F:\pic projects\eeprom read\eeprom.c"
    45  2007  3F72               	dw 0x3f72 ;#
    46                           	FNCALL	_main,_DelayMs
    47                           	FNCALL	_main,_i2c_init
    48                           	FNCALL	_main,_serial_init
    49                           	FNCALL	_main,_printf
    50                           	FNCALL	_main,_I2CWrite
    51                           	FNCALL	_main,_I2CRead
    52                           	FNCALL	_I2CRead,_WaitMSSP
    53                           	FNCALL	_I2CRead,_putch
    54                           	FNCALL	_I2CRead,_DelayMs
    55                           	FNCALL	_I2CWrite,_WaitMSSP
    56                           	FNCALL	_printf,_putch
    57                           	FNROOT	_main
    58                           	global	_data
    59                           psect	idataBANK0,class=CODE,space=0,delta=2
    60                           global __pidataBANK0
    61  0662                     __pidataBANK0:
    62                           	file	"F:\pic projects\eeprom read\eeprom.c"
    63                           	line	14
    64                           
    65                           ;initializer for _data
    66  0662  3449               	retlw	049h
    67  0663  3432               	retlw	032h
    68  0664  3443               	retlw	043h
    69  0665  3420               	retlw	020h
    70  0666  3454               	retlw	054h
    71  0667  3465               	retlw	065h
    72  0668  3473               	retlw	073h
    73  0669  3474               	retlw	074h
    74  066A  3420               	retlw	020h
    75  066B  3450               	retlw	050h
    76  066C  3472               	retlw	072h
    77  066D  346F               	retlw	06Fh
    78  066E  3467               	retlw	067h
    79  066F  3472               	retlw	072h
    80  0670  3461               	retlw	061h
    81  0671  346D               	retlw	06Dh
    82  0672  3400               	retlw	0
    83                           	global	_i
    84                           	global	_RCSTA
    85  0018                     _RCSTA	set	24
    86                           	global	_SSPBUF
    87  0013                     _SSPBUF	set	19
    88                           	global	_SSPCON
    89  0014                     _SSPCON	set	20
    90                           	global	_TXREG
    91  0019                     _TXREG	set	25
    92                           	global	_CARRY
    93  0018                     _CARRY	set	24
    94                           	global	_GIE
    95  005F                     _GIE	set	95
    96                           	global	_SSPIF
    97  0063                     _SSPIF	set	99
    98                           	global	_TXIF
    99  0064                     _TXIF	set	100
   100                           	global	_SPBRG
   101  0099                     _SPBRG	set	153
   102                           	global	_SSPADD
   103  0093                     _SSPADD	set	147
   104                           	global	_SSPSTAT
   105  0094                     _SSPSTAT	set	148
   106                           	global	_TXSTA
   107  0098                     _TXSTA	set	152
   108                           	global	_ACKDT
   109  048D                     _ACKDT	set	1165
   110                           	global	_ACKEN
   111  048C                     _ACKEN	set	1164
   112                           	global	_PEN
   113  048A                     _PEN	set	1162
   114                           	global	_RCEN
   115  048B                     _RCEN	set	1163
   116                           	global	_RSEN
   117  0489                     _RSEN	set	1161
   118                           	global	_SEN
   119  0488                     _SEN	set	1160
   120                           	global	_TRISC3
   121  043B                     _TRISC3	set	1083
   122                           	global	_TRISC4
   123  043C                     _TRISC4	set	1084
   124                           	global	_TRISC6
   125  043E                     _TRISC6	set	1086
   126                           	global	_TRISC7
   127  043F                     _TRISC7	set	1087
   128                           	global	_EEADR
   129  010D                     _EEADR	set	269
   130                           	global	_EEDATA
   131  010C                     _EEDATA	set	268
   132                           	global	_EECON1
   133  018C                     _EECON1	set	396
   134                           	global	_EECON2
   135  018D                     _EECON2	set	397
   136                           	global	_RD
   137  0C60                     _RD	set	3168
   138                           	global	_WR
   139  0C61                     _WR	set	3169
   140                           	global	_WREN
   141  0C62                     _WREN	set	3170
   142                           psect	strings,class=STRING,delta=2
   143                           global __pstrings
   144  0003                     __pstrings:
   145                           ;	global	stringdir,stringtab,__stringbase
   146  0003                     stringtab:
   147                           ;	String table - string pointers are 1 byte each
   148  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   149  0003  3000               movlw high(stringdir)
   150  0004  008A               movwf pclath
   151  0005  0804               movf fsr,w
   152  0006  0A84               incf fsr
   153  0007  0782               	addwf pc
   154  0008                     __stringbase:
   155  0008  3400               	retlw	0
   156                           psect	strings
   157                           	
   158  0009                     STR_1:	
   159  0009  3467               	retlw	103	;'g'
   160  000A  3467               	retlw	103	;'g'
   161  000B  3464               	retlw	100	;'d'
   162  000C  3461               	retlw	97	;'a'
   163  000D  3400               	retlw	0
   164                           psect	strings
   165                           	
   166  000E                     STR_2:	
   167  000E  3468               	retlw	104	;'h'
   168  000F  3461               	retlw	97	;'a'
   169  0010  3469               	retlw	105	;'i'
   170  0011  3400               	retlw	0
   171                           psect	strings
   172                           	file	"eeprom read.as"
   173                           	line	#
   174                           psect cinit,class=CODE,delta=2
   175                           global start_initialization
   176  0686                     start_initialization:
   177                           
   178                           psect	bssCOMMON,class=COMMON,space=1
   179                           global __pbssCOMMON
   180  0076                     __pbssCOMMON:
   181  0076                     _i:
   182  0076                            ds      1
   183                           
   184                           psect	dataBANK0,class=BANK0,space=1
   185                           global __pdataBANK0
   186  0020                     __pdataBANK0:
   187                           	file	"F:\pic projects\eeprom read\eeprom.c"
   188  0020                     _data:
   189  0020                            ds      17
   190                           
   191                           ; Clear objects allocated to COMMON
   192                           psect cinit,class=CODE,delta=2
   193  0686  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   194                           global btemp
   195                           psect inittext,class=CODE,delta=2
   196                           global init_fetch,btemp
   197                           ;	Called with low address in FSR and high address in W
   198  0673                     init_fetch:
   199  0673  087E               	movf btemp,w
   200  0674  008A               	movwf pclath
   201  0675  087F               	movf btemp+1,w
   202  0676  0082               	movwf pc
   203                           global init_ram
   204                           ;Called with:
   205                           ;	high address of idata address in btemp 
   206                           ;	low address of idata address in btemp+1 
   207                           ;	low address of data in FSR
   208                           ;	high address + 1 of data in btemp-1
   209  0677                     init_ram:
   210  0677  120A  118A  2673   	fcall init_fetch
              120A  118A         
   211  067C  0080               	movwf indf,f
   212  067D  0A84               	incf fsr,f
   213  067E  0804               	movf fsr,w
   214  067F  067D               	xorwf btemp-1,w
   215  0680  1903               	btfsc status,2
   216  0681  3400               	retlw 0
   217  0682  0AFF               	incf btemp+1,f
   218  0683  1903               	btfsc status,2
   219  0684  0AFE               	incf btemp,f
   220  0685  2E77               	goto init_ram
   221                           ; Initialize objects allocated to BANK0
   222                           psect cinit,class=CODE,delta=2
   223                           global init_ram, __pidataBANK0
   224  0687  1383               	bcf	status, 7	;select IRP bank0
   225  0688  3031               	movlw low(__pdataBANK0+17)
   226  0689  00FD               	movwf btemp-1,f
   227  068A  3006               	movlw high(__pidataBANK0)
   228  068B  00FE               	movwf btemp,f
   229  068C  3062               	movlw low(__pidataBANK0)
   230  068D  00FF               	movwf btemp+1,f
   231  068E  3020               	movlw low(__pdataBANK0)
   232  068F  0084               	movwf fsr,f
   233  0690  120A  118A  2677   	fcall init_ram
              120A  118A         
   234                           psect cinit,class=CODE,delta=2
   235                           global end_of_initialization
   236                           
   237                           ;End of C runtime variable initialization code
   238                           
   239  0695                     end_of_initialization:
   240  0695  0183               clrf status
   241  0696  120A  118A  2F31   ljmp _main	;jump to C main() function
   242                           psect	cstackCOMMON,class=COMMON,space=1
   243                           global __pcstackCOMMON
   244  0070                     __pcstackCOMMON:
   245                           	global	?_DelayMs
   246  0070                     ?_DelayMs:	; 0 bytes @ 0x0
   247                           	global	?_i2c_init
   248  0070                     ?_i2c_init:	; 0 bytes @ 0x0
   249                           	global	??_i2c_init
   250  0070                     ??_i2c_init:	; 0 bytes @ 0x0
   251                           	global	?_serial_init
   252  0070                     ?_serial_init:	; 0 bytes @ 0x0
   253                           	global	??_serial_init
   254  0070                     ??_serial_init:	; 0 bytes @ 0x0
   255                           	global	?_I2CWrite
   256  0070                     ?_I2CWrite:	; 0 bytes @ 0x0
   257                           	global	??_I2CWrite
   258  0070                     ??_I2CWrite:	; 0 bytes @ 0x0
   259                           	global	?_I2CRead
   260  0070                     ?_I2CRead:	; 0 bytes @ 0x0
   261                           	global	?_WaitMSSP
   262  0070                     ?_WaitMSSP:	; 0 bytes @ 0x0
   263                           	global	??_WaitMSSP
   264  0070                     ??_WaitMSSP:	; 0 bytes @ 0x0
   265                           	global	?_putch
   266  0070                     ?_putch:	; 0 bytes @ 0x0
   267                           	global	??_putch
   268  0070                     ??_putch:	; 0 bytes @ 0x0
   269                           	global	?_main
   270  0070                     ?_main:	; 0 bytes @ 0x0
   271                           	global	?_printf
   272  0070                     ?_printf:	; 2 bytes @ 0x0
   273                           	global	putch@Data
   274  0070                     putch@Data:	; 1 bytes @ 0x0
   275                           	global	DelayMs@Ms
   276  0070                     DelayMs@Ms:	; 2 bytes @ 0x0
   277  0070                     	ds	1
   278                           	global	??_printf
   279  0071                     ??_printf:	; 0 bytes @ 0x1
   280  0071                     	ds	1
   281                           	global	??_DelayMs
   282  0072                     ??_DelayMs:	; 0 bytes @ 0x2
   283                           	global	printf@ap
   284  0072                     printf@ap:	; 1 bytes @ 0x2
   285                           	global	DelayMs@delay_cnst
   286  0072                     DelayMs@delay_cnst:	; 2 bytes @ 0x2
   287  0072                     	ds	1
   288                           	global	printf@f
   289  0073                     printf@f:	; 1 bytes @ 0x3
   290  0073                     	ds	1
   291                           	global	??_I2CRead
   292  0074                     ??_I2CRead:	; 0 bytes @ 0x4
   293                           	global	printf@c
   294  0074                     printf@c:	; 1 bytes @ 0x4
   295                           	global	I2CRead@y
   296  0074                     I2CRead@y:	; 2 bytes @ 0x4
   297  0074                     	ds	2
   298                           	global	??_main
   299  0076                     ??_main:	; 0 bytes @ 0x6
   300 ;;Data sizes: Strings 9, constant 0, data 17, bss 1, persistent 0 stack 0
   301 ;;Auto spaces:   Size  Autos    Used
   302 ;; COMMON          14      6       7
   303 ;; BANK0           80      0      17
   304 ;; BANK1           80      0       0
   305 ;; BANK3           96      0       0
   306 ;; BANK2           96      0       0
   307                           
   308 ;;
   309 ;; Pointer list with targets:
   310                           
   311 ;; printf@f	PTR const unsigned char  size(1) Largest target is 5
   312 ;;		 -> STR_2(CODE[4]), STR_1(CODE[5]), 
   313 ;;
   314 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   315 ;;		 -> ?_printf(COMMON[2]), 
   316 ;;
   317 ;; S1288$_cp	PTR const unsigned char  size(1) Largest target is 0
   318 ;;
   319 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   320 ;;
   321                           
   322                           
   323 ;;
   324 ;; Critical Paths under _main in COMMON
   325 ;;
   326 ;;   _main->_I2CRead
   327 ;;   _I2CRead->_DelayMs
   328 ;;   _printf->_putch
   329 ;;
   330 ;; Critical Paths under _main in BANK0
   331 ;;
   332 ;;   None.
   333 ;;
   334 ;; Critical Paths under _main in BANK1
   335 ;;
   336 ;;   None.
   337 ;;
   338 ;; Critical Paths under _main in BANK3
   339 ;;
   340 ;;   None.
   341 ;;
   342 ;; Critical Paths under _main in BANK2
   343 ;;
   344 ;;   None.
   345                           
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   348 ;;
   349                           
   350 ;;
   351 ;;Call Graph Tables:
   352 ;;
   353 ;; ---------------------------------------------------------------------------------
   354 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   355 ;; ---------------------------------------------------------------------------------
   356 ;; (0) _main                                                 0     0      0     180
   357 ;;                            _DelayMs
   358 ;;                           _i2c_init
   359 ;;                        _serial_init
   360 ;;                             _printf
   361 ;;                           _I2CWrite
   362 ;;                            _I2CRead
   363 ;; ---------------------------------------------------------------------------------
   364 ;; (1) _I2CRead                                              2     2      0      90
   365 ;;                                              4 COMMON     2     2      0
   366 ;;                           _WaitMSSP
   367 ;;                              _putch
   368 ;;                            _DelayMs
   369 ;; ---------------------------------------------------------------------------------
   370 ;; (1) _I2CWrite                                             1     1      0       0
   371 ;;                                              0 COMMON     1     1      0
   372 ;;                           _WaitMSSP
   373 ;; ---------------------------------------------------------------------------------
   374 ;; (1) _printf                                              10    10      0      45
   375 ;;                                              1 COMMON     4     4      0
   376 ;;                              _putch
   377 ;; ---------------------------------------------------------------------------------
   378 ;; (2) _putch                                                1     1      0      15
   379 ;;                                              0 COMMON     1     1      0
   380 ;; ---------------------------------------------------------------------------------
   381 ;; (2) _WaitMSSP                                             0     0      0       0
   382 ;; ---------------------------------------------------------------------------------
   383 ;; (1) _serial_init                                          0     0      0       0
   384 ;; ---------------------------------------------------------------------------------
   385 ;; (1) _i2c_init                                             0     0      0       0
   386 ;; ---------------------------------------------------------------------------------
   387 ;; (2) _DelayMs                                              4     2      2      45
   388 ;;                                              0 COMMON     4     2      2
   389 ;; ---------------------------------------------------------------------------------
   390 ;; Estimated maximum stack depth 2
   391 ;; ---------------------------------------------------------------------------------
   392                           
   393 ;; Call Graph Graphs:
   394                           
   395 ;; _main (ROOT)
   396 ;;   _DelayMs
   397 ;;   _i2c_init
   398 ;;   _serial_init
   399 ;;   _printf
   400 ;;     _putch
   401 ;;   _I2CWrite
   402 ;;     _WaitMSSP
   403 ;;   _I2CRead
   404 ;;     _WaitMSSP
   405 ;;     _putch
   406 ;;     _DelayMs
   407 ;;
   408                           
   409 ;; Address spaces:
   410                           
   411 ;;Name               Size   Autos  Total    Cost      Usage
   412 ;;BANK3               60      0       0       9        0.0%
   413 ;;BITBANK3            60      0       0       8        0.0%
   414 ;;SFR3                 0      0       0       4        0.0%
   415 ;;BITSFR3              0      0       0       4        0.0%
   416 ;;BANK2               60      0       0      11        0.0%
   417 ;;BITBANK2            60      0       0      10        0.0%
   418 ;;SFR2                 0      0       0       5        0.0%
   419 ;;BITSFR2              0      0       0       5        0.0%
   420 ;;SFR1                 0      0       0       2        0.0%
   421 ;;BITSFR1              0      0       0       2        0.0%
   422 ;;BANK1               50      0       0       7        0.0%
   423 ;;BITBANK1            50      0       0       6        0.0%
   424 ;;CODE                 0      0       0       0        0.0%
   425 ;;DATA                 0      0      1A      12        0.0%
   426 ;;ABS                  0      0      18       3        0.0%
   427 ;;NULL                 0      0       0       0        0.0%
   428 ;;STACK                0      0       2       2        0.0%
   429 ;;BANK0               50      0      11       5       21.3%
   430 ;;BITBANK0            50      0       0       4        0.0%
   431 ;;SFR0                 0      0       0       1        0.0%
   432 ;;BITSFR0              0      0       0       1        0.0%
   433 ;;COMMON               E      6       7       1       50.0%
   434 ;;BITCOMMON            E      0       0       0        0.0%
   435 ;;EEDATA             100      0       0       0        0.0%
   436                           
   437                           	global	_main
   438                           psect	maintext,global,class=CODE,delta=2
   439                           global __pmaintext
   440  0731                     __pmaintext:
   441                           
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 22 in file "F:\pic projects\eeprom read\eeprom.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;		None               void
   451 ;; Registers used:
   452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 17F/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels required when called:    2
   464 ;; This function calls:
   465 ;;		_DelayMs
   466 ;;		_i2c_init
   467 ;;		_serial_init
   468 ;;		_printf
   469 ;;		_I2CWrite
   470 ;;		_I2CRead
   471 ;; This function is called by:
   472 ;;		Startup code after reset
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           psect	maintext
   476                           	file	"F:\pic projects\eeprom read\eeprom.c"
   477                           	line	22
   478                           	global	__size_of_main
   479  0055                     	__size_of_main	equ	__end_of_main-_main
   480                           	
   481  0731                     _main:	
   482                           	opt	stack 6
   483                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   484                           	line	23
   485                           	
   486  0731                     l2774:	
   487                           ;eeprom.c: 23: DelayMs(100);
   488  0731  3064               	movlw	low(064h)
   489  0732  00F0               	movwf	(?_DelayMs)
   490  0733  3000               	movlw	high(064h)
   491  0734  00F1               	movwf	((?_DelayMs))+1
   492  0735  120A  118A  26BA   	fcall	_DelayMs
              120A  118A         
   493                           	line	24
   494                           	
   495  073A                     l2776:	
   496                           ;eeprom.c: 24: i2c_init();
   497  073A  120A  118A  2653   	fcall	_i2c_init
              120A  118A         
   498                           	line	25
   499                           	
   500  073F                     l2778:	
   501                           ;eeprom.c: 25: serial_init();
   502  073F  120A  118A  2645   	fcall	_serial_init
              120A  118A         
   503                           	line	26
   504                           	
   505  0744                     l2780:	
   506                           ;eeprom.c: 26: printf("ggda");
   507  0744  3001               	movlw	((STR_1-__stringbase))&0ffh
   508  0745  120A  118A  2699   	fcall	_printf
              120A  118A         
   509                           	line	27
   510                           	
   511  074A                     l2782:	
   512                           ;eeprom.c: 27: DelayMs(20);
   513  074A  3014               	movlw	low(014h)
   514  074B  00F0               	movwf	(?_DelayMs)
   515  074C  3000               	movlw	high(014h)
   516  074D  00F1               	movwf	((?_DelayMs))+1
   517  074E  120A  118A  26BA   	fcall	_DelayMs
              120A  118A         
   518                           	line	28
   519                           ;eeprom.c: 28: I2CWrite();
   520  0753  120A  118A  26EF   	fcall	_I2CWrite
              120A  118A         
   521                           	line	29
   522                           	
   523  0758                     l2784:	
   524                           ;eeprom.c: 29: DelayMs(50);
   525  0758  3032               	movlw	low(032h)
   526  0759  00F0               	movwf	(?_DelayMs)
   527  075A  3000               	movlw	high(032h)
   528  075B  00F1               	movwf	((?_DelayMs))+1
   529  075C  120A  118A  26BA   	fcall	_DelayMs
              120A  118A         
   530                           	line	30
   531                           	
   532  0761                     l2786:	
   533                           ;eeprom.c: 30: printf("hai");
   534  0761  3006               	movlw	((STR_2-__stringbase))&0ffh
   535  0762  120A  118A  2699   	fcall	_printf
              120A  118A         
   536                           	line	31
   537                           ;eeprom.c: 31: while(1)
   538                           	
   539  0767                     l705:	
   540                           	line	33
   541                           ;eeprom.c: 32: {
   542                           ;eeprom.c: 33: I2CRead();
   543  0767  120A  118A  2786   	fcall	_I2CRead
              120A  118A         
   544                           	line	34
   545                           	
   546  076C                     l2788:	
   547                           ;eeprom.c: 34: TXREG='\n';
   548  076C  300A               	movlw	(0Ah)
   549  076D  1283               	bcf	status, 5	;RP0=0, select bank0
   550  076E  1303               	bcf	status, 6	;RP1=0, select bank0
   551  076F  0099               	movwf	(25)	;volatile
   552                           	line	35
   553                           ;eeprom.c: 35: while(TXIF==0);
   554  0770  2F71               	goto	l706
   555                           	
   556  0771                     l707:	
   557                           	
   558  0771                     l706:	
   559  0771  1E0C               	btfss	(100/8),(100)&7
   560  0772  2F74               	goto	u2321
   561  0773  2F75               	goto	u2320
   562  0774                     u2321:
   563  0774  2F71               	goto	l706
   564  0775                     u2320:
   565  0775  2F76               	goto	l2790
   566                           	
   567  0776                     l708:	
   568                           	line	36
   569                           	
   570  0776                     l2790:	
   571                           ;eeprom.c: 36: TXREG='\r';
   572  0776  300D               	movlw	(0Dh)
   573  0777  0099               	movwf	(25)	;volatile
   574                           	line	37
   575                           	
   576  0778                     l2792:	
   577                           ;eeprom.c: 37: DelayMs(500);
   578  0778  30F4               	movlw	low(01F4h)
   579  0779  00F0               	movwf	(?_DelayMs)
   580  077A  3001               	movlw	high(01F4h)
   581  077B  00F1               	movwf	((?_DelayMs))+1
   582  077C  120A  118A  26BA   	fcall	_DelayMs
              120A  118A         
   583  0781  2F67               	goto	l705
   584                           	line	38
   585                           	
   586  0782                     l709:	
   587                           	line	31
   588  0782  2F67               	goto	l705
   589                           	
   590  0783                     l710:	
   591                           	line	39
   592                           	
   593  0783                     l711:	
   594                           	global	start
   595  0783  120A  118A  2800   	ljmp	start
   596                           	opt stack 0
   597                           GLOBAL	__end_of_main
   598  0786                     	__end_of_main:
   599 ;; =============== function _main ends ============
   600                           
   601                           	signat	_main,88
   602                           	global	_I2CRead
   603                           psect	text149,local,class=CODE,delta=2
   604                           global __ptext149
   605  0786                     __ptext149:
   606                           
   607 ;; *************** function _I2CRead *****************
   608 ;; Defined at:
   609 ;;		line 58 in file "F:\pic projects\eeprom read\eeprom.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  y               2    4[COMMON] int 
   614 ;; Return value:  Size  Location     Type
   615 ;;		None               void
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         2       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         2       0       0       0       0
   627 ;;Total ram usage:        2 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    1
   630 ;; This function calls:
   631 ;;		_WaitMSSP
   632 ;;		_putch
   633 ;;		_DelayMs
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           psect	text149
   639                           	file	"F:\pic projects\eeprom read\eeprom.c"
   640                           	line	58
   641                           	global	__size_of_I2CRead
   642  007A                     	__size_of_I2CRead	equ	__end_of_I2CRead-_I2CRead
   643                           	
   644  0786                     _I2CRead:	
   645                           	opt	stack 6
   646                           ; Regs used in _I2CRead: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   647                           	line	60
   648                           	
   649  0786                     l2728:	
   650                           ;eeprom.c: 59: int y;
   651                           ;eeprom.c: 60: SEN=1;
   652  0786  1683               	bsf	status, 5	;RP0=1, select bank1
   653  0787  1303               	bcf	status, 6	;RP1=0, select bank1
   654  0788  1411               	bsf	(1160/8)^080h,(1160)&7
   655                           	line	61
   656                           	
   657  0789                     l2730:	
   658                           ;eeprom.c: 61: WaitMSSP();
   659  0789  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   660                           	line	62
   661                           	
   662  078E                     l2732:	
   663                           ;eeprom.c: 62: SSPBUF=0xa0;
   664  078E  30A0               	movlw	(0A0h)
   665  078F  1283               	bcf	status, 5	;RP0=0, select bank0
   666  0790  1303               	bcf	status, 6	;RP1=0, select bank0
   667  0791  0093               	movwf	(19)	;volatile
   668                           	line	63
   669                           	
   670  0792                     l2734:	
   671                           ;eeprom.c: 63: WaitMSSP();
   672  0792  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   673                           	line	64
   674                           	
   675  0797                     l2736:	
   676                           ;eeprom.c: 64: SSPBUF=0x00;
   677  0797  1283               	bcf	status, 5	;RP0=0, select bank0
   678  0798  1303               	bcf	status, 6	;RP1=0, select bank0
   679  0799  0193               	clrf	(19)	;volatile
   680                           	line	65
   681                           	
   682  079A                     l2738:	
   683                           ;eeprom.c: 65: WaitMSSP();
   684  079A  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   685                           	line	66
   686                           	
   687  079F                     l2740:	
   688                           ;eeprom.c: 66: for(y=0;y<16;y++)
   689  079F  01F4               	clrf	(I2CRead@y)
   690  07A0  01F5               	clrf	(I2CRead@y+1)
   691                           	
   692  07A1                     l2742:	
   693  07A1  0875               	movf	(I2CRead@y+1),w
   694  07A2  3A80               	xorlw	80h
   695  07A3  00FF               	movwf	btemp+1
   696  07A4  3080               	movlw	(high(010h))^80h
   697  07A5  027F               	subwf	btemp+1,w
   698  07A6  1D03               	skipz
   699  07A7  2FAA               	goto	u2305
   700  07A8  3010               	movlw	low(010h)
   701  07A9  0274               	subwf	(I2CRead@y),w
   702  07AA                     u2305:
   703                           
   704  07AA  1C03               	skipc
   705  07AB  2FAD               	goto	u2301
   706  07AC  2FAE               	goto	u2300
   707  07AD                     u2301:
   708  07AD  2FB0               	goto	l719
   709  07AE                     u2300:
   710  07AE  2FF7               	goto	l720
   711                           	
   712  07AF                     l2744:	
   713  07AF  2FF7               	goto	l720
   714                           	line	67
   715                           	
   716  07B0                     l719:	
   717                           	line	68
   718                           ;eeprom.c: 67: {
   719                           ;eeprom.c: 68: RSEN=1;
   720  07B0  1683               	bsf	status, 5	;RP0=1, select bank1
   721  07B1  1303               	bcf	status, 6	;RP1=0, select bank1
   722  07B2  1491               	bsf	(1161/8)^080h,(1161)&7
   723                           	line	69
   724                           	
   725  07B3                     l2746:	
   726                           ;eeprom.c: 69: WaitMSSP();
   727  07B3  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   728                           	line	70
   729                           	
   730  07B8                     l2748:	
   731                           ;eeprom.c: 70: SSPBUF=0xa1;
   732  07B8  30A1               	movlw	(0A1h)
   733  07B9  1283               	bcf	status, 5	;RP0=0, select bank0
   734  07BA  1303               	bcf	status, 6	;RP1=0, select bank0
   735  07BB  0093               	movwf	(19)	;volatile
   736                           	line	71
   737                           	
   738  07BC                     l2750:	
   739                           ;eeprom.c: 71: WaitMSSP();
   740  07BC  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   741                           	line	72
   742                           	
   743  07C1                     l2752:	
   744                           ;eeprom.c: 72: RCEN=1;
   745  07C1  1683               	bsf	status, 5	;RP0=1, select bank1
   746  07C2  1303               	bcf	status, 6	;RP1=0, select bank1
   747  07C3  1591               	bsf	(1163/8)^080h,(1163)&7
   748                           	line	73
   749                           	
   750  07C4                     l2754:	
   751                           ;eeprom.c: 73: WaitMSSP();
   752  07C4  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   753                           	line	74
   754                           	
   755  07C9                     l2756:	
   756                           ;eeprom.c: 74: ACKDT=1;
   757  07C9  1683               	bsf	status, 5	;RP0=1, select bank1
   758  07CA  1303               	bcf	status, 6	;RP1=0, select bank1
   759  07CB  1691               	bsf	(1165/8)^080h,(1165)&7
   760                           	line	75
   761                           	
   762  07CC                     l2758:	
   763                           ;eeprom.c: 75: ACKEN=1;
   764  07CC  1611               	bsf	(1164/8)^080h,(1164)&7
   765                           	line	76
   766                           	
   767  07CD                     l2760:	
   768                           ;eeprom.c: 76: PEN=1;
   769  07CD  1511               	bsf	(1162/8)^080h,(1162)&7
   770                           	line	77
   771                           	
   772  07CE                     l2762:	
   773                           ;eeprom.c: 77: WaitMSSP();
   774  07CE  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   775                           	line	78
   776                           	
   777  07D3                     l2764:	
   778                           ;eeprom.c: 78: putch(SSPBUF);
   779  07D3  1283               	bcf	status, 5	;RP0=0, select bank0
   780  07D4  1303               	bcf	status, 6	;RP1=0, select bank0
   781  07D5  0813               	movf	(19),w	;volatile
   782  07D6  120A  118A  2639   	fcall	_putch
              120A  118A         
   783                           	line	79
   784                           	
   785  07DB                     l2766:	
   786                           ;eeprom.c: 79: DelayMs(30);
   787  07DB  301E               	movlw	low(01Eh)
   788  07DC  00F0               	movwf	(?_DelayMs)
   789  07DD  3000               	movlw	high(01Eh)
   790  07DE  00F1               	movwf	((?_DelayMs))+1
   791  07DF  120A  118A  26BA   	fcall	_DelayMs
              120A  118A         
   792                           	line	66
   793                           	
   794  07E4                     l2768:	
   795  07E4  3001               	movlw	low(01h)
   796  07E5  07F4               	addwf	(I2CRead@y),f
   797  07E6  1803               	skipnc
   798  07E7  0AF5               	incf	(I2CRead@y+1),f
   799  07E8  3000               	movlw	high(01h)
   800  07E9  07F5               	addwf	(I2CRead@y+1),f
   801                           	
   802  07EA                     l2770:	
   803  07EA  0875               	movf	(I2CRead@y+1),w
   804  07EB  3A80               	xorlw	80h
   805  07EC  00FF               	movwf	btemp+1
   806  07ED  3080               	movlw	(high(010h))^80h
   807  07EE  027F               	subwf	btemp+1,w
   808  07EF  1D03               	skipz
   809  07F0  2FF3               	goto	u2315
   810  07F1  3010               	movlw	low(010h)
   811  07F2  0274               	subwf	(I2CRead@y),w
   812  07F3                     u2315:
   813                           
   814  07F3  1C03               	skipc
   815  07F4  2FF6               	goto	u2311
   816  07F5  2FF7               	goto	u2310
   817  07F6                     u2311:
   818  07F6  2FB0               	goto	l719
   819  07F7                     u2310:
   820                           	
   821  07F7                     l720:	
   822                           	line	81
   823                           ;eeprom.c: 80: }
   824                           ;eeprom.c: 81: PEN=1;
   825  07F7  1683               	bsf	status, 5	;RP0=1, select bank1
   826  07F8  1303               	bcf	status, 6	;RP1=0, select bank1
   827  07F9  1511               	bsf	(1162/8)^080h,(1162)&7
   828                           	line	82
   829                           	
   830  07FA                     l2772:	
   831                           ;eeprom.c: 82: WaitMSSP();
   832  07FA  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   833                           	line	83
   834                           	
   835  07FF                     l721:	
   836  07FF  0008               	return
   837                           	opt stack 0
   838                           GLOBAL	__end_of_I2CRead
   839  0800                     	__end_of_I2CRead:
   840 ;; =============== function _I2CRead ends ============
   841                           
   842                           	signat	_I2CRead,88
   843                           	global	_I2CWrite
   844                           psect	text150,local,class=CODE,delta=2
   845                           global __ptext150
   846  06EF                     __ptext150:
   847                           
   848 ;; *************** function _I2CWrite *****************
   849 ;; Defined at:
   850 ;;		line 41 in file "F:\pic projects\eeprom read\eeprom.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;		None               void
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          1       0       0       0       0
   867 ;;      Totals:         1       0       0       0       0
   868 ;;Total ram usage:        1 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		_WaitMSSP
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           psect	text150
   878                           	file	"F:\pic projects\eeprom read\eeprom.c"
   879                           	line	41
   880                           	global	__size_of_I2CWrite
   881  0042                     	__size_of_I2CWrite	equ	__end_of_I2CWrite-_I2CWrite
   882                           	
   883  06EF                     _I2CWrite:	
   884                           	opt	stack 6
   885                           ; Regs used in _I2CWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   886                           	line	42
   887                           	
   888  06EF                     l2700:	
   889                           ;eeprom.c: 42: SEN=1;
   890  06EF  1683               	bsf	status, 5	;RP0=1, select bank1
   891  06F0  1303               	bcf	status, 6	;RP1=0, select bank1
   892  06F1  1411               	bsf	(1160/8)^080h,(1160)&7
   893                           	line	43
   894                           	
   895  06F2                     l2702:	
   896                           ;eeprom.c: 43: WaitMSSP();
   897  06F2  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   898                           	line	44
   899                           	
   900  06F7                     l2704:	
   901                           ;eeprom.c: 44: SSPBUF=0xa0;
   902  06F7  30A0               	movlw	(0A0h)
   903  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
   904  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
   905  06FA  0093               	movwf	(19)	;volatile
   906                           	line	45
   907                           	
   908  06FB                     l2706:	
   909                           ;eeprom.c: 45: WaitMSSP();
   910  06FB  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   911                           	line	46
   912                           	
   913  0700                     l2708:	
   914                           ;eeprom.c: 46: SSPBUF=0x00;
   915  0700  1283               	bcf	status, 5	;RP0=0, select bank0
   916  0701  1303               	bcf	status, 6	;RP1=0, select bank0
   917  0702  0193               	clrf	(19)	;volatile
   918                           	line	47
   919                           	
   920  0703                     l2710:	
   921                           ;eeprom.c: 47: WaitMSSP();
   922  0703  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   923                           	line	48
   924                           	
   925  0708                     l2712:	
   926                           ;eeprom.c: 48: for(i=0;i<16;i++)
   927  0708  01F6               	clrf	(_i)
   928                           	
   929  0709                     l2714:	
   930  0709  3010               	movlw	(010h)
   931  070A  0276               	subwf	(_i),w
   932  070B  1C03               	skipc
   933  070C  2F0E               	goto	u2281
   934  070D  2F0F               	goto	u2280
   935  070E                     u2281:
   936  070E  2F11               	goto	l2718
   937  070F                     u2280:
   938  070F  2F28               	goto	l715
   939                           	
   940  0710                     l2716:	
   941  0710  2F28               	goto	l715
   942                           	line	49
   943                           	
   944  0711                     l714:	
   945                           	line	50
   946                           	
   947  0711                     l2718:	
   948                           ;eeprom.c: 49: {
   949                           ;eeprom.c: 50: SSPBUF=data[i];
   950  0711  0876               	movf	(_i),w
   951  0712  3E20               	addlw	_data&0ffh
   952  0713  0084               	movwf	fsr0
   953  0714  1383               	bcf	status, 7	;select IRP bank0
   954  0715  0800               	movf	indf,w
   955  0716  1283               	bcf	status, 5	;RP0=0, select bank0
   956  0717  1303               	bcf	status, 6	;RP1=0, select bank0
   957  0718  0093               	movwf	(19)	;volatile
   958                           	line	52
   959                           	
   960  0719                     l2720:	
   961                           ;eeprom.c: 52: WaitMSSP();
   962  0719  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   963                           	line	48
   964                           	
   965  071E                     l2722:	
   966  071E  3001               	movlw	(01h)
   967  071F  00F0               	movwf	(??_I2CWrite+0)+0
   968  0720  0870               	movf	(??_I2CWrite+0)+0,w
   969  0721  07F6               	addwf	(_i),f
   970                           	
   971  0722                     l2724:	
   972  0722  3010               	movlw	(010h)
   973  0723  0276               	subwf	(_i),w
   974  0724  1C03               	skipc
   975  0725  2F27               	goto	u2291
   976  0726  2F28               	goto	u2290
   977  0727                     u2291:
   978  0727  2F11               	goto	l2718
   979  0728                     u2290:
   980                           	
   981  0728                     l715:	
   982                           	line	54
   983                           ;eeprom.c: 53: }
   984                           ;eeprom.c: 54: PEN=1;
   985  0728  1683               	bsf	status, 5	;RP0=1, select bank1
   986  0729  1303               	bcf	status, 6	;RP1=0, select bank1
   987  072A  1511               	bsf	(1162/8)^080h,(1162)&7
   988                           	line	55
   989                           	
   990  072B                     l2726:	
   991                           ;eeprom.c: 55: WaitMSSP();
   992  072B  120A  118A  2630   	fcall	_WaitMSSP
              120A  118A         
   993                           	line	56
   994                           	
   995  0730                     l716:	
   996  0730  0008               	return
   997                           	opt stack 0
   998                           GLOBAL	__end_of_I2CWrite
   999  0731                     	__end_of_I2CWrite:
  1000 ;; =============== function _I2CWrite ends ============
  1001                           
  1002                           	signat	_I2CWrite,88
  1003                           	global	_printf
  1004                           psect	text151,local,class=CODE,delta=2
  1005                           global __ptext151
  1006  0699                     __ptext151:
  1007                           
  1008 ;; *************** function _printf *****************
  1009 ;; Defined at:
  1010 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  f               1    wreg     PTR const unsigned char 
  1013 ;;		 -> STR_2(4), STR_1(5), 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  f               1    3[COMMON] PTR const unsigned char 
  1016 ;;		 -> STR_2(4), STR_1(5), 
  1017 ;;  _val            4    0        struct .
  1018 ;;  c               1    4[COMMON] char 
  1019 ;;  ap              1    2[COMMON] PTR void [1]
  1020 ;;		 -> ?_printf(2), 
  1021 ;;  flag            1    0        unsigned char 
  1022 ;;  prec            1    0        char 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  2  694[COMMON] int 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         0       0       0       0       0
  1033 ;;      Locals:         3       0       0       0       0
  1034 ;;      Temps:          1       0       0       0       0
  1035 ;;      Totals:         4       0       0       0       0
  1036 ;;Total ram usage:        4 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    1
  1039 ;; This function calls:
  1040 ;;		_putch
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           psect	text151
  1046                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  1047                           	line	461
  1048                           	global	__size_of_printf
  1049  0021                     	__size_of_printf	equ	__end_of_printf-_printf
  1050                           	
  1051  0699                     _printf:	
  1052                           	opt	stack 6
  1053                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1054                           ;printf@f stored from wreg
  1055                           	line	537
  1056  0699  00F3               	movwf	(printf@f)
  1057                           	
  1058  069A                     l2694:	
  1059  069A  3070               	movlw	(?_printf)&0ffh
  1060  069B  00F1               	movwf	(??_printf+0)+0
  1061  069C  0871               	movf	(??_printf+0)+0,w
  1062  069D  00F2               	movwf	(printf@ap)
  1063                           	line	540
  1064  069E  2EA6               	goto	l2698
  1065                           	
  1066  069F                     l755:	
  1067                           	line	545
  1068                           	
  1069  069F                     l2696:	
  1070  069F  0874               	movf	(printf@c),w
  1071  06A0  120A  118A  2639   	fcall	_putch
              120A  118A         
  1072                           	line	546
  1073  06A5  2EA6               	goto	l2698
  1074                           	line	1525
  1075                           	
  1076  06A6                     l754:	
  1077                           	line	540
  1078                           	
  1079  06A6                     l2698:	
  1080  06A6  3001               	movlw	01h
  1081  06A7  07F3               	addwf	(printf@f),f
  1082  06A8  30FF               	movlw	-01h
  1083  06A9  0773               	addwf	(printf@f),w
  1084  06AA  0084               	movwf	fsr0
  1085  06AB  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1086  06B0  00F1               	movwf	(??_printf+0)+0
  1087  06B1  0871               	movf	(??_printf+0)+0,w
  1088  06B2  00F4               	movwf	(printf@c)
  1089  06B3  08F4               	movf	((printf@c)),f
  1090  06B4  1D03               	skipz
  1091  06B5  2EB7               	goto	u2271
  1092  06B6  2EB8               	goto	u2270
  1093  06B7                     u2271:
  1094  06B7  2E9F               	goto	l2696
  1095  06B8                     u2270:
  1096  06B8  2EB9               	goto	l757
  1097                           	
  1098  06B9                     l756:	
  1099                           	line	1533
  1100                           ;	Return value of _printf is never used
  1101                           	
  1102  06B9                     l757:	
  1103  06B9  0008               	return
  1104                           	opt stack 0
  1105                           GLOBAL	__end_of_printf
  1106  06BA                     	__end_of_printf:
  1107 ;; =============== function _printf ends ============
  1108                           
  1109                           	signat	_printf,602
  1110                           	global	_putch
  1111                           psect	text152,local,class=CODE,delta=2
  1112                           global __ptext152
  1113  0639                     __ptext152:
  1114                           
  1115 ;; *************** function _putch *****************
  1116 ;; Defined at:
  1117 ;;		line 108 in file "F:\pic projects\eeprom read\eeprom.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  Data            1    wreg     unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  Data            1    0[COMMON] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;		None               void
  1124 ;; Registers used:
  1125 ;;		wreg
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0
  1134 ;;      Totals:         1       0       0       0       0
  1135 ;;Total ram usage:        1 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_I2CRead
  1141 ;;		_printf
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           psect	text152
  1145                           	file	"F:\pic projects\eeprom read\eeprom.c"
  1146                           	line	108
  1147                           	global	__size_of_putch
  1148  000C                     	__size_of_putch	equ	__end_of_putch-_putch
  1149                           	
  1150  0639                     _putch:	
  1151                           	opt	stack 6
  1152                           ; Regs used in _putch: [wreg]
  1153                           ;putch@Data stored from wreg
  1154  0639  00F0               	movwf	(putch@Data)
  1155                           	line	109
  1156                           	
  1157  063A                     l1832:	
  1158                           ;eeprom.c: 109: while(TXIF==0);
  1159  063A  2E3B               	goto	l736
  1160                           	
  1161  063B                     l737:	
  1162                           	
  1163  063B                     l736:	
  1164  063B  1283               	bcf	status, 5	;RP0=0, select bank0
  1165  063C  1303               	bcf	status, 6	;RP1=0, select bank0
  1166  063D  1E0C               	btfss	(100/8),(100)&7
  1167  063E  2E40               	goto	u51
  1168  063F  2E41               	goto	u50
  1169  0640                     u51:
  1170  0640  2E3B               	goto	l736
  1171  0641                     u50:
  1172  0641  2E42               	goto	l1834
  1173                           	
  1174  0642                     l738:	
  1175                           	line	110
  1176                           	
  1177  0642                     l1834:	
  1178                           ;eeprom.c: 110: TXREG = Data;
  1179  0642  0870               	movf	(putch@Data),w
  1180  0643  0099               	movwf	(25)	;volatile
  1181                           	line	111
  1182                           	
  1183  0644                     l739:	
  1184  0644  0008               	return
  1185                           	opt stack 0
  1186                           GLOBAL	__end_of_putch
  1187  0645                     	__end_of_putch:
  1188 ;; =============== function _putch ends ============
  1189                           
  1190                           	signat	_putch,4216
  1191                           	global	_WaitMSSP
  1192                           psect	text153,local,class=CODE,delta=2
  1193                           global __ptext153
  1194  0630                     __ptext153:
  1195                           
  1196 ;; *************** function _WaitMSSP *****************
  1197 ;; Defined at:
  1198 ;;		line 85 in file "F:\pic projects\eeprom read\eeprom.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;		None               void
  1205 ;; Registers used:
  1206 ;;		None
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_I2CWrite
  1222 ;;		_I2CRead
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           psect	text153
  1226                           	file	"F:\pic projects\eeprom read\eeprom.c"
  1227                           	line	85
  1228                           	global	__size_of_WaitMSSP
  1229  0009                     	__size_of_WaitMSSP	equ	__end_of_WaitMSSP-_WaitMSSP
  1230                           	
  1231  0630                     _WaitMSSP:	
  1232                           	opt	stack 6
  1233                           ; Regs used in _WaitMSSP: []
  1234                           	line	86
  1235                           	
  1236  0630                     l1830:	
  1237                           ;eeprom.c: 86: while(!SSPIF);
  1238  0630  2E31               	goto	l724
  1239                           	
  1240  0631                     l725:	
  1241                           	
  1242  0631                     l724:	
  1243  0631  1283               	bcf	status, 5	;RP0=0, select bank0
  1244  0632  1303               	bcf	status, 6	;RP1=0, select bank0
  1245  0633  1D8C               	btfss	(99/8),(99)&7
  1246  0634  2E36               	goto	u41
  1247  0635  2E37               	goto	u40
  1248  0636                     u41:
  1249  0636  2E31               	goto	l724
  1250  0637                     u40:
  1251                           	
  1252  0637                     l726:	
  1253                           	line	87
  1254                           ;eeprom.c: 87: SSPIF=0;
  1255  0637  118C               	bcf	(99/8),(99)&7
  1256                           	line	88
  1257                           	
  1258  0638                     l727:	
  1259  0638  0008               	return
  1260                           	opt stack 0
  1261                           GLOBAL	__end_of_WaitMSSP
  1262  0639                     	__end_of_WaitMSSP:
  1263 ;; =============== function _WaitMSSP ends ============
  1264                           
  1265                           	signat	_WaitMSSP,88
  1266                           	global	_serial_init
  1267                           psect	text154,local,class=CODE,delta=2
  1268                           global __ptext154
  1269  0645                     __ptext154:
  1270                           
  1271 ;; *************** function _serial_init *****************
  1272 ;; Defined at:
  1273 ;;		line 99 in file "F:\pic projects\eeprom read\eeprom.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;		None               void
  1280 ;; Registers used:
  1281 ;;		wreg
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           psect	text154
  1300                           	file	"F:\pic projects\eeprom read\eeprom.c"
  1301                           	line	99
  1302                           	global	__size_of_serial_init
  1303  000E                     	__size_of_serial_init	equ	__end_of_serial_init-_serial_init
  1304                           	
  1305  0645                     _serial_init:	
  1306                           	opt	stack 7
  1307                           ; Regs used in _serial_init: [wreg]
  1308                           	line	100
  1309                           	
  1310  0645                     l1824:	
  1311                           ;eeprom.c: 100: TRISC6=1;
  1312  0645  1683               	bsf	status, 5	;RP0=1, select bank1
  1313  0646  1303               	bcf	status, 6	;RP1=0, select bank1
  1314  0647  1707               	bsf	(1086/8)^080h,(1086)&7
  1315                           	line	101
  1316                           ;eeprom.c: 101: TRISC7=1;
  1317  0648  1787               	bsf	(1087/8)^080h,(1087)&7
  1318                           	line	102
  1319                           	
  1320  0649                     l1826:	
  1321                           ;eeprom.c: 102: TXSTA=0x24;
  1322  0649  3024               	movlw	(024h)
  1323  064A  0098               	movwf	(152)^080h	;volatile
  1324                           	line	103
  1325                           ;eeprom.c: 103: SPBRG=(char)(10000/ (16 * 9.6 )) - 1;;
  1326  064B  3040               	movlw	(040h)
  1327  064C  0099               	movwf	(153)^080h	;volatile
  1328                           	line	104
  1329                           ;eeprom.c: 104: RCSTA=0x90;
  1330  064D  3090               	movlw	(090h)
  1331  064E  1283               	bcf	status, 5	;RP0=0, select bank0
  1332  064F  1303               	bcf	status, 6	;RP1=0, select bank0
  1333  0650  0098               	movwf	(24)	;volatile
  1334                           	line	105
  1335                           	
  1336  0651                     l1828:	
  1337                           ;eeprom.c: 105: TXIF=1;
  1338  0651  160C               	bsf	(100/8),(100)&7
  1339                           	line	106
  1340                           	
  1341  0652                     l733:	
  1342  0652  0008               	return
  1343                           	opt stack 0
  1344                           GLOBAL	__end_of_serial_init
  1345  0653                     	__end_of_serial_init:
  1346 ;; =============== function _serial_init ends ============
  1347                           
  1348                           	signat	_serial_init,88
  1349                           	global	_i2c_init
  1350                           psect	text155,local,class=CODE,delta=2
  1351                           global __ptext155
  1352  0653                     __ptext155:
  1353                           
  1354 ;; *************** function _i2c_init *****************
  1355 ;; Defined at:
  1356 ;;		line 90 in file "F:\pic projects\eeprom read\eeprom.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;		None               void
  1363 ;; Registers used:
  1364 ;;		wreg
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           psect	text155
  1383                           	file	"F:\pic projects\eeprom read\eeprom.c"
  1384                           	line	90
  1385                           	global	__size_of_i2c_init
  1386  000F                     	__size_of_i2c_init	equ	__end_of_i2c_init-_i2c_init
  1387                           	
  1388  0653                     _i2c_init:	
  1389                           	opt	stack 7
  1390                           ; Regs used in _i2c_init: [wreg]
  1391                           	line	91
  1392                           	
  1393  0653                     l1820:	
  1394                           ;eeprom.c: 91: TRISC3=1;
  1395  0653  1683               	bsf	status, 5	;RP0=1, select bank1
  1396  0654  1303               	bcf	status, 6	;RP1=0, select bank1
  1397  0655  1587               	bsf	(1083/8)^080h,(1083)&7
  1398                           	line	92
  1399                           ;eeprom.c: 92: TRISC4=1;
  1400  0656  1607               	bsf	(1084/8)^080h,(1084)&7
  1401                           	line	93
  1402                           	
  1403  0657                     l1822:	
  1404                           ;eeprom.c: 93: SSPCON=0x28;
  1405  0657  3028               	movlw	(028h)
  1406  0658  1283               	bcf	status, 5	;RP0=0, select bank0
  1407  0659  1303               	bcf	status, 6	;RP1=0, select bank0
  1408  065A  0094               	movwf	(20)	;volatile
  1409                           	line	95
  1410                           ;eeprom.c: 95: SSPADD=(10000 / (4 * 100)) - 1;
  1411  065B  3018               	movlw	(018h)
  1412  065C  1683               	bsf	status, 5	;RP0=1, select bank1
  1413  065D  1303               	bcf	status, 6	;RP1=0, select bank1
  1414  065E  0093               	movwf	(147)^080h	;volatile
  1415                           	line	96
  1416                           ;eeprom.c: 96: SSPSTAT=80;
  1417  065F  3050               	movlw	(050h)
  1418  0660  0094               	movwf	(148)^080h	;volatile
  1419                           	line	97
  1420                           	
  1421  0661                     l730:	
  1422  0661  0008               	return
  1423                           	opt stack 0
  1424                           GLOBAL	__end_of_i2c_init
  1425  0662                     	__end_of_i2c_init:
  1426 ;; =============== function _i2c_init ends ============
  1427                           
  1428                           	signat	_i2c_init,88
  1429                           	global	_DelayMs
  1430                           psect	text156,local,class=CODE,delta=2
  1431                           global __ptext156
  1432  06BA                     __ptext156:
  1433                           
  1434 ;; *************** function _DelayMs *****************
  1435 ;; Defined at:
  1436 ;;		line 113 in file "F:\pic projects\eeprom read\eeprom.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  Ms              2    0[COMMON] unsigned int 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  delay_cnst      2    2[COMMON] int 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, btemp+1
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         2       0       0       0       0
  1451 ;;      Locals:         2       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0
  1453 ;;      Totals:         4       0       0       0       0
  1454 ;;Total ram usage:        4 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;;		_I2CRead
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           psect	text156
  1464                           	file	"F:\pic projects\eeprom read\eeprom.c"
  1465                           	line	113
  1466                           	global	__size_of_DelayMs
  1467  0035                     	__size_of_DelayMs	equ	__end_of_DelayMs-_DelayMs
  1468                           	
  1469  06BA                     _DelayMs:	
  1470                           	opt	stack 6
  1471                           ; Regs used in _DelayMs: [wreg+status,2+status,0+btemp+1]
  1472                           	line	115
  1473                           	
  1474  06BA                     l1804:	
  1475                           ;eeprom.c: 114: int delay_cnst;
  1476                           ;eeprom.c: 115: while(Ms>0)
  1477  06BA  2EE7               	goto	l1818
  1478                           	
  1479  06BB                     l743:	
  1480                           	line	117
  1481                           	
  1482  06BB                     l1806:	
  1483                           ;eeprom.c: 116: {
  1484                           ;eeprom.c: 117: Ms--;
  1485  06BB  3001               	movlw	low(01h)
  1486  06BC  02F0               	subwf	(DelayMs@Ms),f
  1487  06BD  3000               	movlw	high(01h)
  1488  06BE  1C03               	skipc
  1489  06BF  03F1               	decf	(DelayMs@Ms+1),f
  1490  06C0  02F1               	subwf	(DelayMs@Ms+1),f
  1491                           	line	118
  1492                           	
  1493  06C1                     l1808:	
  1494                           ;eeprom.c: 118: for(delay_cnst = 0;delay_cnst <220;delay_cnst++);
  1495  06C1  01F2               	clrf	(DelayMs@delay_cnst)
  1496  06C2  01F3               	clrf	(DelayMs@delay_cnst+1)
  1497                           	
  1498  06C3                     l1810:	
  1499  06C3  0873               	movf	(DelayMs@delay_cnst+1),w
  1500  06C4  3A80               	xorlw	80h
  1501  06C5  00FF               	movwf	btemp+1
  1502  06C6  3080               	movlw	(high(0DCh))^80h
  1503  06C7  027F               	subwf	btemp+1,w
  1504  06C8  1D03               	skipz
  1505  06C9  2ECC               	goto	u15
  1506  06CA  30DC               	movlw	low(0DCh)
  1507  06CB  0272               	subwf	(DelayMs@delay_cnst),w
  1508  06CC                     u15:
  1509                           
  1510  06CC  1C03               	skipc
  1511  06CD  2ECF               	goto	u11
  1512  06CE  2ED0               	goto	u10
  1513  06CF                     u11:
  1514  06CF  2ED2               	goto	l1814
  1515  06D0                     u10:
  1516  06D0  2EE7               	goto	l1818
  1517                           	
  1518  06D1                     l1812:	
  1519  06D1  2EE7               	goto	l1818
  1520                           	
  1521  06D2                     l744:	
  1522                           	
  1523  06D2                     l1814:	
  1524  06D2  3001               	movlw	low(01h)
  1525  06D3  07F2               	addwf	(DelayMs@delay_cnst),f
  1526  06D4  1803               	skipnc
  1527  06D5  0AF3               	incf	(DelayMs@delay_cnst+1),f
  1528  06D6  3000               	movlw	high(01h)
  1529  06D7  07F3               	addwf	(DelayMs@delay_cnst+1),f
  1530                           	
  1531  06D8                     l1816:	
  1532  06D8  0873               	movf	(DelayMs@delay_cnst+1),w
  1533  06D9  3A80               	xorlw	80h
  1534  06DA  00FF               	movwf	btemp+1
  1535  06DB  3080               	movlw	(high(0DCh))^80h
  1536  06DC  027F               	subwf	btemp+1,w
  1537  06DD  1D03               	skipz
  1538  06DE  2EE1               	goto	u25
  1539  06DF  30DC               	movlw	low(0DCh)
  1540  06E0  0272               	subwf	(DelayMs@delay_cnst),w
  1541  06E1                     u25:
  1542                           
  1543  06E1  1C03               	skipc
  1544  06E2  2EE4               	goto	u21
  1545  06E3  2EE5               	goto	u20
  1546  06E4                     u21:
  1547  06E4  2ED2               	goto	l1814
  1548  06E5                     u20:
  1549  06E5  2EE7               	goto	l1818
  1550                           	
  1551  06E6                     l745:	
  1552  06E6  2EE7               	goto	l1818
  1553                           	line	119
  1554                           	
  1555  06E7                     l742:	
  1556                           	line	115
  1557                           	
  1558  06E7                     l1818:	
  1559  06E7  0871               	movf	((DelayMs@Ms+1)),w
  1560  06E8  0470               	iorwf	((DelayMs@Ms)),w
  1561  06E9  1D03               	skipz
  1562  06EA  2EEC               	goto	u31
  1563  06EB  2EED               	goto	u30
  1564  06EC                     u31:
  1565  06EC  2EBB               	goto	l1806
  1566  06ED                     u30:
  1567  06ED  2EEE               	goto	l747
  1568                           	
  1569  06EE                     l746:	
  1570                           	line	120
  1571                           	
  1572  06EE                     l747:	
  1573  06EE  0008               	return
  1574                           	opt stack 0
  1575                           GLOBAL	__end_of_DelayMs
  1576  06EF                     	__end_of_DelayMs:
  1577 ;; =============== function _DelayMs ends ============
  1578                           
  1579                           	signat	_DelayMs,4216
  1580                           psect	text157,local,class=CODE,delta=2
  1581                           global __ptext157
  1582  0000                     __ptext157:
  1583                           	global	btemp
  1584  007E                     	btemp set 07Eh
  1585                           
  1586                           	DABS	1,126,2	;btemp
  1587                           	global	wtemp0
  1588  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Nov 06 21:30:14 2014

                   _i 0076                     pc 0002                    _RD 0C60                    u10 06D0  
                  u11 06CF                    u20 06E5                    u21 06E4                    u30 06ED  
                  u31 06EC                    u15 06CC                    u40 0637                    u25 06E1  
                  u41 0636                    u50 0641                    u51 0640                    _WR 0C61  
                  fsr 0004                   l710 0783                   l711 0783                   l720 07F7  
                 l721 07FF                   l705 0767                   l730 0661                   l714 0711  
                 l706 0771                   l715 0728                   l707 0771                   l724 0631  
                 l716 0730                   l708 0776                   l733 0652                   l725 0631  
                 l709 0782                   l742 06E7                   l726 0637                   l743 06BB  
                 l727 0638                   l719 07B0                   l744 06D2                   l736 063B  
                 l745 06E6                   l737 063B                   l746 06EE                   l738 0642  
                 l754 06A6                   l747 06EE                   l739 0644                   l755 069F  
                 l756 06B9                   l757 06B9                   _GIE 005F                   _PEN 048A  
                 _SEN 0488       __end_of_I2CRead 0800                   fsr0 0004                   indf 0000  
                l1810 06C3                  l1812 06D1                  l1804 06BA                  l1820 0653  
                l2700 06EF                  l1814 06D2                  l1806 06BB                  l1822 0657  
                l1830 0630                  l2710 0703                  l2702 06F2                  l1816 06D8  
                l1808 06C1                  l1824 0645                  l1832 063A                  l2720 0719  
                l2712 0708                  l2704 06F7                  l1818 06E7                  l1826 0649  
                l1834 0642                  l2722 071E                  l2714 0709                  l2706 06FB  
                l2730 0789                  l1828 0651                  l2724 0722                  l2716 0710  
                l2708 0700                  l2740 079F                  l2732 078E                  l2726 072B  
                l2718 0711                  l2750 07BC                  l2742 07A1                  l2734 0792  
                l2760 07CD                  l2752 07C1                  l2744 07AF                  l2736 0797  
                l2728 0786                  l2770 07EA                  l2762 07CE                  l2754 07C4  
                l2746 07B3                  l2738 079A                  l2772 07FA                  l2764 07D3  
                l2756 07C9                  l2748 07B8                  l2780 0744                  l2694 069A  
                l2766 07DB                  l2758 07CC                  l2790 0776                  l2782 074A  
                l2774 0731                  l2696 069F                  l2768 07E4                  l2792 0778  
                l2784 0758                  l2776 073A                  l2698 06A6                  l2786 0761  
                l2778 073F                  l2788 076C                  STR_1 0009                  STR_2 000E  
                u2300 07AE                  u2301 07AD                  u2310 07F7                  u2311 07F6  
                u2320 0775                  u2305 07AA                  u2321 0774                  u2315 07F3  
                u2270 06B8                  u2271 06B7                  u2280 070F                  u2281 070E  
                u2290 0728                  u2291 0727                  _RCEN 048B                  _RSEN 0489  
                _WREN 0C62                  _TXIF 0064                  _data 0020                  _main 0731  
                btemp 007E      __end_of_I2CWrite 0731                  start 0000       __end_of_DelayMs 06EF  
               ?_main 0070                 _ACKEN 048C                 _ACKDT 048D                 _EEADR 010D  
               _CARRY 0018                 _RCSTA 0018                 _SPBRG 0099                 _SSPIF 0063  
               _TXREG 0019                 _TXSTA 0098                 _putch 0639                 pclath 000A  
               status 0003                 wtemp0 007E          __end_of_main 0786      __end_of_i2c_init 0662  
           ??_I2CRead 0074                ??_main 0076      __end_of_WaitMSSP 0639                _EEDATA 010C  
              _EECON1 018C                _EECON2 018D                ?_putch 0070             ??_DelayMs 0072  
              _SSPADD 0093                _TRISC3 043B                _TRISC4 043C                _TRISC6 043E  
              _TRISC7 043F                _SSPCON 0014                _SSPBUF 0013          ?_serial_init 0070  
              _printf 0699             ?_I2CWrite 0070        __pcstackCOMMON 0070          __pidataBANK0 0662  
       __end_of_putch 0645            ??_I2CWrite 0070               ??_putch 0070             ?_i2c_init 0070  
           ?_WaitMSSP 0070            __pmaintext 0731               _I2CRead 0786               ?_printf 0070  
             _SSPSTAT 0094               _DelayMs 06BA            ??_i2c_init 0070            ??_WaitMSSP 0070  
__size_of_serial_init 000E       __size_of_printf 0021  end_of_initialization 0695             DelayMs@Ms 0070  
             init_ram 0677               printf@c 0074               printf@f 0073     __size_of_I2CWrite 0042  
      __end_of_printf 06BA   start_initialization 0686              I2CRead@y 0074     __size_of_i2c_init 000F  
   __size_of_WaitMSSP 0009           __pdataBANK0 0020              ?_I2CRead 0070              ??_printf 0071  
         __pbssCOMMON 0076              ?_DelayMs 0070             __ptext150 06EF             __ptext151 0699  
           __ptext152 0639             __ptext153 0630             __ptext154 0645             __ptext155 0653  
           __ptext156 06BA             __ptext157 0000             __ptext149 0786             __pstrings 0003  
            _I2CWrite 06EF        __size_of_putch 000C         ??_serial_init 0070      __size_of_I2CRead 007A  
         __stringbase 0008              _i2c_init 0653      __size_of_DelayMs 0035              _WaitMSSP 0630  
           init_fetch 0673   __end_of_serial_init 0653     DelayMs@delay_cnst 0072         __size_of_main 0055  
           putch@Data 0070             stringcode 0003           _serial_init 0645              printf@ap 0072  
            stringdir 0003              stringtab 0003  
