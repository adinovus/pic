

HI-TECH Software PICC Macro Assembler V9.50PL2
                                                      Wed Oct 22 00:46:33 2014


     1                           	processor	16F877A
     2                           	opt	pw 79
     3                           	psect	text0,local,class=CODE,delta=2
     4                           	psect	text1,local,class=CODE,delta=2
     5                           	psect	text2,local,class=CODE,delta=2
     6                           	psect	text3,local,class=CODE,delta=2
     7                           	psect	text4,local,class=CODE,delta=2
     8                           	psect	text5,local,class=CODE,delta=2
     9                           	psect	text6,local,class=CODE,delta=2
    10                           	psect	text7,local,class=CODE,delta=2
    11                           	psect	text8,local,class=CODE,delta=2
    12                           	psect	text9,local,class=CODE,delta=2
    13                           	psect	text10,local,class=CODE,delta=2
    14                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19  0000                     
    20  0000                     
    21  0000                     
    22  0000                     
    23  0000                     
    24  0000                     
    25                           
    26                           	psect	text0
    27  07B0                     _I2CInit
    28                           ;i2c.c: 6: void I2CInit(void)
    29  07B0  1683               	bsf	3,5
    30  07B1  1303               	bcf	3,6	;carry unused
    31  07B2  1587               	bsf	7,3
    32                           ;i2c.c: 9: TRISC4 = 1;
    33  07B3  1607               	bsf	7,4
    34                           ;i2c.c: 10: SSPSTAT |= 0x80;
    35  07B4  1794               	bsf	20,7	;volatile
    36                           ;i2c.c: 11: SSPCON = 0x28;
    37  07B5  3028               	movlw	40
    38  07B6  1283               	bcf	3,5
    39  07B7  0094               	movwf	20	;volatile
    40                           ;i2c.c: 12: SSPADD = 0x28;
    41  07B8  1683               	bsf	3,5
    42  07B9  0093               	movwf	19	;volatile
    43                           ;i2c.c: 13: }
    44  07BA  1283               	bcf	3,5
    45  07BB  0008               	return	;W free
    46                           
    47                           	psect	text1
    48  077D                     _I2CStart
    49                           ;i2c.c: 20: void I2CStart()
    50  077D  1683               	bsf	3,5
    51  077E  1303               	bcf	3,6	;carry unused
    52  077F  1411               	bsf	17,0
    53                           ;i2c.c: 23: while(SEN);
    54  0780                     l3
    55  0780  1811               	btfsc	17,0
    56  0781  2F80               	goto	l3
    57                           ;i2c.c: 25: }
    58  0782  1283               	bcf	3,5
    59  0783  0008               	return	;W free
    60                           
    61                           	psect	text2
    62  076F                     _I2CStop
    63                           ;i2c.c: 33: void I2CStop()
    64  076F  1683               	bsf	3,5
    65  0770  1303               	bcf	3,6	;carry unused
    66  0771  1511               	bsf	17,2
    67                           ;i2c.c: 36: while(PEN);
    68  0772                     l7
    69  0772  1911               	btfsc	17,2
    70  0773  2F72               	goto	l7
    71                           ;i2c.c: 38: }
    72  0774  1283               	bcf	3,5
    73  0775  0008               	return	;W free
    74                           
    75                           	psect	text3
    76  0776                     _I2CRestart
    77                           ;i2c.c: 46: void I2CRestart()
    78  0776  1683               	bsf	3,5
    79  0777  1303               	bcf	3,6	;carry unused
    80  0778  1491               	bsf	17,1
    81                           ;i2c.c: 49: while(RSEN);
    82  0779                     l11
    83  0779  1891               	btfsc	17,1
    84  077A  2F79               	goto	l11
    85                           ;i2c.c: 50: }
    86  077B  1283               	bcf	3,5
    87  077C  0008               	return	;W free
    88                           
    89                           	psect	text4
    90  0784                     _I2CAck
    91                           ;i2c.c: 58: void I2CAck()
    92  0784  1683               	bsf	3,5
    93  0785  1303               	bcf	3,6	;carry unused
    94  0786  1291               	bcf	17,5
    95                           ;i2c.c: 61: ACKEN = 1;
    96  0787  1611               	bsf	17,4
    97                           ;i2c.c: 62: while(ACKEN);
    98  0788                     l15
    99  0788  1A11               	btfsc	17,4
   100  0789  2F88               	goto	l15
   101                           ;i2c.c: 63: }
   102  078A  1283               	bcf	3,5
   103  078B  0008               	return	;W free
   104                           
   105                           	psect	text5
   106  078C                     _I2CNak
   107                           ;i2c.c: 71: void I2CNak()
   108  078C  1683               	bsf	3,5
   109  078D  1303               	bcf	3,6	;carry unused
   110  078E  1691               	bsf	17,5
   111                           ;i2c.c: 74: ACKEN = 1;
   112  078F  1611               	bsf	17,4
   113                           ;i2c.c: 75: while(ACKEN);
   114  0790                     l19
   115  0790  1A11               	btfsc	17,4
   116  0791  2F90               	goto	l19
   117                           ;i2c.c: 76: }
   118  0792  1283               	bcf	3,5
   119  0793  0008               	return	;W free
   120                           
   121                           	psect	text6
   122  079C                     _I2CWait
   123                           ;i2c.c: 84: void I2CWait()
   124  079C                     l23
   125  079C  1683               	bsf	3,5
   126  079D  1303               	bcf	3,6	;carry unused
   127  079E  0811               	movf	17,w	;volatile
   128  079F  391F               	andlw	31
   129  07A0  1903               	btfsc	3,2
   130  07A1  1914               	btfsc	20,2	;volatile
   131  07A2  2F9C               	goto	l23
   132                           ;i2c.c: 88: }
   133  07A3  1283               	bcf	3,5
   134  07A4  0008               	return	;W free
   135                           
   136                           	psect	text7
   137  0794                     _I2CSend
   138                           ;	_dat assigned to ?a_I2CSend+0
   139  0000                     _I2CSend$dat	set	?a_I2CSend
   140                           ;_dat stored from w
   141  0794  0183               	clrf	3	;select bank 0
   142  0795  00A9               	movwf	?a_I2CSend
   143                           ;i2c.c: 97: void I2CSend(unsigned char dat)
   144  0796  0829               	movf	?a_I2CSend,w
   145  0797  0093               	movwf	19	;volatile
   146                           ;i2c.c: 100: while(STAT_BF);
   147  0798                     l27
   148  0798  1683               	bsf	3,5
   149  0799  1814               	btfsc	20,0
   150  079A  2F98               	goto	l27
   151                           ;i2c.c: 101: I2CWait();
   152  079B  2F9C               	goto	l23
   153                           
   154                           	psect	text8
   155  07A5                     _I2CRead
   156                           ;	_temp assigned to ?a_I2CRead+0
   157  0000                     _I2CRead$temp	set	?a_I2CRead
   158                           ;i2c.c: 110: unsigned char I2CRead(void)
   159  07A5  1683               	bsf	3,5
   160  07A6  1303               	bcf	3,6	;carry unused
   161  07A7  1591               	bsf	17,3
   162                           ;i2c.c: 115: while(!STAT_BF);
   163  07A8                     l31
   164  07A8  1C14               	btfss	20,0
   165  07A9  2FA8               	goto	l31
   166                           ;i2c.c: 116: temp = SSPBUF;
   167  07AA  1283               	bcf	3,5
   168  07AB  0813               	movf	19,w	;volatile
   169  07AC  00A9               	movwf	?a_I2CRead
   170                           ;i2c.c: 117: I2CWait();
   171  07AD  279C               	call	_I2CWait
   172                           ;i2c.c: 118: return temp;
   173  07AE  0829               	movf	?a_I2CRead,w
   174                           ;i2c.c: 119: }
   175  07AF  0008               	return	;uses W
   176                           
   177                           	psect	text9
   178  07BC                     _main
   179                           ;	_i assigned to ?a_main+0
   180  0000                     _main$i	set	?a_main
   181                           ;	_I2CData assigned to ?a_main+1
   182  0000                     _main$I2CData	set	?a_main+1
   183                           ;i2c.c: 122: void main()
   184  07BC  1283               	bcf	3,5
   185  07BD  1303               	bcf	3,6	;carry unused
   186  07BE  01A1               	clrf	?a_main+1
   187  07BF  01A2               	clrf	?a_main+2
   188  07C0  01A3               	clrf	?a_main+3
   189  07C1  01A4               	clrf	?a_main+4
   190  07C2  0AA4               	incf	?a_main+4
   191  07C3  01A5               	clrf	?a_main+5
   192  07C4  0AA5               	incf	?a_main+5
   193  07C5  01A6               	clrf	?a_main+6
   194  07C6  0AA6               	incf	?a_main+6
   195  07C7  3009               	movlw	9
   196  07C8  00A7               	movwf	?a_main+7
   197  07C9  01A8               	clrf	?a_main+8
   198                           ;i2c.c: 126: unsigned char i;
   199  07CA  27B0               	call	_I2CInit
   200                           ;i2c.c: 130: I2CStart();
   201  07CB  277D               	call	_I2CStart
   202                           ;i2c.c: 132: I2CSend(0xD0);
   203  07CC  30D0               	movlw	-48
   204  07CD  2794               	call	_I2CSend
   205                           ;i2c.c: 134: I2CSend(0x00);
   206  07CE  3000               	movlw	0
   207  07CF  2794               	call	_I2CSend
   208                           ;i2c.c: 137: for (i = 0; i < 8; i++)
   209  07D0  01A0               	clrf	?a_main
   210  07D1                     l35
   211                           ;i2c.c: 138: {
   212  07D1  0820               	movf	?a_main,w
   213  07D2  3E21               	addlw	?a_main+1
   214  07D3  0084               	movwf	4
   215  07D4  1383               	bcf	3,7
   216  07D5  0800               	movf	0,w
   217  07D6  2794               	call	_I2CSend
   218  07D7  0AA0               	incf	?a_main
   219  07D8  3008               	movlw	8
   220  07D9  0220               	subwf	?a_main,w
   221  07DA  1C03               	btfss	3,0
   222  07DB  2FD1               	goto	l35
   223                           ;i2c.c: 142: }
   224  07DC  276F               	call	_I2CStop
   225                           ;i2c.c: 150: I2CStart();
   226  07DD  277D               	call	_I2CStart
   227                           ;i2c.c: 152: I2CSend(0xD0);
   228  07DE  30D0               	movlw	-48
   229  07DF  2794               	call	_I2CSend
   230                           ;i2c.c: 155: I2CSend(0x00);
   231  07E0  3000               	movlw	0
   232  07E1  2794               	call	_I2CSend
   233                           ;i2c.c: 158: I2CRestart();
   234  07E2  2776               	call	_I2CRestart
   235                           ;i2c.c: 160: I2CSend(0xD1);
   236  07E3  30D1               	movlw	-47
   237  07E4  2794               	call	_I2CSend
   238                           ;i2c.c: 162: for (i = 8; i > 0; i--) {
   239  07E5  3008               	movlw	8
   240  07E6  00A0               	movwf	?a_main
   241  07E7                     l38
   242                           ;i2c.c: 164: I2CData[i] = I2CRead();
   243  07E7  0820               	movf	?a_main,w
   244  07E8  3E21               	addlw	?a_main+1
   245  07E9  0084               	movwf	4
   246  07EA  1383               	bcf	3,7
   247  07EB  27A5               	call	_I2CRead
   248  07EC  1383               	bcf	3,7
   249  07ED  0080               	movwf	0
   250                           ;i2c.c: 167: if (i - 1)
   251  07EE  0820               	movf	?a_main,w
   252  07EF  00F0               	movwf	btemp
   253  07F0  01F1               	clrf	btemp+1
   254  07F1  30FF               	movlw	-1
   255  07F2  07F0               	addwf	btemp
   256  07F3  1C03               	btfss	3,0
   257  07F4  07F1               	addwf	btemp+1
   258  07F5  0871               	movf	btemp+1,w
   259  07F6  0470               	iorwf	btemp,w
   260  07F7  1903               	btfsc	3,2
   261  07F8  2FFB               	goto	l41
   262                           ;i2c.c: 168: I2CAck();
   263  07F9  2784               	call	_I2CAck
   264  07FA  2FFC               	goto	l42
   265  07FB                     l41
   266                           ;i2c.c: 169: else
   267  07FB  278C               	call	_I2CNak
   268  07FC                     l42
   269  07FC  0BA0               	decfsz	?a_main
   270  07FD  2FE7               	goto	l38
   271                           ;i2c.c: 171: }
   272  07FE  276F               	call	_I2CStop
   273                           ;i2c.c: 175: while(1);
   274  07FF                     l43
   275  07FF  2FFF               	goto	l43
   276                           
   277                           	psect	text10
   278  0000                     
   279  0000                     
   280  0000                     
   281  0000                     
   282  0000                     
   283  0000                     
   284  0000                     
   285  0000                     
   286  0000                     
   287  0000                     
   288  0000                     
   289  0000                     
   290  0000                     
   291  0000                     
   292  0000                     
   293  0000                     
   294  0000                     
   295  0000                     
   296  0000                     
   297  0000                     
   298  0000                     
   299  0000                     
   300  0000                     
   301  0000                     
   302  0000                     
   303  0000                     
   304  0000                     
   305  0000                     
   306  0000                     
   307  0000                     
   308  0000                     
   309  0000                     
   310  0000                     
   311  0000                     
   312  0000                     
   313  0000                     
   314  0000                     
   315  0000                     
   316  0000                     
   317  0000                     
   318  0000                     
   319  0000                     
   320  0000                     
   321  0000                     
   322  0000                     
   323  0000                     
   324  0000                     
   325  0000                     
   326  0000                     
   327  0000                     
   328  0000                     
   329  0000                     
   330  0000                     
   331  0000                     
   332  0000                     
   333  0000                     
   334  0000                     
   335  0000                     
   336  0000                     
   337  0000                     
   338  0000                     
   339  0000                     
   340  0000                     
   341  0000                     
   342  0000                     
   343  0000                     
   344  0000                     
   345  0000                     
   346  0000                     
   347  0000                     
   348  0000                     
   349  0000                     
   350  0000                     
   351  0000                     
   352  0000                     
   353  0000                     
   354  0000                     
   355  0000                     
   356  0000                     
   357  0000                     
   358  0000                     
   359  0000                     
   360  0000                     
   361  0000                     
   362  0000                     
   363  0000                     
   364  0000                     
   365  0000                     
   366  0000                     
   367  0000                     
   368  0000                     
   369  0000                     
   370  0000                     
   371  0000                     
   372  0000                     
   373  0000                     
   374  0000                     
   375  0000                     
   376  0000                     
   377  0000                     
   378  0000                     
   379  0000                     
   380  0000                     
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554                           
   555                           	psect	temp
   556  0070                     btemp
   557  0070                     	ds	2


HI-TECH Software PICC Macro Assembler V9.50PL2
Symbol Table                                          Wed Oct 22 00:46:33 2014

      ?a_main 0020             l3 0780             l7 0772  
      _I2CAck 0784        _I2CNak 078C            l11 0779  
          l31 07A8            l23 079C            l15 0788  
          l41 07FB            l42 07FC            l43 07FF  
          l35 07D1            l27 0798            l19 0790  
          l38 07E7            fsr 0004       _I2CInit 07B0  
     _I2CRead 07A5       _I2CSend 0794       _I2CWait 079C  
     _I2CStop 076F      _I2CStart 077D          _main 07BC  
        btemp 0070          start 0000         status 0003  
   ?a_I2CRead 0029    _I2CRestart 0776     ?a_I2CSend 0029  
  used_btemp0 0001    used_btemp1 0001  
