

HI-TECH Software PICC Macro Assembler V9.50PL2
                                                      Wed Oct 22 00:27:36 2014


     1                           	processor	16F877A
     2                           	opt	pw 79
     3                           	psect	text0,local,class=CODE,delta=2
     4                           	psect	text1,local,class=CODE,delta=2
     5                           	psect	text2,local,class=CODE,delta=2
     6                           	psect	text3,local,class=CODE,delta=2
     7                           	psect	text4,local,class=CODE,delta=2
     8                           	psect	text5,local,class=CODE,delta=2
     9                           	psect	text6,local,class=CODE,delta=2
    10                           	psect	text7,local,class=CODE,delta=2
    11                           	psect	text8,local,class=CODE,delta=2
    12                           	psect	text9,local,class=CODE,delta=2
    13                           	psect	text10,local,class=CODE,delta=2
    14                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19  0000                     
    20  0000                     
    21  0000                     
    22  0000                     
    23  0000                     
    24  0000                     
    25                           
    26                           	psect	text0
    27  077C                     _i2c_init
    28                           ;eeprom.c: 5: void i2c_init( void )
    29  077C  1683               	bsf	3,5
    30  077D  1303               	bcf	3,6	;carry unused
    31  077E  1587               	bsf	7,3
    32                           ;eeprom.c: 8: TRISC4 = 1;
    33  077F  1607               	bsf	7,4
    34                           ;eeprom.c: 9: SSPADD = 0x04;
    35  0780  3004               	movlw	4
    36  0781  0093               	movwf	19	;volatile
    37                           ;eeprom.c: 10: SSPSTAT = 0b10000000;
    38  0782  3080               	movlw	-128
    39  0783  0094               	movwf	20	;volatile
    40                           ;eeprom.c: 11: SSPCON2 = 0b000000000;
    41  0784  0191               	clrf	17	;volatile
    42                           ;eeprom.c: 12: SSPCON = 0b00101000;
    43  0785  3028               	movlw	40
    44  0786  1283               	bcf	3,5
    45  0787  0094               	movwf	20	;volatile
    46                           ;eeprom.c: 13: }
    47  0788  0008               	return	;W free
    48                           
    49                           	psect	text1
    50  0789                     _i2c_idle
    51                           ;eeprom.c: 16: void i2c_idle( void )
    52  0789                     l3
    53  0789  1683               	bsf	3,5
    54  078A  1303               	bcf	3,6	;carry unused
    55  078B  0811               	movf	17,w	;volatile
    56  078C  391F               	andlw	31
    57  078D  00F0               	movwf	btemp
    58  078E  01F1               	clrf	btemp+1
    59  078F  3000               	movlw	0
    60  0790  1914               	btfsc	20,2
    61  0791  3001               	movlw	1
    62  0792  04F0               	iorwf	btemp
    63  0793  0871               	movf	btemp+1,w
    64  0794  0470               	iorwf	btemp,w
    65  0795  1D03               	btfss	3,2
    66  0796  2F89               	goto	l3
    67                           ;eeprom.c: 19: }
    68  0797  1283               	bcf	3,5
    69  0798  0008               	return	;W free
    70                           
    71                           	psect	text2
    72  0760                     _i2c_start
    73                           ;eeprom.c: 22: void i2c_start( void )
    74  0760  1683               	bsf	3,5
    75  0761  1303               	bcf	3,6	;carry unused
    76  0762  1411               	bsf	17,0
    77                           ;eeprom.c: 25: while( SEN );
    78  0763                     l7
    79  0763  1811               	btfsc	17,0
    80  0764  2F63               	goto	l7
    81                           ;eeprom.c: 26: }
    82  0765  1283               	bcf	3,5
    83  0766  0008               	return	;W free
    84                           
    85                           	psect	text3
    86  0752                     _i2c_repstart
    87                           ;eeprom.c: 29: void i2c_repstart( void )
    88  0752  1683               	bsf	3,5
    89  0753  1303               	bcf	3,6	;carry unused
    90  0754  1491               	bsf	17,1
    91                           ;eeprom.c: 32: while( RSEN );
    92  0755                     l11
    93  0755  1891               	btfsc	17,1
    94  0756  2F55               	goto	l11
    95                           ;eeprom.c: 33: }
    96  0757  1283               	bcf	3,5
    97  0758  0008               	return	;W free
    98                           
    99                           	psect	text4
   100  0759                     _i2c_stop
   101                           ;eeprom.c: 36: void i2c_stop( void )
   102  0759  1683               	bsf	3,5
   103  075A  1303               	bcf	3,6	;carry unused
   104  075B  1511               	bsf	17,2
   105                           ;eeprom.c: 39: while( PEN );
   106  075C                     l15
   107  075C  1911               	btfsc	17,2
   108  075D  2F5C               	goto	l15
   109                           ;eeprom.c: 40: }
   110  075E  1283               	bcf	3,5
   111  075F  0008               	return	;W free
   112                           
   113                           	psect	text5
   114  076F                     _i2c_write
   115                           ;	_data assigned to ?a_i2c_write+0
   116  0000                     _i2c_write$data	set	?a_i2c_write
   117                           ;_data stored from w
   118  076F  0183               	clrf	3	;select bank 0
   119  0770  00A5               	movwf	?a_i2c_write
   120                           ;eeprom.c: 43: unsigned char i2c_write( unsigne
      +                          d char data )
   121  0771  2789               	call	_i2c_idle
   122                           ;eeprom.c: 46: SSPBUF = data;
   123  0772  0825               	movf	?a_i2c_write,w
   124  0773  0093               	movwf	19	;volatile
   125                           ;eeprom.c: 47: while( STAT_BF );
   126  0774                     l19
   127  0774  1683               	bsf	3,5
   128  0775  1814               	btfsc	20,0
   129  0776  2F74               	goto	l19
   130                           ;eeprom.c: 48: return( !ACKSTAT );
   131  0777  3000               	movlw	0
   132  0778  1F11               	btfss	17,6
   133  0779  3001               	movlw	1
   134                           ;eeprom.c: 49: }
   135  077A  1283               	bcf	3,5
   136  077B  0008               	return	;uses W
   137                           
   138                           	psect	text6
   139  07BF                     _i2c_read
   140                           ;	_ack assigned to ?a_i2c_read+0
   141  0000                     _i2c_read$ack	set	?a_i2c_read
   142                           ;	_data assigned to ?a_i2c_read+1
   143  0000                     _i2c_read$data	set	?a_i2c_read+1
   144                           ;_ack stored from w
   145  07BF  0183               	clrf	3	;select bank 0
   146  07C0  00A5               	movwf	?a_i2c_read
   147                           ;eeprom.c: 52: unsigned char i2c_read( unsigned
      +                           char ack )
   148  07C1  2789               	call	_i2c_idle
   149                           ;eeprom.c: 57: RCEN = 1;
   150  07C2  1683               	bsf	3,5
   151  07C3  1591               	bsf	17,3
   152                           ;eeprom.c: 58: while( RCEN );
   153  07C4                     l23
   154  07C4  1991               	btfsc	17,3
   155  07C5  2FC4               	goto	l23
   156                           ;eeprom.c: 59: data = SSPBUF;
   157  07C6  1283               	bcf	3,5
   158  07C7  0813               	movf	19,w	;volatile
   159  07C8  00A6               	movwf	?a_i2c_read+1
   160                           ;eeprom.c: 60: ACKDT = ~ack;
   161  07C9  0C25               	rrf	?a_i2c_read,w
   162  07CA  1683               	bsf	3,5
   163  07CB  1803               	btfsc	3,0
   164  07CC  2FCF               	goto	L1
   165  07CD  1691               	bsf	17,5
   166  07CE  2FD0               	goto	u84
   167  07CF                     L1
   168  07CF  1291               	bcf	17,5
   169  07D0                     u84
   170                           ;eeprom.c: 61: ACKEN = 1;
   171  07D0  1303               	bcf	3,6	;carry unused
   172  07D1  1611               	bsf	17,4
   173                           ;eeprom.c: 62: while( ACKEN );
   174  07D2                     l26
   175  07D2  1A11               	btfsc	17,4
   176  07D3  2FD2               	goto	l26
   177                           ;eeprom.c: 63: return data;
   178  07D4  1283               	bcf	3,5
   179  07D5  0826               	movf	?a_i2c_read+1,w
   180                           ;eeprom.c: 64: }
   181  07D6  0008               	return	;uses W
   182                           
   183                           	psect	text7
   184  0799                     _i2c_eeprom_write
   185                           ;	_addr_high assigned to ?a_i2c_eeprom_write+0
   186  0000                     _i2c_eeprom_write$addr_high	set	?a_i2c_eeprom_w
      +                          rite
   187                           ;	_addr_low assigned to ?a_i2c_eeprom_write+1
   188  0000                     _i2c_eeprom_write$addr_low	set	?a_i2c_eeprom_wr
      +                          ite+1
   189                           ;eeprom.c: 66: void i2c_eeprom_write( unsigned 
      +                          int address, unsigned char data )
   190  0799  0183               	clrf	3	;select bank 0
   191  079A  0821               	movf	?_i2c_eeprom_write+1,w
   192  079B  00A3               	movwf	?a_i2c_eeprom_write
   193                           ;eeprom.c: 72: addr_low = (unsigned char)( addr
      +                          ess );
   194  079C  0820               	movf	?_i2c_eeprom_write,w
   195  079D  00A4               	movwf	?a_i2c_eeprom_write+1
   196                           ;eeprom.c: 74: i2c_idle();
   197  079E  2789               	call	_i2c_idle
   198                           ;eeprom.c: 75: i2c_start();
   199  079F  2760               	call	_i2c_start
   200                           ;eeprom.c: 76: i2c_write( 0xa0 );
   201  07A0  30A0               	movlw	-96
   202  07A1  276F               	call	_i2c_write
   203                           ;eeprom.c: 77: i2c_write( addr_high );
   204  07A2  0823               	movf	?a_i2c_eeprom_write,w
   205  07A3  276F               	call	_i2c_write
   206                           ;eeprom.c: 78: i2c_write( addr_low );
   207  07A4  0824               	movf	?a_i2c_eeprom_write+1,w
   208  07A5  276F               	call	_i2c_write
   209                           ;eeprom.c: 79: i2c_write( data );
   210  07A6  0822               	movf	?_i2c_eeprom_write+2,w
   211  07A7  276F               	call	_i2c_write
   212                           ;eeprom.c: 80: i2c_stop();
   213  07A8  2F59               	goto	_i2c_stop
   214                           
   215                           	psect	text8
   216  07A9                     _i2c_eeprom_read
   217                           ;	_addr_high assigned to ?a_i2c_eeprom_read+0
   218  0000                     _i2c_eeprom_read$addr_high	set	?a_i2c_eeprom_re
      +                          ad
   219                           ;	_addr_low assigned to ?a_i2c_eeprom_read+1
   220  0000                     _i2c_eeprom_read$addr_low	set	?a_i2c_eeprom_rea
      +                          d+1
   221                           ;	_data assigned to ?a_i2c_eeprom_read+2
   222  0000                     _i2c_eeprom_read$data	set	?a_i2c_eeprom_read+2
   223                           ;eeprom.c: 83: unsigned char i2c_eeprom_read( u
      +                          nsigned int address )
   224  07A9  0183               	clrf	3	;select bank 0
   225  07AA  0821               	movf	?_i2c_eeprom_read+1,w
   226  07AB  00A2               	movwf	?a_i2c_eeprom_read
   227                           ;eeprom.c: 90: addr_low = (unsigned char)( addr
      +                          ess );
   228  07AC  0820               	movf	?_i2c_eeprom_read,w
   229  07AD  00A3               	movwf	?a_i2c_eeprom_read+1
   230                           ;eeprom.c: 92: i2c_idle();
   231  07AE  2789               	call	_i2c_idle
   232                           ;eeprom.c: 93: i2c_start();
   233  07AF  2760               	call	_i2c_start
   234                           ;eeprom.c: 94: i2c_write( 0xa0 );
   235  07B0  30A0               	movlw	-96
   236  07B1  276F               	call	_i2c_write
   237                           ;eeprom.c: 95: i2c_write( addr_high );
   238  07B2  0822               	movf	?a_i2c_eeprom_read,w
   239  07B3  276F               	call	_i2c_write
   240                           ;eeprom.c: 96: i2c_write( addr_low );
   241  07B4  0823               	movf	?a_i2c_eeprom_read+1,w
   242  07B5  276F               	call	_i2c_write
   243                           ;eeprom.c: 97: i2c_repstart();
   244  07B6  2752               	call	_i2c_repstart
   245                           ;eeprom.c: 98: i2c_write( 0xa1 );
   246  07B7  30A1               	movlw	-95
   247  07B8  276F               	call	_i2c_write
   248                           ;eeprom.c: 99: data = i2c_read( 0 );
   249  07B9  3000               	movlw	0
   250  07BA  27BF               	call	_i2c_read
   251  07BB  00A4               	movwf	?a_i2c_eeprom_read+2
   252                           ;eeprom.c: 100: i2c_stop();
   253  07BC  2759               	call	_i2c_stop
   254                           ;eeprom.c: 102: return data;
   255  07BD  0824               	movf	?a_i2c_eeprom_read+2,w
   256                           ;eeprom.c: 103: }
   257  07BE  0008               	return	;uses W
   258                           
   259                           	psect	text9
   260  07D7                     _main
   261                           ;eeprom.c: 105: void main( void )
   262  07D7  3006               	movlw	6
   263  07D8  1683               	bsf	3,5
   264  07D9  1303               	bcf	3,6	;carry unused
   265  07DA  009F               	movwf	31	;volatile
   266                           ;eeprom.c: 108: TRISA = 0b010000;
   267  07DB  3010               	movlw	16
   268  07DC  0085               	movwf	5	;volatile
   269                           ;eeprom.c: 109: TRISB = 0x00;
   270  07DD  0186               	clrf	6	;volatile
   271                           ;eeprom.c: 110: TRISD = 0x00;
   272  07DE  0188               	clrf	8	;volatile
   273                           ;eeprom.c: 112: OPTION = 0b11110101;
   274  07DF  30F5               	movlw	-11
   275  07E0  0081               	movwf	1
   276                           ;eeprom.c: 114: i2c_init();
   277  07E1  277C               	call	_i2c_init
   278                           ;eeprom.c: 117: i2c_eeprom_write( 0x00, 0x12 );
   279  07E2  01A0               	clrf	?_i2c_eeprom_write
   280  07E3  01A1               	clrf	?_i2c_eeprom_write+1
   281  07E4  3012               	movlw	18
   282  07E5  00A2               	movwf	?_i2c_eeprom_write+2
   283  07E6  2799               	call	_i2c_eeprom_write
   284                           ;eeprom.c: 118: delay_ms( 10 );
   285  07E7  300A               	movlw	10
   286  07E8  00A0               	movwf	?_delay_ms
   287  07E9  01A1               	clrf	?_delay_ms+1
   288  07EA  2000               	call	_delay_ms
   289                           ;eeprom.c: 119: PORTD = i2c_eeprom_read( 0x00 )
      +                          ;
   290  07EB  01A0               	clrf	?_i2c_eeprom_read
   291  07EC  01A1               	clrf	?_i2c_eeprom_read+1
   292  07ED  27A9               	call	_i2c_eeprom_read
   293  07EE  0088               	movwf	8	;volatile
   294  07EF                     l33
   295                           ;eeprom.c: 121: while( 1 )
   296                           ;eeprom.c: 122: {
   297  07EF  1D0B               	btfss	11,2
   298  07F0  2FEF               	goto	l33
   299                           ;eeprom.c: 124: {
   300  07F1  110B               	bcf	11,2
   301                           ;eeprom.c: 126: PORTD = i2c_rtc_read( 0x00 );
   302  07F2  1283               	bcf	3,5
   303  07F3  1303               	bcf	3,6	;carry unused
   304  07F4  01A0               	clrf	?_i2c_rtc_read
   305  07F5  01A1               	clrf	?_i2c_rtc_read+1
   306  07F6  2000               	call	_i2c_rtc_read
   307  07F7  0870               	movf	btemp,w
   308  07F8  0088               	movwf	8	;volatile
   309                           ;eeprom.c: 127: PORTB = i2c_rtc_read( 0x01 );
   310  07F9  01A0               	clrf	?_i2c_rtc_read
   311  07FA  0AA0               	incf	?_i2c_rtc_read
   312  07FB  01A1               	clrf	?_i2c_rtc_read+1
   313  07FC  2000               	call	_i2c_rtc_read
   314  07FD  0870               	movf	btemp,w
   315  07FE  0086               	movwf	6	;volatile
   316  07FF  2FEF               	goto	l33
   317                           
   318                           	psect	text10
   319  0000                     
   320  0000                     
   321  0000                     
   322  0000                     
   323  0000                     
   324  0000                     
   325  0000                     
   326  0000                     
   327  0000                     
   328  0000                     
   329  0000                     
   330  0000                     
   331  0000                     
   332  0000                     
   333  0000                     
   334  0000                     
   335  0000                     
   336  0000                     
   337  0000                     
   338  0000                     
   339  0000                     
   340  0000                     
   341  0000                     
   342  0000                     
   343  0000                     
   344  0000                     
   345  0000                     
   346  0000                     
   347  0000                     
   348  0000                     
   349  0000                     
   350  0000                     
   351  0000                     
   352  0000                     
   353  0000                     
   354  0000                     
   355  0000                     
   356  0000                     
   357  0000                     
   358  0000                     
   359  0000                     
   360  0000                     
   361  0000                     
   362  0000                     
   363  0000                     
   364  0000                     
   365  0000                     
   366  0000                     
   367  0000                     
   368  0000                     
   369  0000                     
   370  0000                     
   371  0000                     
   372  0000                     
   373  0000                     
   374  0000                     
   375  0000                     
   376  0000                     
   377  0000                     
   378  0000                     
   379  0000                     
   380  0000                     
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579  0000                     
   580  0000                     
   581  0000                     
   582  0000                     
   583  0000                     
   584  0000                     
   585  0000                     
   586  0000                     
   587  0000                     
   588  0000                     
   589  0000                     
   590  0000                     
   591  0000                     
   592  0000                     
   593  0000                     
   594  0000                     
   595                           
   596                           	psect	temp
   597  0070                     btemp
   598  0070                     	ds	2


HI-TECH Software PICC Macro Assembler V9.50PL2
Symbol Table                                          Wed Oct 22 00:27:36 2014

                  _delay_ms 0000                           l3 0789  
                         l7 0763                          l11 0755  
                        l23 07C4                          l15 075C  
                        l33 07EF                          l26 07D2  
                        l19 0774          ?a_i2c_eeprom_write 0023  
                        u84 07D0             _i2c_eeprom_read 07A9  
                ?a_i2c_read 0025            _i2c_eeprom_write 0799  
                 ?_delay_ms 0020                 ?a_i2c_write 0025  
                      _main 07D7                        btemp 0070  
                      start 0000           ?_i2c_eeprom_write 0020  
             ?_i2c_rtc_read 0020                   _i2c_start 0760  
                 _i2c_write 076F           ?a_i2c_eeprom_read 0022  
          ?_i2c_eeprom_read 0020                       status 0003  
                  _i2c_idle 0789                    _i2c_init 077C  
                  _i2c_read 07BF                    _i2c_stop 0759  
              _i2c_repstart 0752                _i2c_rtc_read 0000  
                used_btemp0 0001                  used_btemp1 0001  
